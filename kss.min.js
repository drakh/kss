"use strict";var THREE={REVISION:"67"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};(function(){for(var e=0,d=["ms","moz","webkit","o"],f=0;f<d.length&&!self.requestAnimationFrame;++f){self.requestAnimationFrame=self[d[f]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[d[f]+"CancelAnimationFrame"]||self[d[f]+"CancelRequestAnimationFrame"]}void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(a){var j=Date.now(),i=Math.max(0,16-(j-e)),h=self.setTimeout(function(){a(j+i)},i);e=j+i;return h});void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(b){self.clearTimeout(b)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(b){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(b)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(b){b instanceof THREE.Color?this.copy(b):"number"===typeof b?this.setHex(b):"string"===typeof b&&this.setStyle(b);return this},setHex:function(b){b=Math.floor(b);this.r=(b>>16&255)/255;this.g=(b>>8&255)/255;this.b=(b&255)/255;return this},setRGB:function(e,d,f){this.r=e;this.g=d;this.b=f;return this},setHSL:function(f,e,h){if(0===e){this.r=this.g=this.b=h}else{var g=function(i,d,j){0>j&&(j+=1);1<j&&(j-=1);return j<1/6?i+6*(d-i)*j:0.5>j?d:j<2/3?i+6*(d-i)*(2/3-j):i};e=0.5>=h?h*(1+e):h+e-h*e;h=2*h-e;this.r=g(h,e,f+1/3);this.g=g(h,e,f);this.b=g(h,e,f-1/3)}return this},setStyle:function(b){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(b)){return b=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(b),this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(b)){return b=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(b),this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(b)){return b=/^\#([0-9a-f]{6})$/i.exec(b),this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){return b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b),this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(b)){return this.setHex(THREE.ColorKeywords[b]),this}},copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;return this},copyGammaToLinear:function(b){this.r=b.r*b.r;this.g=b.g*b.g;this.b=b.b*b.b;return this},copyLinearToGamma:function(b){this.r=Math.sqrt(b.r);this.g=Math.sqrt(b.g);this.b=Math.sqrt(b.b);return this},convertGammaToLinear:function(){var e=this.r,d=this.g,f=this.b;this.r=e*e;this.g=d*d;this.b=f*f;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(r){r=r||{h:0,s:0,l:0};var q=this.r,p=this.g,o=this.b,n=Math.max(q,p,o),m=Math.min(q,p,o),l,j=(m+n)/2;if(m===n){m=l=0}else{var i=n-m,m=0.5>=j?i/(n+m):i/(2-n-m);switch(n){case q:l=(p-o)/i+(p<o?6:0);break;case p:l=(o-q)/i+2;break;case o:l=(q-p)/i+4}l/=6}r.h=l;r.s=m;r.l=j;return r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(f,e,h){var g=this.getHSL();g.h+=f;g.s+=e;g.l+=h;this.setHSL(g.h,g.s,g.l);return this},add:function(b){this.r+=b.r;this.g+=b.g;this.b+=b.b;return this},addColors:function(d,c){this.r=d.r+c.r;this.g=d.g+c.g;this.b=d.b+c.b;return this},addScalar:function(b){this.r+=b;this.g+=b;this.b+=b;return this},multiply:function(b){this.r*=b.r;this.g*=b.g;this.b*=b.b;return this},multiplyScalar:function(b){this.r*=b;this.g*=b;this.b*=b;return this},lerp:function(d,c){this.r+=(d.r-this.r)*c;this.g+=(d.g-this.g)*c;this.b+=(d.b-this.b)*c;return this},equals:function(b){return b.r===this.r&&b.g===this.g&&b.b===this.b},fromArray:function(b){this.r=b[0];this.g=b[1];this.b=b[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(f,e,h,g){this._x=f||0;this._y=e||0;this._z=h||0;this._w=void 0!==g?g:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(b){this._x=b;this.onChangeCallback()},get y(){return this._y},set y(b){this._y=b;this.onChangeCallback()},get z(){return this._z},set z(b){this._z=b;this.onChangeCallback()},get w(){return this._w},set w(b){this._w=b;this.onChangeCallback()},set:function(f,e,h,g){this._x=f;this._y=e;this._z=h;this._w=g;this.onChangeCallback();return this},copy:function(b){this._x=b._x;this._y=b._y;this._z=b._z;this._w=b._w;this.onChangeCallback();return this},setFromEuler:function(j,i){if(!1===j instanceof THREE.Euler){throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.")}var p=Math.cos(j._x/2),o=Math.cos(j._y/2),n=Math.cos(j._z/2),m=Math.sin(j._x/2),l=Math.sin(j._y/2),k=Math.sin(j._z/2);"XYZ"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n-m*l*k):"YXZ"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n+m*l*k):"ZXY"===j.order?(this._x=m*o*n-p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n-m*l*k):"ZYX"===j.order?(this._x=m*o*n-p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n+m*l*k):"YZX"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n-m*l*k):"XZY"===j.order&&(this._x=m*o*n-p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n+m*l*k);if(!1!==i){this.onChangeCallback()}return this},setFromAxisAngle:function(f,e){var h=e/2,g=Math.sin(h);this._x=f.x*g;this._y=f.y*g;this._z=f.z*g;this._w=Math.cos(h);this.onChangeCallback();return this},setFromRotationMatrix:function(t){var s=t.elements,r=s[0];t=s[4];var q=s[8],p=s[1],o=s[5],n=s[9],m=s[2],j=s[6],s=s[10],i=r+o+s;0<i?(r=0.5/Math.sqrt(i+1),this._w=0.25/r,this._x=(j-n)*r,this._y=(q-m)*r,this._z=(p-t)*r):r>o&&r>s?(r=2*Math.sqrt(1+r-o-s),this._w=(j-n)/r,this._x=0.25*r,this._y=(t+p)/r,this._z=(q+m)/r):o>s?(r=2*Math.sqrt(1+o-r-s),this._w=(q-m)/r,this._x=(t+p)/r,this._y=0.25*r,this._z=(n+j)/r):(r=2*Math.sqrt(1+s-r-o),this._w=(p-t)/r,this._x=(q+m)/r,this._y=(n+j)/r,this._z=0.25*r);this.onChangeCallback();return this},setFromUnitVectors:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector3);c=b.dot(a)+1;0.000001>c?(c=0,Math.abs(b.x)>Math.abs(b.z)?d.set(-b.y,b.x,0):d.set(0,-b.z,b.y)):d.crossVectors(b,a);this._x=d.x;this._y=d.y;this._z=d.z;this._w=c;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var b=this.length();0===b?(this._z=this._y=this._x=0,this._w=1):(b=1/b,this._x*=b,this._y*=b,this._z*=b,this._w*=b);this.onChangeCallback();return this},multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(d,c)):this.multiplyQuaternions(this,d)},multiplyQuaternions:function(t,s){var r=t._x,q=t._y,p=t._z,o=t._w,n=s._x,m=s._y,j=s._z,i=s._w;this._x=r*i+o*n+q*j-p*m;this._y=q*i+o*m+p*n-r*j;this._z=p*i+o*j+r*m-q*n;this._w=o*i-r*n-q*m-p*j;this.onChangeCallback();return this},multiplyVector3:function(b){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return b.applyQuaternion(this)},slerp:function(r,q){var p=this._x,o=this._y,n=this._z,m=this._w,l=m*r._w+p*r._x+o*r._y+n*r._z;0>l?(this._w=-r._w,this._x=-r._x,this._y=-r._y,this._z=-r._z,l=-l):this.copy(r);if(1<=l){return this._w=m,this._x=p,this._y=o,this._z=n,this}var j=Math.acos(l),i=Math.sqrt(1-l*l);if(0.001>Math.abs(i)){return this._w=0.5*(m+this._w),this._x=0.5*(p+this._x),this._y=0.5*(o+this._y),this._z=0.5*(n+this._z),this}l=Math.sin((1-q)*j)/i;j=Math.sin(q*j)/i;this._w=m*l+this._w*j;this._x=p*l+this._x*j;this._y=o*l+this._y*j;this._z=n*l+this._z*j;this.onChangeCallback();return this},equals:function(b){return b._x===this._x&&b._y===this._y&&b._z===this._z&&b._w===this._w},fromArray:function(b){this._x=b[0];this._y=b[1];this._z=b[2];this._w=b[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(b){this.onChangeCallback=b;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(f,e,h,g){return h.copy(f).slerp(e,g)};THREE.Vector2=function(d,c){this.x=d||0;this.y=c||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(d,c){this.x=d;this.y=c;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScalar:function(b){this.x+=b;this.y+=b;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiply:function(b){this.x*=b.x;this.y*=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divide:function(b){this.x/=b.x;this.y/=b.y;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b):this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector2,c=new THREE.Vector2);d.set(b,b);c.set(a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(d){var c=this.x-d.x;d=this.y-d.y;return c*c+d*d},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y},fromArray:function(b){this.x=b[0];this.y=b[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,d,f){this.x=e||0;this.y=d||0;this.z=f||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,d,f){this.x=e;this.y=d;this.z=f;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(d,c)}this.x*=d.x;this.y*=d.y;this.z*=d.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyEuler:function(){var b;return function(a){!1===a instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");void 0===b&&(b=new THREE.Quaternion);this.applyQuaternion(b.setFromEuler(a));return this}}(),applyAxisAngle:function(){var b;return function(a,d){void 0===b&&(b=new THREE.Quaternion);this.applyQuaternion(b.setFromAxisAngle(a,d));return this}}(),applyMatrix3:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[3]*h+f[6]*g;this.y=f[1]*e+f[4]*h+f[7]*g;this.z=f[2]*e+f[5]*h+f[8]*g;return this},applyMatrix4:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g+f[12];this.y=f[1]*e+f[5]*h+f[9]*g+f[13];this.z=f[2]*e+f[6]*h+f[10]*g+f[14];return this},applyProjection:function(g){var f=this.x,j=this.y,i=this.z;g=g.elements;var h=1/(g[3]*f+g[7]*j+g[11]*i+g[15]);this.x=(g[0]*f+g[4]*j+g[8]*i+g[12])*h;this.y=(g[1]*f+g[5]*j+g[9]*i+g[13])*h;this.z=(g[2]*f+g[6]*j+g[10]*i+g[14])*h;return this},applyQuaternion:function(t){var s=this.x,r=this.y,q=this.z,p=t.x,o=t.y,n=t.z;t=t.w;var m=t*s+o*q-n*r,j=t*r+n*s-p*q,i=t*q+p*r-o*s,s=-p*s-o*r-n*q;this.x=m*t+s*-p+j*-n-i*-o;this.y=j*t+s*-o+i*-p-m*-n;this.z=i*t+s*-n+m*-o-j*-p;return this},transformDirection:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g;this.y=f[1]*e+f[5]*h+f[9]*g;this.z=f[2]*e+f[6]*h+f[10]*g;this.normalize();return this},divide:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b,this.z*=b):this.z=this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector3,c=new THREE.Vector3);d.set(b,b,b);c.set(a,a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;return this},cross:function(g,f){if(void 0!==f){return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(g,f)}var j=this.x,i=this.y,h=this.z;this.x=i*g.z-h*g.y;this.y=h*g.x-j*g.z;this.z=j*g.y-i*g.x;return this},crossVectors:function(j,i){var p=j.x,o=j.y,n=j.z,m=i.x,l=i.y,k=i.z;this.x=o*k-n*l;this.y=n*m-p*k;this.z=p*l-o*m;return this},projectOnVector:function(){var d,c;return function(a){void 0===d&&(d=new THREE.Vector3);d.copy(a).normalize();c=this.dot(d);return this.copy(d).multiplyScalar(c)}}(),projectOnPlane:function(){var b;return function(a){void 0===b&&(b=new THREE.Vector3);b.copy(this).projectOnVector(a);return this.sub(b)}}(),reflect:function(){var b;return function(a){void 0===b&&(b=new THREE.Vector3);return this.sub(b.copy(a).multiplyScalar(2*this.dot(a)))}}(),angleTo:function(b){b=this.dot(b)/(this.length()*b.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(e){var d=this.x-e.x,f=this.y-e.y;e=this.z-e.z;return d*d+f*f+e*e},setEulerFromRotationMatrix:function(d,c){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(d,c){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(b){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(b)},getScaleFromMatrix:function(b){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");return this.setFromMatrixScale(b)},getColumnFromMatrix:function(d,c){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(d,c)},setFromMatrixPosition:function(b){this.x=b.elements[12];this.y=b.elements[13];this.z=b.elements[14];return this},setFromMatrixScale:function(e){var d=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),f=this.set(e.elements[4],e.elements[5],e.elements[6]).length();e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=d;this.y=f;this.z=e;return this},setFromMatrixColumn:function(f,e){var h=4*f,g=e.elements;this.x=g[h];this.y=g[h+1];this.z=g[h+2];return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setW:function(b){this.w=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;case 3:this.w=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=void 0!==b.w?b.w:1;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;this.w+=d.w;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;this.w+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;this.w-=d.w;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},applyMatrix4:function(g){var f=this.x,j=this.y,i=this.z,h=this.w;g=g.elements;this.x=g[0]*f+g[4]*j+g[8]*i+g[12]*h;this.y=g[1]*f+g[5]*j+g[9]*i+g[13]*h;this.z=g[2]*f+g[6]*j+g[10]*i+g[14]*h;this.w=g[3]*f+g[7]*j+g[11]*i+g[15]*h;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(d){this.w=2*Math.acos(d.w);var c=Math.sqrt(1-d.w*d.w);0.0001>c?(this.x=1,this.z=this.y=0):(this.x=d.x/c,this.y=d.y/c,this.z=d.z/c);return this},setAxisAngleFromRotationMatrix:function(t){var s,r,q;t=t.elements;var p=t[0];q=t[4];var o=t[8],n=t[1],m=t[5],j=t[9];r=t[2];s=t[6];var i=t[10];if(0.01>Math.abs(q-n)&&0.01>Math.abs(o-r)&&0.01>Math.abs(j-s)){if(0.1>Math.abs(q+n)&&0.1>Math.abs(o+r)&&0.1>Math.abs(j+s)&&0.1>Math.abs(p+m+i-3)){return this.set(1,0,0,0),this}t=Math.PI;p=(p+1)/2;m=(m+1)/2;i=(i+1)/2;q=(q+n)/4;o=(o+r)/4;j=(j+s)/4;p>m&&p>i?0.01>p?(s=0,q=r=0.707106781):(s=Math.sqrt(p),r=q/s,q=o/s):m>i?0.01>m?(s=0.707106781,r=0,q=0.707106781):(r=Math.sqrt(m),s=q/r,q=j/r):0.01>i?(r=s=0.707106781,q=0):(q=Math.sqrt(i),s=o/q,r=j/q);this.set(s,r,q,t);return this}t=Math.sqrt((s-j)*(s-j)+(o-r)*(o-r)+(n-q)*(n-q));0.001>Math.abs(t)&&(t=1);this.x=(s-j)/t;this.y=(o-r)/t;this.z=(n-q)/t;this.w=Math.acos((p+m+i-1)/2);return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);this.w>b.w&&(this.w=b.w);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);this.w<b.w&&(this.w=b.w);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);this.w<d.w?this.w=d.w:this.w>c.w&&(this.w=c.w);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector4,c=new THREE.Vector4);d.set(b,b,b,b);c.set(a,a,a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;this.w+=(d.w-this.w)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];this.w=b[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(f,e,h,g){this._x=f||0;this._y=e||0;this._z=h||0;this._order=g||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(b){this._x=b;this.onChangeCallback()},get y(){return this._y},set y(b){this._y=b;this.onChangeCallback()},get z(){return this._z},set z(b){this._z=b;this.onChangeCallback()},get order(){return this._order},set order(b){this._order=b;this.onChangeCallback()},set:function(f,e,h,g){this._x=f;this._y=e;this._z=h;this._order=g||this._order;this.onChangeCallback();return this},copy:function(b){this._x=b._x;this._y=b._y;this._z=b._z;this._order=b._order;this.onChangeCallback();return this},setFromRotationMatrix:function(B,A){var v=THREE.Math.clamp,u=B.elements,t=u[0],s=u[4],r=u[8],p=u[1],o=u[5],m=u[9],j=u[2],i=u[6],u=u[10];A=A||this._order;"XYZ"===A?(this._y=Math.asin(v(r,-1,1)),0.99999>Math.abs(r)?(this._x=Math.atan2(-m,u),this._z=Math.atan2(-s,t)):(this._x=Math.atan2(i,o),this._z=0)):"YXZ"===A?(this._x=Math.asin(-v(m,-1,1)),0.99999>Math.abs(m)?(this._y=Math.atan2(r,u),this._z=Math.atan2(p,o)):(this._y=Math.atan2(-j,t),this._z=0)):"ZXY"===A?(this._x=Math.asin(v(i,-1,1)),0.99999>Math.abs(i)?(this._y=Math.atan2(-j,u),this._z=Math.atan2(-s,o)):(this._y=0,this._z=Math.atan2(p,t))):"ZYX"===A?(this._y=Math.asin(-v(j,-1,1)),0.99999>Math.abs(j)?(this._x=Math.atan2(i,u),this._z=Math.atan2(p,t)):(this._x=0,this._z=Math.atan2(-s,o))):"YZX"===A?(this._z=Math.asin(v(p,-1,1)),0.99999>Math.abs(p)?(this._x=Math.atan2(-m,o),this._y=Math.atan2(-j,t)):(this._x=0,this._y=Math.atan2(r,u))):"XZY"===A?(this._z=Math.asin(-v(s,-1,1)),0.99999>Math.abs(s)?(this._x=Math.atan2(i,o),this._y=Math.atan2(r,t)):(this._x=Math.atan2(-m,u),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+A);this._order=A;this.onChangeCallback();return this},setFromQuaternion:function(j,i,p){var o=THREE.Math.clamp,n=j.x*j.x,m=j.y*j.y,l=j.z*j.z,k=j.w*j.w;i=i||this._order;"XYZ"===i?(this._x=Math.atan2(2*(j.x*j.w-j.y*j.z),k-n-m+l),this._y=Math.asin(o(2*(j.x*j.z+j.y*j.w),-1,1)),this._z=Math.atan2(2*(j.z*j.w-j.x*j.y),k+n-m-l)):"YXZ"===i?(this._x=Math.asin(o(2*(j.x*j.w-j.y*j.z),-1,1)),this._y=Math.atan2(2*(j.x*j.z+j.y*j.w),k-n-m+l),this._z=Math.atan2(2*(j.x*j.y+j.z*j.w),k-n+m-l)):"ZXY"===i?(this._x=Math.asin(o(2*(j.x*j.w+j.y*j.z),-1,1)),this._y=Math.atan2(2*(j.y*j.w-j.z*j.x),k-n-m+l),this._z=Math.atan2(2*(j.z*j.w-j.x*j.y),k-n+m-l)):"ZYX"===i?(this._x=Math.atan2(2*(j.x*j.w+j.z*j.y),k-n-m+l),this._y=Math.asin(o(2*(j.y*j.w-j.x*j.z),-1,1)),this._z=Math.atan2(2*(j.x*j.y+j.z*j.w),k+n-m-l)):"YZX"===i?(this._x=Math.atan2(2*(j.x*j.w-j.z*j.y),k-n+m-l),this._y=Math.atan2(2*(j.y*j.w-j.x*j.z),k+n-m-l),this._z=Math.asin(o(2*(j.x*j.y+j.z*j.w),-1,1))):"XZY"===i?(this._x=Math.atan2(2*(j.x*j.w+j.y*j.z),k-n+m-l),this._y=Math.atan2(2*(j.x*j.z+j.y*j.w),k+n-m-l),this._z=Math.asin(o(2*(j.z*j.w-j.x*j.y),-1,1))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+i);this._order=i;if(!1!==p){this.onChangeCallback()}return this},reorder:function(){var b=new THREE.Quaternion;return function(a){b.setFromEuler(this);this.setFromQuaternion(b,a)}}(),equals:function(b){return b._x===this._x&&b._y===this._y&&b._z===this._z&&b._order===this._order},fromArray:function(b){this._x=b[0];this._y=b[1];this._z=b[2];void 0!==b[3]&&(this._order=b[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(b){this.onChangeCallback=b;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(d,c){this.start=void 0!==d?d:new THREE.Vector3;this.end=void 0!==c?c:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(d,c){this.start.copy(d);this.end.copy(c);return this},copy:function(b){this.start.copy(b.start);this.end.copy(b.end);return this},center:function(b){return(b||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){return(b||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,d){var f=d||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b){d.subVectors(f,this.start);c.subVectors(this.end,this.start);var a=c.dot(c),a=c.dot(d)/a;b&&(a=THREE.Math.clamp(a,0,1));return a}}(),closestPointToPoint:function(e,d,f){e=this.closestPointToPointParameter(e,d);f=f||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},applyMatrix4:function(b){this.start.applyMatrix4(b);this.end.applyMatrix4(b);return this},equals:function(b){return b.start.equals(this.start)&&b.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(d,c){this.min=void 0!==d?d:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector2;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(b){return(b||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y?!0:!1},getParameter:function(d,c){return(c||new THREE.Vector2).set((d.x-this.min.x)/(this.max.x-this.min.x),(d.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector2).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector2;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(d,c){this.min=void 0!==d?d:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},addPoint:function(b){b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x);b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y);b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z);return this},setFromPoints:function(e){if(0<e.length){var d=e[0];this.min.copy(d);this.max.copy(d);for(var d=1,f=e.length;d<f;d++){this.addPoint(e[d])}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector3;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),setFromObject:function(){var b=new THREE.Vector3;return function(a){var d=this;a.updateMatrixWorld(!0);this.makeEmpty();a.traverse(function(c){if(void 0!==c.geometry&&void 0!==c.geometry.vertices){for(var j=c.geometry.vertices,i=0,h=j.length;i<h;i++){b.copy(j[i]),b.applyMatrix4(c.matrixWorld),d.expandByPoint(b)}}});return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(b){return(b||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y||b.z<this.min.z||b.z>this.max.z?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y&&this.min.z<=b.min.z&&b.max.z<=this.max.z?!0:!1},getParameter:function(d,c){return(c||new THREE.Vector3).set((d.x-this.min.x)/(this.max.x-this.min.x),(d.y-this.min.y)/(this.max.y-this.min.y),(d.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y||b.max.z<this.min.z||b.min.z>this.max.z?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector3).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),getBoundingSphere:function(){var b=new THREE.Vector3;return function(a){a=a||new THREE.Sphere;a.center=this.center();a.radius=0.5*this.size(b).length();return a}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},applyMatrix4:function(){var b=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(a){b[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a);b[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a);b[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a);b[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a);b[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a);b[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a);b[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a);b[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a);this.makeEmpty();this.setFromPoints(b);return this}}(),translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(t,s,r,q,p,o,n,m,j){var i=this.elements=new Float32Array(9);i[0]=void 0!==t?t:1;i[3]=s||0;i[6]=r||0;i[1]=q||0;i[4]=void 0!==p?p:1;i[7]=o||0;i[2]=n||0;i[5]=m||0;i[8]=void 0!==j?j:1};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,s,r,q,p,o,n,m,j){var i=this.elements;i[0]=t;i[3]=s;i[6]=r;i[1]=q;i[4]=p;i[7]=o;i[2]=n;i[5]=m;i[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return b.applyMatrix3(this)},multiplyVector3Array:function(b){console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)},applyToVector3Array:function(){var b=new THREE.Vector3;return function(a,h,g){void 0===h&&(h=0);void 0===g&&(g=a.length);for(var f=0;f<g;f+=3,h+=3){b.x=a[h],b.y=a[h+1],b.z=a[h+2],b.applyMatrix3(this),a[h]=b.x,a[h+1]=b.y,a[h+2]=b.z}return a}}(),multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[3]*=d;c[6]*=d;c[1]*=d;c[4]*=d;c[7]*=d;c[2]*=d;c[5]*=d;c[8]*=d;return this},determinant:function(){var r=this.elements,q=r[0],p=r[1],o=r[2],n=r[3],m=r[4],l=r[5],j=r[6],i=r[7],r=r[8];return q*m*r-q*l*i-p*n*r+p*l*j+o*n*i-o*m*j},getInverse:function(f,e){var h=f.elements,g=this.elements;g[0]=h[10]*h[5]-h[6]*h[9];g[1]=-h[10]*h[1]+h[2]*h[9];g[2]=h[6]*h[1]-h[2]*h[5];g[3]=-h[10]*h[4]+h[6]*h[8];g[4]=h[10]*h[0]-h[2]*h[8];g[5]=-h[6]*h[0]+h[2]*h[4];g[6]=h[9]*h[4]-h[5]*h[8];g[7]=-h[9]*h[0]+h[1]*h[8];g[8]=h[5]*h[0]-h[1]*h[4];h=h[0]*g[0]+h[1]*g[3]+h[2]*g[6];if(0===h){if(e){throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/h);return this},transpose:function(){var d,c=this.elements;d=c[1];c[1]=c[3];c[3]=d;d=c[2];c[2]=c[6];c[6]=d;d=c[5];c[5]=c[7];c[7]=d;return this},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];return e},getNormalMatrix:function(b){this.getInverse(b).transpose();return this},transposeIntoArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[3];d[2]=c[6];d[3]=c[1];d[4]=c[4];d[5]=c[7];d[6]=c[2];d[7]=c[5];d[8]=c[8];return this},fromArray:function(b){this.elements.set(b);return this},toArray:function(){var b=this.elements;return[b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8]]},clone:function(){var b=this.elements;return new THREE.Matrix3(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8])}};THREE.Matrix4=function(I,H,G,F,E,D,C,B,A,u,o,j,m,L,K,i){var J=this.elements=new Float32Array(16);J[0]=void 0!==I?I:1;J[4]=H||0;J[8]=G||0;J[12]=F||0;J[1]=E||0;J[5]=void 0!==D?D:1;J[9]=C||0;J[13]=B||0;J[2]=A||0;J[6]=u||0;J[10]=void 0!==o?o:1;J[14]=j||0;J[3]=m||0;J[7]=L||0;J[11]=K||0;J[15]=void 0!==i?i:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(I,H,G,F,E,D,C,B,A,u,o,j,m,L,K,i){var J=this.elements;J[0]=I;J[4]=H;J[8]=G;J[12]=F;J[1]=E;J[5]=D;J[9]=C;J[13]=B;J[2]=A;J[6]=u;J[10]=o;J[14]=j;J[3]=m;J[7]=L;J[11]=K;J[15]=i;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){this.elements.set(b.elements);return this},extractPosition:function(b){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(b)},copyPosition:function(d){var c=this.elements;d=d.elements;c[12]=d[12];c[13]=d[13];c[14]=d[14];return this},extractRotation:function(){var b=new THREE.Vector3;return function(a){var j=this.elements;a=a.elements;var i=1/b.set(a[0],a[1],a[2]).length(),h=1/b.set(a[4],a[5],a[6]).length(),g=1/b.set(a[8],a[9],a[10]).length();j[0]=a[0]*i;j[1]=a[1]*i;j[2]=a[2]*i;j[4]=a[4]*h;j[5]=a[5]*h;j[6]=a[6]*h;j[8]=a[8]*g;j[9]=a[9]*g;j[10]=a[10]*g;return this}}(),makeRotationFromEuler:function(v){!1===v instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var u=this.elements,t=v.x,s=v.y,r=v.z,q=Math.cos(t),t=Math.sin(t),p=Math.cos(s),s=Math.sin(s),o=Math.cos(r),r=Math.sin(r);if("XYZ"===v.order){v=q*o;var m=q*r,j=t*o,i=t*r;u[0]=p*o;u[4]=-p*r;u[8]=s;u[1]=m+j*s;u[5]=v-i*s;u[9]=-t*p;u[2]=i-v*s;u[6]=j+m*s;u[10]=q*p}else{"YXZ"===v.order?(v=p*o,m=p*r,j=s*o,i=s*r,u[0]=v+i*t,u[4]=j*t-m,u[8]=q*s,u[1]=q*r,u[5]=q*o,u[9]=-t,u[2]=m*t-j,u[6]=i+v*t,u[10]=q*p):"ZXY"===v.order?(v=p*o,m=p*r,j=s*o,i=s*r,u[0]=v-i*t,u[4]=-q*r,u[8]=j+m*t,u[1]=m+j*t,u[5]=q*o,u[9]=i-v*t,u[2]=-q*s,u[6]=t,u[10]=q*p):"ZYX"===v.order?(v=q*o,m=q*r,j=t*o,i=t*r,u[0]=p*o,u[4]=j*s-m,u[8]=v*s+i,u[1]=p*r,u[5]=i*s+v,u[9]=m*s-j,u[2]=-s,u[6]=t*p,u[10]=q*p):"YZX"===v.order?(v=q*p,m=q*s,j=t*p,i=t*s,u[0]=p*o,u[4]=i-v*r,u[8]=j*r+m,u[1]=r,u[5]=q*o,u[9]=-t*o,u[2]=-s*o,u[6]=m*r+j,u[10]=v-i*r):"XZY"===v.order&&(v=q*p,m=q*s,j=t*p,i=t*s,u[0]=p*o,u[4]=-r,u[8]=s*o,u[1]=v*r+i,u[5]=q*o,u[9]=m*r-j,u[2]=j*r-m,u[6]=t*o,u[10]=i*r+v)}u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},setRotationFromQuaternion:function(b){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(b)},makeRotationFromQuaternion:function(v){var u=this.elements,t=v.x,s=v.y,r=v.z,q=v.w,p=t+t,o=s+s,m=r+r;v=t*p;var j=t*o,t=t*m,i=s*o,s=s*m,r=r*m,p=q*p,o=q*o,q=q*m;u[0]=1-(i+r);u[4]=j-q;u[8]=t+o;u[1]=j+q;u[5]=1-(v+r);u[9]=s-p;u[2]=t-o;u[6]=s+p;u[10]=1-(v+i);u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(h,c,b){var a=this.elements;f.subVectors(h,c).normalize();0===f.length()&&(f.z=1);e.crossVectors(b,f).normalize();0===e.length()&&(f.x+=0.0001,e.crossVectors(b,f).normalize());d.crossVectors(f,e);a[0]=e.x;a[4]=d.x;a[8]=f.x;a[1]=e.y;a[5]=d.y;a[9]=f.y;a[2]=e.z;a[6]=d.z;a[10]=f.z;return this}}(),multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(d,c)):this.multiplyMatrices(this,d)},multiplyMatrices:function(ar,aq){var ap=ar.elements,ao=aq.elements,an=this.elements,am=ap[0],al=ap[4],ak=ap[8],aj=ap[12],ai=ap[1],ah=ap[5],ae=ap[9],ag=ap[13],aa=ap[2],Y=ap[6],ac=ap[10],U=ap[14],S=ap[3],W=ap[7],O=ap[11],ap=ap[15],m=ao[0],P=ao[4],j=ao[8],M=ao[12],ad=ao[1],I=ao[5],af=ao[9],T=ao[13],Z=ao[2],ab=ao[6],V=ao[10],o=ao[14],R=ao[3],X=ao[7],i=ao[11],ao=ao[15];an[0]=am*m+al*ad+ak*Z+aj*R;an[4]=am*P+al*I+ak*ab+aj*X;an[8]=am*j+al*af+ak*V+aj*i;an[12]=am*M+al*T+ak*o+aj*ao;an[1]=ai*m+ah*ad+ae*Z+ag*R;an[5]=ai*P+ah*I+ae*ab+ag*X;an[9]=ai*j+ah*af+ae*V+ag*i;an[13]=ai*M+ah*T+ae*o+ag*ao;an[2]=aa*m+Y*ad+ac*Z+U*R;an[6]=aa*P+Y*I+ac*ab+U*X;an[10]=aa*j+Y*af+ac*V+U*i;an[14]=aa*M+Y*T+ac*o+U*ao;an[3]=S*m+W*ad+O*Z+ap*R;an[7]=S*P+W*I+O*ab+ap*X;an[11]=S*j+W*af+O*V+ap*i;an[15]=S*M+W*T+O*o+ap*ao;return this},multiplyToArray:function(f,e,h){var g=this.elements;this.multiplyMatrices(f,e);h[0]=g[0];h[1]=g[1];h[2]=g[2];h[3]=g[3];h[4]=g[4];h[5]=g[5];h[6]=g[6];h[7]=g[7];h[8]=g[8];h[9]=g[9];h[10]=g[10];h[11]=g[11];h[12]=g[12];h[13]=g[13];h[14]=g[14];h[15]=g[15];return this},multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[4]*=d;c[8]*=d;c[12]*=d;c[1]*=d;c[5]*=d;c[9]*=d;c[13]*=d;c[2]*=d;c[6]*=d;c[10]*=d;c[14]*=d;c[3]*=d;c[7]*=d;c[11]*=d;c[15]*=d;return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return b.applyProjection(this)},multiplyVector4:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},multiplyVector3Array:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)},applyToVector3Array:function(){var b=new THREE.Vector3;return function(a,h,g){void 0===h&&(h=0);void 0===g&&(g=a.length);for(var f=0;f<g;f+=3,h+=3){b.x=a[h],b.y=a[h+1],b.z=a[h+2],b.applyMatrix4(this),a[h]=b.x,a[h+1]=b.y,a[h+2]=b.z}return a}}(),rotateAxis:function(b){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");b.transformDirection(this)},crossVector:function(b){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},determinant:function(){var D=this.elements,C=D[0],B=D[4],A=D[8],v=D[12],u=D[1],t=D[5],s=D[9],r=D[13],o=D[2],m=D[6],i=D[10],j=D[14];return D[3]*(+v*s*m-A*r*m-v*t*i+B*r*i+A*t*j-B*s*j)+D[7]*(+C*s*j-C*r*i+v*u*i-A*u*j+A*r*o-v*s*o)+D[11]*(+C*r*m-C*t*j-v*u*m+B*u*j+v*t*o-B*r*o)+D[15]*(-A*t*o-C*s*m+C*t*i+A*u*m-B*u*i+B*s*o)},transpose:function(){var d=this.elements,c;c=d[1];d[1]=d[4];d[4]=c;c=d[2];d[2]=d[8];d[8]=c;c=d[6];d[6]=d[9];d[9]=c;c=d[3];d[3]=d[12];d[12]=c;c=d[7];d[7]=d[13];d[13]=c;c=d[11];d[11]=d[14];d[14]=c;return this},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];e[d+9]=f[9];e[d+10]=f[10];e[d+11]=f[11];e[d+12]=f[12];e[d+13]=f[13];e[d+14]=f[14];e[d+15]=f[15];return e},getPosition:function(){var b=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var a=this.elements;return b.set(a[12],a[13],a[14])}}(),setPosition:function(d){var c=this.elements;c[12]=d.x;c[13]=d.y;c[14]=d.z;return this},getInverse:function(O,N){var M=this.elements,L=O.elements,K=L[0],J=L[4],I=L[8],H=L[12],G=L[1],F=L[5],E=L[9],C=L[13],D=L[2],A=L[6],o=L[10],B=L[14],j=L[3],i=L[7],m=L[11],L=L[15];M[0]=E*B*i-C*o*i+C*A*m-F*B*m-E*A*L+F*o*L;M[4]=H*o*i-I*B*i-H*A*m+J*B*m+I*A*L-J*o*L;M[8]=I*C*i-H*E*i+H*F*m-J*C*m-I*F*L+J*E*L;M[12]=H*E*A-I*C*A-H*F*o+J*C*o+I*F*B-J*E*B;M[1]=C*o*j-E*B*j-C*D*m+G*B*m+E*D*L-G*o*L;M[5]=I*B*j-H*o*j+H*D*m-K*B*m-I*D*L+K*o*L;M[9]=H*E*j-I*C*j-H*G*m+K*C*m+I*G*L-K*E*L;M[13]=I*C*D-H*E*D+H*G*o-K*C*o-I*G*B+K*E*B;M[2]=F*B*j-C*A*j+C*D*i-G*B*i-F*D*L+G*A*L;M[6]=H*A*j-J*B*j-H*D*i+K*B*i+J*D*L-K*A*L;M[10]=J*C*j-H*F*j+H*G*i-K*C*i-J*G*L+K*F*L;M[14]=H*F*D-J*C*D-H*G*A+K*C*A+J*G*B-K*F*B;M[3]=E*A*j-F*o*j-E*D*i+G*o*i+F*D*m-G*A*m;M[7]=J*o*j-I*A*j+I*D*i-K*o*i-J*D*m+K*A*m;M[11]=I*F*j-J*E*j-I*G*i+K*E*i+J*G*m-K*F*m;M[15]=J*E*D-I*F*D+I*G*A-K*E*A-J*G*o+K*F*o;M=K*M[0]+G*M[4]+D*M[8]+j*M[12];if(0==M){if(N){throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/M);return this},translate:function(b){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(b){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(b){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(b){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(d,c){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(f){var e=this.elements,h=f.x,g=f.y;f=f.z;e[0]*=h;e[4]*=g;e[8]*=f;e[1]*=h;e[5]*=g;e[9]*=f;e[2]*=h;e[6]*=g;e[10]*=f;e[3]*=h;e[7]*=g;e[11]*=f;return this},getMaxScaleOnAxis:function(){var b=this.elements;return Math.sqrt(Math.max(b[0]*b[0]+b[1]*b[1]+b[2]*b[2],Math.max(b[4]*b[4]+b[5]*b[5]+b[6]*b[6],b[8]*b[8]+b[9]*b[9]+b[10]*b[10])))},makeTranslation:function(e,d,f){this.set(1,0,0,e,0,1,0,d,0,0,1,f,0,0,0,1);return this},makeRotationX:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(1,0,0,0,0,c,-d,0,0,d,c,0,0,0,0,1);return this},makeRotationY:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(c,0,d,0,0,1,0,0,-d,0,c,0,0,0,0,1);return this},makeRotationZ:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(c,-d,0,0,d,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(t,s){var r=Math.cos(s),q=Math.sin(s),p=1-r,o=t.x,n=t.y,m=t.z,j=p*o,i=p*n;this.set(j*o+r,j*n-q*m,j*m+q*n,0,j*n+q*m,i*n+r,i*m-q*o,0,j*m-q*n,i*m+q*o,p*m*m+r,0,0,0,0,1);return this},makeScale:function(e,d,f){this.set(e,0,0,0,0,d,0,0,0,0,f,0,0,0,0,1);return this},compose:function(e,d,f){this.makeRotationFromQuaternion(d);this.scale(f);this.setPosition(e);return this},decompose:function(){var d=new THREE.Vector3,c=new THREE.Matrix4;return function(p,o,n){var m=this.elements,j=d.set(m[0],m[1],m[2]).length(),i=d.set(m[4],m[5],m[6]).length(),b=d.set(m[8],m[9],m[10]).length();0>this.determinant()&&(j=-j);p.x=m[12];p.y=m[13];p.z=m[14];c.elements.set(this.elements);p=1/j;var m=1/i,a=1/b;c.elements[0]*=p;c.elements[1]*=p;c.elements[2]*=p;c.elements[4]*=m;c.elements[5]*=m;c.elements[6]*=m;c.elements[8]*=a;c.elements[9]*=a;c.elements[10]*=a;o.setFromRotationMatrix(c);n.x=j;n.y=i;n.z=b;return this}}(),makeFrustum:function(i,h,n,m,l,k){var j=this.elements;j[0]=2*l/(h-i);j[4]=0;j[8]=(h+i)/(h-i);j[12]=0;j[1]=0;j[5]=2*l/(m-n);j[9]=(m+n)/(m-n);j[13]=0;j[2]=0;j[6]=0;j[10]=-(k+l)/(k-l);j[14]=-2*k*l/(k-l);j[3]=0;j[7]=0;j[11]=-1;j[15]=0;return this},makePerspective:function(g,f,j,i){g=j*Math.tan(THREE.Math.degToRad(0.5*g));var h=-g;return this.makeFrustum(h*f,g*f,h,g,j,i)},makeOrthographic:function(t,s,r,q,p,o){var n=this.elements,m=s-t,j=r-q,i=o-p;n[0]=2/m;n[4]=0;n[8]=0;n[12]=-((s+t)/m);n[1]=0;n[5]=2/j;n[9]=0;n[13]=-((r+q)/j);n[2]=0;n[6]=0;n[10]=-2/i;n[14]=-((o+p)/i);n[3]=0;n[7]=0;n[11]=0;n[15]=1;return this},fromArray:function(b){this.elements.set(b);return this},toArray:function(){var b=this.elements;return[b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15]]},clone:function(){var b=this.elements;return new THREE.Matrix4(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15])}};THREE.Ray=function(d,c){this.origin=void 0!==d?d:new THREE.Vector3;this.direction=void 0!==c?c:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(d,c){this.origin.copy(d);this.direction.copy(c);return this},copy:function(b){this.origin.copy(b.origin);this.direction.copy(b.direction);return this},at:function(d,c){return(c||new THREE.Vector3).copy(this.direction).multiplyScalar(d).add(this.origin)},recast:function(){var b=new THREE.Vector3;return function(a){this.origin.copy(this.at(a,b));return this}}(),closestPointToPoint:function(f,e){var h=e||new THREE.Vector3;h.subVectors(f,this.origin);var g=h.dot(this.direction);return 0>g?h.copy(this.origin):h.copy(this.direction).multiplyScalar(g).add(this.origin)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){var d=b.subVectors(a,this.origin).dot(this.direction);if(0>d){return this.origin.distanceTo(a)}b.copy(this.direction).multiplyScalar(d).add(this.origin);return b.distanceTo(a)}}(),distanceSqToSegment:function(D,C,B,A){var v=D.clone().add(C).multiplyScalar(0.5),u=C.clone().sub(D).normalize(),t=0.5*D.distanceTo(C),s=this.origin.clone().sub(v);D=-this.direction.dot(u);C=s.dot(this.direction);var r=-s.dot(u),o=s.lengthSq(),m=Math.abs(1-D*D),i,j;0<=m?(s=D*r-C,i=D*C-r,j=t*m,0<=s?i>=-j?i<=j?(t=1/m,s*=t,i*=t,D=s*(s+D*i+2*C)+i*(D*s+i+2*r)+o):(i=t,s=Math.max(0,-(D*i+C)),D=-s*s+i*(i+2*r)+o):(i=-t,s=Math.max(0,-(D*i+C)),D=-s*s+i*(i+2*r)+o):i<=-j?(s=Math.max(0,-(-D*t+C)),i=0<s?-t:Math.min(Math.max(-t,-r),t),D=-s*s+i*(i+2*r)+o):i<=j?(s=0,i=Math.min(Math.max(-t,-r),t),D=i*(i+2*r)+o):(s=Math.max(0,-(D*t+C)),i=0<s?t:Math.min(Math.max(-t,-r),t),D=-s*s+i*(i+2*r)+o)):(i=0<D?-t:t,s=Math.max(0,-(D*i+C)),D=-s*s+i*(i+2*r)+o);B&&B.copy(this.direction.clone().multiplyScalar(s).add(this.origin));A&&A.copy(u.clone().multiplyScalar(i).add(v));return D},isIntersectionSphere:function(b){return this.distanceToPoint(b.center)<=b.radius},isIntersectionPlane:function(d){var c=d.distanceToPoint(this.origin);return 0===c||0>d.normal.dot(this.direction)*c?!0:!1},distanceToPlane:function(d){var c=d.normal.dot(this.direction);if(0==c){return 0==d.distanceToPoint(this.origin)?0:null}d=-(this.origin.dot(d.normal)+d.constant)/c;return 0<=d?d:null},intersectPlane:function(e,d){var f=this.distanceToPlane(e);return null===f?null:this.at(f,d)},isIntersectionBox:function(){var b=new THREE.Vector3;return function(a){return null!==this.intersectBox(a,b)}}(),intersectBox:function(j,i){var p,o,n,m,l;o=1/this.direction.x;m=1/this.direction.y;l=1/this.direction.z;var k=this.origin;0<=o?(p=(j.min.x-k.x)*o,o*=j.max.x-k.x):(p=(j.max.x-k.x)*o,o*=j.min.x-k.x);0<=m?(n=(j.min.y-k.y)*m,m*=j.max.y-k.y):(n=(j.max.y-k.y)*m,m*=j.min.y-k.y);if(p>m||n>o){return null}if(n>p||p!==p){p=n}if(m<o||o!==o){o=m}0<=l?(n=(j.min.z-k.z)*l,l*=j.max.z-k.z):(n=(j.max.z-k.z)*l,l*=j.min.z-k.z);if(p>l||n>o){return null}if(n>p||p!==p){p=n}if(l<o||o!==o){o=l}return 0>o?null:this.at(0<=p?p:o,i)},intersectTriangle:function(){var f=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,g=new THREE.Vector3;return function(i,d,c,b,a){e.subVectors(d,i);h.subVectors(c,i);g.crossVectors(e,h);d=this.direction.dot(g);if(0<d){if(b){return null}b=1}else{if(0>d){b=-1,d=-d}else{return null}}f.subVectors(this.origin,i);i=b*this.direction.dot(h.crossVectors(f,h));if(0>i){return null}c=b*this.direction.dot(e.cross(f));if(0>c||i+c>d){return null}i=-b*f.dot(g);return 0>i?null:this.at(i/d,a)}}(),applyMatrix4:function(b){this.direction.add(this.origin).applyMatrix4(b);this.origin.applyMatrix4(b);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(b){return b.origin.equals(this.origin)&&b.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(d,c){this.center=void 0!==d?d:new THREE.Vector3;this.radius=void 0!==c?c:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(d,c){this.center.copy(d);this.radius=c;return this},setFromPoints:function(){var b=new THREE.Box3;return function(a,l){var k=this.center;void 0!==l?k.copy(l):b.setFromPoints(a).center(k);for(var j=0,i=0,h=a.length;i<h;i++){j=Math.max(j,k.distanceToSquared(a[i]))}this.radius=Math.sqrt(j);return this}}(),copy:function(b){this.center.copy(b.center);this.radius=b.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(b){return b.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(b){return b.distanceTo(this.center)-this.radius},intersectsSphere:function(d){var c=this.radius+d.radius;return d.center.distanceToSquared(this.center)<=c*c},clampPoint:function(f,e){var h=this.center.distanceToSquared(f),g=e||new THREE.Vector3;g.copy(f);h>this.radius*this.radius&&(g.sub(this.center).normalize(),g.multiplyScalar(this.radius).add(this.center));return g},getBoundingBox:function(b){b=b||new THREE.Box3;b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(b){this.center.applyMatrix4(b);this.radius*=b.getMaxScaleOnAxis();return this},translate:function(b){this.center.add(b);return this},equals:function(b){return b.center.equals(this.center)&&b.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(h,g,l,k,j,i){this.planes=[void 0!==h?h:new THREE.Plane,void 0!==g?g:new THREE.Plane,void 0!==l?l:new THREE.Plane,void 0!==k?k:new THREE.Plane,void 0!==j?j:new THREE.Plane,void 0!==i?i:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(i,h,n,m,l,k){var j=this.planes;j[0].copy(i);j[1].copy(h);j[2].copy(n);j[3].copy(m);j[4].copy(l);j[5].copy(k);return this},copy:function(e){for(var d=this.planes,f=0;6>f;f++){d[f].copy(e.planes[f])}return this},setFromMatrix:function(I){var H=this.planes,G=I.elements;I=G[0];var F=G[1],E=G[2],D=G[3],C=G[4],B=G[5],A=G[6],u=G[7],o=G[8],j=G[9],m=G[10],L=G[11],K=G[12],i=G[13],J=G[14],G=G[15];H[0].setComponents(D-I,u-C,L-o,G-K).normalize();H[1].setComponents(D+I,u+C,L+o,G+K).normalize();H[2].setComponents(D+F,u+B,L+j,G+i).normalize();H[3].setComponents(D-F,u-B,L-j,G-i).normalize();H[4].setComponents(D-E,u-A,L-m,G-J).normalize();H[5].setComponents(D+E,u+A,L+m,G+J).normalize();return this},intersectsObject:function(){var b=new THREE.Sphere;return function(a){var d=a.geometry;null===d.boundingSphere&&d.computeBoundingSphere();b.copy(d.boundingSphere);b.applyMatrix4(a.matrixWorld);return this.intersectsSphere(b)}}(),intersectsSphere:function(f){var e=this.planes,h=f.center;f=-f.radius;for(var g=0;6>g;g++){if(e[g].distanceToPoint(h)<f){return !1}}return !0},intersectsBox:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(j){for(var i=this.planes,h=0;6>h;h++){var b=i[h];d.x=0<b.normal.x?j.min.x:j.max.x;c.x=0<b.normal.x?j.max.x:j.min.x;d.y=0<b.normal.y?j.min.y:j.max.y;c.y=0<b.normal.y?j.max.y:j.min.y;d.z=0<b.normal.z?j.min.z:j.max.z;c.z=0<b.normal.z?j.max.z:j.min.z;var a=b.distanceToPoint(d),b=b.distanceToPoint(c);if(0>a&&0>b){return !1}}return !0}}(),containsPoint:function(e){for(var d=this.planes,f=0;6>f;f++){if(0>d[f].distanceToPoint(e)){return !1}}return !0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(d,c){this.normal=void 0!==d?d:new THREE.Vector3(1,0,0);this.constant=void 0!==c?c:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(d,c){this.normal.copy(d);this.constant=c;return this},setComponents:function(f,e,h,g){this.normal.set(f,e,h);this.constant=g;return this},setFromNormalAndCoplanarPoint:function(d,c){this.normal.copy(d);this.constant=-c.dot(this.normal);return this},setFromCoplanarPoints:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b,a){b=d.subVectors(a,b).cross(c.subVectors(f,b)).normalize();this.setFromNormalAndCoplanarPoint(b,f);return this}}(),copy:function(b){this.normal.copy(b.normal);this.constant=b.constant;return this},normalize:function(){var b=1/this.normal.length();this.normal.multiplyScalar(b);this.constant*=b;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(b){return this.normal.dot(b)+this.constant},distanceToSphere:function(b){return this.distanceToPoint(b.center)-b.radius},projectPoint:function(d,c){return this.orthoPoint(d,c).sub(d).negate()},orthoPoint:function(e,d){var f=this.distanceToPoint(e);return(d||new THREE.Vector3).copy(this.normal).multiplyScalar(f)},isIntersectionLine:function(d){var c=this.distanceToPoint(d.start);d=this.distanceToPoint(d.end);return 0>c&&0<d||0>d&&0<c},intersectLine:function(){var b=new THREE.Vector3;return function(a,j){var i=j||new THREE.Vector3,h=a.delta(b),g=this.normal.dot(h);if(0==g){if(0==this.distanceToPoint(a.start)){return i.copy(a.start)}}else{return g=-(a.start.dot(this.normal)+this.constant)/g,0>g||1<g?void 0:i.copy(h).multiplyScalar(g).add(a.start)}}}(),coplanarPoint:function(b){return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Matrix3;return function(h,c){var b=c||f.getNormalMatrix(h),b=e.copy(this.normal).applyMatrix3(b),a=this.coplanarPoint(d);a.applyMatrix4(h);this.setFromNormalAndCoplanarPoint(b,a);return this}}(),translate:function(b){this.constant-=b.dot(this.normal);return this},equals:function(b){return b.normal.equals(this.normal)&&b.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={generateUUID:function(){var f="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),e=Array(36),h=0,g;return function(){for(var a=0;36>a;a++){8==a||13==a||18==a||23==a?e[a]="-":14==a?e[a]="4":(2>=h&&(h=33554432+16777216*Math.random()|0),g=h&15,h>>=4,e[a]=f[19==a?g&3|8:g])}return e.join("")}}(),clamp:function(e,d,f){return e<d?d:e>f?f:e},clampBottom:function(d,c){return d<c?c:d},mapLinear:function(g,f,j,i,h){return i+(g-f)*(h-i)/(j-f)},smoothstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*(3-2*e)},smootherstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(d,c){return d+Math.floor(Math.random()*(c-d+1))},randFloat:function(d,c){return d+Math.random()*(c-d)},randFloatSpread:function(b){return b*(0.5-Math.random())},sign:function(b){return 0>b?-1:0<b?1:0},degToRad:function(){var b=Math.PI/180;return function(a){return a*b}}(),radToDeg:function(){var b=180/Math.PI;return function(a){return a*b}}(),isPowerOfTwo:function(b){return 0===(b&b-1)&&0!==b}};THREE.Spline=function(D){function C(k,h,E,q,p,n,l){k=0.5*(E-k);q=0.5*(q-h);return(2*(h-E)+k+q)*l+(-3*(h-E)-2*k-q)*n+k*p+h}this.points=D;var B=[],A={x:0,y:0,z:0},v,u,t,s,r,o,m,i,j;this.initFromArray=function(d){this.points=[];for(var c=0;c<d.length;c++){this.points[c]={x:d[c][0],y:d[c][1],z:d[c][2]}}};this.getPoint=function(b){v=(this.points.length-1)*b;u=Math.floor(v);t=v-u;B[0]=0===u?u:u-1;B[1]=u;B[2]=u>this.points.length-2?this.points.length-1:u+1;B[3]=u>this.points.length-3?this.points.length-1:u+2;o=this.points[B[0]];m=this.points[B[1]];i=this.points[B[2]];j=this.points[B[3]];s=t*t;r=t*s;A.x=C(o.x,m.x,i.x,j.x,t,s,r);A.y=C(o.y,m.y,i.y,j.y,t,s,r);A.z=C(o.z,m.z,i.z,j.z,t,s,r);return A};this.getControlPointsArray=function(){var f,e,h=this.points.length,g=[];for(f=0;f<h;f++){e=this.points[f],g[f]=[e.x,e.y,e.z]}return g};this.getLength=function(I){var H,G,F,E=H=H=0,q=new THREE.Vector3,p=new THREE.Vector3,n=[],l=0;n[0]=0;I||(I=100);G=this.points.length*I;q.copy(this.points[0]);for(I=1;I<G;I++){H=I/G,F=this.getPoint(H),p.copy(F),l+=p.distanceTo(q),q.copy(F),H*=this.points.length-1,H=Math.floor(H),H!=E&&(n[H]=l,E=H)}n[n.length]=l;return{chunks:n,total:l}};this.reparametrizeByArcLength=function(K){var J,I,H,G,F,E,q=[],p=new THREE.Vector3,n=this.getLength();q.push(p.copy(this.points[0]).clone());for(J=1;J<this.points.length;J++){I=n.chunks[J]-n.chunks[J-1];E=Math.ceil(K*I/n.total);G=(J-1)/(this.points.length-1);F=J/(this.points.length-1);for(I=1;I<E-1;I++){H=G+1/E*I*(F-G),H=this.getPoint(H),q.push(p.copy(H).clone())}q.push(p.copy(this.points[J]).clone())}this.points=q}};THREE.Triangle=function(e,d,f){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==d?d:new THREE.Vector3;this.c=void 0!==f?f:new THREE.Vector3};THREE.Triangle.normal=function(){var b=new THREE.Vector3;return function(a,h,g,f){f=f||new THREE.Vector3;f.subVectors(g,h);b.subVectors(a,h);f.cross(b);a=f.lengthSq();return 0<a?f.multiplyScalar(1/Math.sqrt(a)):f.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(n,m,j,i,c){e.subVectors(i,m);d.subVectors(j,m);f.subVectors(n,m);n=e.dot(e);m=e.dot(d);j=e.dot(f);var b=d.dot(d);i=d.dot(f);var a=n*b-m*m;c=c||new THREE.Vector3;if(0==a){return c.set(-2,-1,-1)}a=1/a;b=(b*j-m*i)*a;n=(n*i-m*j)*a;return c.set(1-b-n,n,b)}}();THREE.Triangle.containsPoint=function(){var b=new THREE.Vector3;return function(a,h,g,f){a=THREE.Triangle.barycoordFromPoint(a,h,g,f,b);return 0<=a.x&&0<=a.y&&1>=a.x+a.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(f,e,h,g){this.a.copy(f[e]);this.b.copy(f[h]);this.c.copy(f[g]);return this},copy:function(b){this.a.copy(b.a);this.b.copy(b.b);this.c.copy(b.c);return this},area:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){d.subVectors(this.c,this.b);c.subVectors(this.a,this.b);return 0.5*d.cross(c).length()}}(),midpoint:function(b){return(b||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(b){return THREE.Triangle.normal(this.a,this.b,this.c,b)},plane:function(b){return(b||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(d,c){return THREE.Triangle.barycoordFromPoint(d,this.a,this.b,this.c,c)},containsPoint:function(b){return THREE.Triangle.containsPoint(b,this.a,this.b,this.c)},equals:function(b){return b.a.equals(this.a)&&b.b.equals(this.b)&&b.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(b){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return b};THREE.Clock=function(b){this.autoStart=void 0!==b?b:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var d=0;this.autoStart&&!this.running&&this.start();if(this.running){var c=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),d=0.001*(c-this.oldTime);this.oldTime=c;this.elapsedTime+=d}return d}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(b){b.addEventListener=THREE.EventDispatcher.prototype.addEventListener;b.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;b.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;b.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,d){void 0===this._listeners&&(this._listeners={});var f=this._listeners;void 0===f[e]&&(f[e]=[]);-1===f[e].indexOf(d)&&f[e].push(d)},hasEventListener:function(e,d){if(void 0===this._listeners){return !1}var f=this._listeners;return void 0!==f[e]&&-1!==f[e].indexOf(d)?!0:!1},removeEventListener:function(f,e){if(void 0!==this._listeners){var h=this._listeners[f];if(void 0!==h){var g=h.indexOf(e);-1!==g&&h.splice(g,1)}}},dispatchEvent:function(g){if(void 0!==this._listeners){var f=this._listeners[g.type];if(void 0!==f){g.target=this;for(var j=[],i=f.length,h=0;h<i;h++){j[h]=f[h]}for(h=0;h<i;h++){j[h].call(this,g)}}}}};(function(v){v.Raycaster=function(a,h,g,f){this.ray=new v.Ray(a,h);this.near=g||0;this.far=f||Infinity};var u=new v.Sphere,t=new v.Ray;new v.Plane;new v.Vector3;var s=new v.Vector3,r=new v.Matrix4,q=function(d,c){return d.distance-c.distance},p=new v.Vector3,o=new v.Vector3,m=new v.Vector3,j=function(V,U,P){if(V instanceof v.Sprite){s.setFromMatrixPosition(V.matrixWorld);var M=U.ray.distanceToPoint(s);if(M>V.scale.x){return P}P.push({distance:M,point:V.position,face:null,object:V})}else{if(V instanceof v.LOD){s.setFromMatrixPosition(V.matrixWorld),M=U.ray.origin.distanceTo(s),j(V.getObjectForDistance(M),U,P)}else{if(V instanceof v.Mesh){var R=V.geometry;null===R.boundingSphere&&R.computeBoundingSphere();u.copy(R.boundingSphere);u.applyMatrix4(V.matrixWorld);if(!1===U.ray.isIntersectionSphere(u)){return P}r.getInverse(V.matrixWorld);t.copy(U.ray).applyMatrix4(r);if(null!==R.boundingBox&&!1===t.isIntersectionBox(R.boundingBox)){return P}if(R instanceof v.BufferGeometry){var E=V.material;if(void 0===E){return P}var k=R.attributes,I,g,b=U.precision;if(void 0!==k.index){var h=k.index.array,a=k.position.array,e=R.offsets;0===e.length&&(e=[{start:0,count:a.length,index:0}]);for(var S=0,d=e.length;S<d;++S){for(var k=e[S].start,T=e[S].index,R=k,l=k+e[S].count;R<l;R+=3){k=T+h[R];I=T+h[R+1];g=T+h[R+2];p.set(a[3*k],a[3*k+1],a[3*k+2]);o.set(a[3*I],a[3*I+1],a[3*I+2]);m.set(a[3*g],a[3*g+1],a[3*g+2]);var O=E.side===v.BackSide?t.intersectTriangle(m,o,p,!0):t.intersectTriangle(p,o,m,E.side!==v.DoubleSide);null!==O&&(O.applyMatrix4(V.matrixWorld),M=U.ray.origin.distanceTo(O),M<b||M<U.near||M>U.far||P.push({distance:M,point:O,indices:[k,I,g],face:null,faceIndex:null,object:V}))}}}else{for(a=k.position.array,R=0,l=k.position.array.length;R<l;R+=3){k=R,I=R+1,g=R+2,p.set(a[3*k],a[3*k+1],a[3*k+2]),o.set(a[3*I],a[3*I+1],a[3*I+2]),m.set(a[3*g],a[3*g+1],a[3*g+2]),O=E.side===v.BackSide?t.intersectTriangle(m,o,p,!0):t.intersectTriangle(p,o,m,E.side!==v.DoubleSide),null!==O&&(O.applyMatrix4(V.matrixWorld),M=U.ray.origin.distanceTo(O),M<b||M<U.near||M>U.far||P.push({distance:M,point:O,indices:[k,I,g],face:null,faceIndex:null,object:V}))}}}else{if(R instanceof v.Geometry){for(a=V.material instanceof v.MeshFaceMaterial,e=!0===a?V.material.materials:null,b=U.precision,h=R.vertices,S=0,d=R.faces.length;S<d;S++){if(T=R.faces[S],E=!0===a?e[T.materialIndex]:V.material,void 0!==E){k=h[T.a];I=h[T.b];g=h[T.c];if(!0===E.morphTargets){M=R.morphTargets;O=V.morphTargetInfluences;p.set(0,0,0);o.set(0,0,0);m.set(0,0,0);for(var l=0,Q=M.length;l<Q;l++){var H=O[l];if(0!==H){var c=M[l].vertices;p.x+=(c[T.a].x-k.x)*H;p.y+=(c[T.a].y-k.y)*H;p.z+=(c[T.a].z-k.z)*H;o.x+=(c[T.b].x-I.x)*H;o.y+=(c[T.b].y-I.y)*H;o.z+=(c[T.b].z-I.z)*H;m.x+=(c[T.c].x-g.x)*H;m.y+=(c[T.c].y-g.y)*H;m.z+=(c[T.c].z-g.z)*H}}p.add(k);o.add(I);m.add(g);k=p;I=o;g=m}O=E.side===v.BackSide?t.intersectTriangle(g,I,k,!0):t.intersectTriangle(k,I,g,E.side!==v.DoubleSide);null!==O&&(O.applyMatrix4(V.matrixWorld),M=U.ray.origin.distanceTo(O),M<b||M<U.near||M>U.far||P.push({distance:M,point:O,face:T,faceIndex:S,object:V}))}}}}}else{if(V instanceof v.Line){b=U.linePrecision;E=b*b;R=V.geometry;null===R.boundingSphere&&R.computeBoundingSphere();u.copy(R.boundingSphere);u.applyMatrix4(V.matrixWorld);if(!1===U.ray.isIntersectionSphere(u)){return P}r.getInverse(V.matrixWorld);t.copy(U.ray).applyMatrix4(r);if(R instanceof v.Geometry){for(h=R.vertices,b=h.length,k=new v.Vector3,I=new v.Vector3,g=V.type===v.LineStrip?1:2,R=0;R<b-1;R+=g){t.distanceSqToSegment(h[R],h[R+1],I,k)>E||(M=t.origin.distanceTo(I),M<U.near||M>U.far||P.push({distance:M,point:k.clone().applyMatrix4(V.matrixWorld),face:null,faceIndex:null,object:V}))}}}}}}},i=function(g,f,l){g=g.getDescendants();for(var k=0,h=g.length;k<h;k++){j(g[k],f,l)}};v.Raycaster.prototype.precision=0.0001;v.Raycaster.prototype.linePrecision=1;v.Raycaster.prototype.set=function(d,c){this.ray.set(d,c)};v.Raycaster.prototype.intersectObject=function(e,d){var f=[];!0===d&&i(e,this,f);j(e,this,f);f.sort(q);return f};v.Raycaster.prototype.intersectObjects=function(g,f){for(var l=[],k=0,h=g.length;k<h;k++){j(g[k],this,l),!0===f&&i(g[k],this,l)}l.sort(q);return l}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;var b=this;Object.defineProperties(this,{rotation:{enumerable:!0,value:(new THREE.Euler).onChange(function(){b.quaternion.setFromEuler(b.rotation,!1)})},quaternion:{enumerable:!0,value:(new THREE.Quaternion).onChange(function(){b.rotation.setFromQuaternion(b.quaternion,void 0,!1)})},scale:{enumerable:!0,value:new THREE.Vector3(1,1,1)}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");return this.rotation.order},set eulerOrder(b){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=b},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(b){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(b){this.matrix.multiplyMatrices(b,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(d,c){this.quaternion.setFromAxisAngle(d,c)},setRotationFromEuler:function(b){this.quaternion.setFromEuler(b,!0)},setRotationFromMatrix:function(b){this.quaternion.setFromRotationMatrix(b)},setRotationFromQuaternion:function(b){this.quaternion.copy(b)},rotateOnAxis:function(){var b=new THREE.Quaternion;return function(a,d){b.setFromAxisAngle(a,d);this.quaternion.multiply(b);return this}}(),rotateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.rotateOnAxis(b,a)}}(),translateOnAxis:function(){var b=new THREE.Vector3;return function(a,d){b.copy(a);b.applyQuaternion(this.quaternion);this.position.add(b.multiplyScalar(d));return this}}(),translate:function(d,c){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(c,d)},translateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.translateOnAxis(b,a)}}(),translateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.translateOnAxis(b,a)}}(),translateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.translateOnAxis(b,a)}}(),localToWorld:function(b){return b.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var b=new THREE.Matrix4;return function(a){return a.applyMatrix4(b.getInverse(this.matrixWorld))}}(),lookAt:function(){var b=new THREE.Matrix4;return function(a){b.lookAt(a,this.position,this.up);this.quaternion.setFromRotationMatrix(b)}}(),add:function(d){if(d===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")}else{if(d instanceof THREE.Object3D){void 0!==d.parent&&d.parent.remove(d);d.parent=this;d.dispatchEvent({type:"added"});this.children.push(d);for(var c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__addObject(d)}}},remove:function(d){var c=this.children.indexOf(d);if(-1!==c){d.parent=void 0;d.dispatchEvent({type:"removed"});this.children.splice(c,1);for(c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(d)}},traverse:function(e){e(this);for(var d=0,f=this.children.length;d<f;d++){this.children[d].traverse(e)}},getObjectById:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.id===g||!0===f&&(h=h.getObjectById(g,f),void 0!==h)){return h}}},getObjectByName:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.name===g||!0===f&&(h=h.getObjectByName(g,f),void 0!==h)){return h}}},getChildByName:function(d,c){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(d,c)},getDescendants:function(e){void 0===e&&(e=[]);Array.prototype.push.apply(e,this.children);for(var d=0,f=this.children.length;d<f;d++){this.children[d].getDescendants(e)}return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e){void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}},clone:function(e,d){void 0===e&&(e=new THREE.Object3D);void 0===d&&(d=!0);e.name=this.name;e.up.copy(this.up);e.position.copy(this.position);e.quaternion.copy(this.quaternion);e.scale.copy(this.scale);e.renderDepth=this.renderDepth;e.rotationAutoUpdate=this.rotationAutoUpdate;e.matrix.copy(this.matrix);e.matrixWorld.copy(this.matrixWorld);e.matrixAutoUpdate=this.matrixAutoUpdate;e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;e.visible=this.visible;e.castShadow=this.castShadow;e.receiveShadow=this.receiveShadow;e.frustumCulled=this.frustumCulled;e.userData=JSON.parse(JSON.stringify(this.userData));if(!0===d){for(var f=0;f<this.children.length;f++){e.add(this.children[f].clone())}}return e}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function aI(){if(ay===ax){var b=new THREE.RenderableVertex;aw.push(b);ax++;ay++;return b}return aw[ay++]}function aH(){if(at===aq){var b=new THREE.RenderableFace;av.push(b);aq++;at++;return b}return av[at++]}function aG(){if(ar===T){var b=new THREE.RenderableLine;am.push(b);T++;ar++;return b}return am[ar++]}function aF(d,c){return d.z!==c.z?c.z-d.z:d.id!==c.id?d.id-c.id:0}function aE(l,k){var t=0,s=1,r=l.z+l.w,q=k.z+k.w,p=-l.z+l.w,n=-k.z+k.w;if(0<=r&&0<=q&&0<=p&&0<=n){return !0}if(0>r&&0>q||0>p&&0>n){return !1}0>r?t=Math.max(t,r/(r-q)):0>q&&(s=Math.min(s,r/(r-q)));0>p?t=Math.max(t,p/(p-n)):0>n&&(s=Math.min(s,p/(p-n)));if(s<t){return !1}l.lerp(k,t);k.lerp(l,1-s);return !0}var aD,aC,aB=[],aA=0,az,ay,aw=[],ax=0,au,at,av=[],aq=0,ap,ar,am=[],T=0,ao,S,aa=[],ai=0,Z={objects:[],lights:[],elements:[]},aj=new THREE.Vector3,ad=new THREE.Vector3,ag=new THREE.Vector3,ah=new THREE.Vector3,ae=new THREE.Vector4,al=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),ac=new THREE.Box3,af=Array(3),P=new THREE.Matrix4,i=new THREE.Matrix4,M,an=new THREE.Matrix4,m=new THREE.Matrix3,O=new THREE.Frustum,ab=new THREE.Vector4,ak=new THREE.Vector4;this.projectVector=function(d,c){c.matrixWorldInverse.getInverse(c.matrixWorld);i.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse);return d.applyProjection(i)};this.unprojectVector=function(){var b=new THREE.Matrix4;return function(a,d){b.getInverse(d.projectionMatrix);i.multiplyMatrices(d.matrixWorld,b);return a.applyProjection(i)}}();this.pickingRay=function(e,d){e.z=-1;var f=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,d);this.unprojectVector(f,d);f.sub(e).normalize();return new THREE.Raycaster(e,f)};var o=function(e){if(!1!==e.visible){if(e instanceof THREE.Light){Z.lights.push(e)}else{if(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite){if(!1===e.frustumCulled||!0===O.intersectsObject(e)){if(aC===aA){var d=new THREE.RenderableObject;aB.push(d);aA++;aC++;aD=d}else{aD=aB[aC++]}aD.id=e.id;aD.object=e;null!==e.renderDepth?aD.z=e.renderDepth:(ah.setFromMatrixPosition(e.matrixWorld),ah.applyProjection(i),aD.z=ah.z);Z.objects.push(aD)}}}for(var d=0,f=e.children.length;d<f;d++){o(e.children[d])}}},j=new function(){var s=[],q=[],p=null,l=null,b=new THREE.Matrix3,a=function(e){var d=e.positionWorld,f=e.positionScreen;d.copy(e.position).applyMatrix4(M);f.copy(d).applyMatrix4(i);d=1/f.w;f.x*=d;f.y*=d;f.z*=d;e.visible=-1<=f.x&&1>=f.x&&-1<=f.y&&1>=f.y&&-1<=f.z&&1>=f.z},t=function(e,d,f){if(!0===e.visible||!0===d.visible||!0===f.visible){return !0}af[0]=e.positionScreen;af[1]=d.positionScreen;af[2]=f.positionScreen;return al.isIntersectionBox(ac.setFromPoints(af))},c=function(e,d,f){return 0>(f.positionScreen.x-e.positionScreen.x)*(d.positionScreen.y-e.positionScreen.y)-(f.positionScreen.y-e.positionScreen.y)*(d.positionScreen.x-e.positionScreen.x)};return{setObject:function(d){p=d;l=p.material;b.getNormalMatrix(p.matrixWorld);s.length=0;q.length=0},projectVertex:a,checkTriangleVisibility:t,checkBackfaceCulling:c,pushVertex:function(e,g,f){az=aI();az.position.set(e,g,f);a(az)},pushNormal:function(e,d,f){s.push(e,d,f)},pushUv:function(e,d){q.push(e,d)},pushLine:function(g,f){var k=aw[g],h=aw[f];ap=aG();ap.id=p.id;ap.v1.copy(k);ap.v2.copy(h);ap.z=(k.positionScreen.z+h.positionScreen.z)/2;ap.material=p.material;Z.elements.push(ap)},pushTriangle:function(e,n,f){var d=aw[e],h=aw[n],g=aw[f];if(!1!==t(d,h,g)&&(l.side===THREE.DoubleSide||!0===c(d,h,g))){au=aH();au.id=p.id;au.v1.copy(d);au.v2.copy(h);au.v3.copy(g);au.z=(d.positionScreen.z+h.positionScreen.z+g.positionScreen.z)/3;for(d=0;3>d;d++){h=3*arguments[d],g=au.vertexNormalsModel[d],g.set(s[h],s[h+1],s[h+2]),g.applyMatrix3(b).normalize(),h=2*arguments[d],au.uvs[d].set(q[h],q[h+1])}au.vertexNormalsLength=3;au.material=p.material;Z.elements.push(au)}}}};this.projectScene=function(Y,X,Q,N){var I,J,D,u,q,G,t,F;S=ar=at=0;Z.elements.length=0;!0===Y.autoUpdate&&Y.updateMatrixWorld();void 0===X.parent&&X.updateMatrixWorld();P.copy(X.matrixWorldInverse.getInverse(X.matrixWorld));i.multiplyMatrices(X.projectionMatrix,P);O.setFromMatrix(i);aC=0;Z.objects.length=0;Z.lights.length=0;o(Y);!0===Q&&Z.objects.sort(aF);Y=0;for(Q=Z.objects.length;Y<Q;Y++){if(I=Z.objects[Y].object,J=I.geometry,j.setObject(I),M=I.matrixWorld,ay=0,I instanceof THREE.Mesh){if(J instanceof THREE.BufferGeometry){if(G=J.attributes,I=J.offsets,void 0!==G.position){t=G.position.array;J=0;for(u=t.length;J<u;J+=3){j.pushVertex(t[J],t[J+1],t[J+2])}if(void 0!==G.normal){for(F=G.normal.array,J=0,u=F.length;J<u;J+=3){j.pushNormal(F[J],F[J+1],F[J+2])}}if(void 0!==G.uv){for(F=G.uv.array,J=0,u=F.length;J<u;J+=2){j.pushUv(F[J],F[J+1])}}if(void 0!==G.index){if(G=G.index.array,0<I.length){for(Y=0;Y<I.length;Y++){for(u=I[Y],t=u.index,J=u.start,u=u.start+u.count;J<u;J+=3){j.pushTriangle(G[J]+t,G[J+1]+t,G[J+2]+t)}}}else{for(J=0,u=G.length;J<u;J+=3){j.pushTriangle(G[J],G[J+1],G[J+2])}}}else{for(J=0,u=t.length/3;J<u;J+=3){j.pushTriangle(J,J+1,J+2)}}}}else{if(J instanceof THREE.Geometry){D=J.vertices;u=J.faces;G=J.faceVertexUvs[0];m.getNormalMatrix(M);t=I.material instanceof THREE.MeshFaceMaterial;F=!0===t?I.material:null;for(var B=0,W=D.length;B<W;B++){var K=D[B];j.pushVertex(K.x,K.y,K.z)}B=0;for(W=u.length;B<W;B++){D=u[B];var b=!0===t?F.materials[D.materialIndex]:I.material;if(void 0!==b){var n=b.side,K=aw[D.a],d=aw[D.b],s=aw[D.c];if(!0===b.morphTargets){q=J.morphTargets;var V=I.morphTargetInfluences,U=K.position,e=d.position,c=s.position;aj.set(0,0,0);ad.set(0,0,0);ag.set(0,0,0);for(var g=0,a=q.length;g<a;g++){var R=V[g];if(0!==R){var A=q[g].vertices;aj.x+=(A[D.a].x-U.x)*R;aj.y+=(A[D.a].y-U.y)*R;aj.z+=(A[D.a].z-U.z)*R;ad.x+=(A[D.b].x-e.x)*R;ad.y+=(A[D.b].y-e.y)*R;ad.z+=(A[D.b].z-e.z)*R;ag.x+=(A[D.c].x-c.x)*R;ag.y+=(A[D.c].y-c.y)*R;ag.z+=(A[D.c].z-c.z)*R}}K.position.add(aj);d.position.add(ad);s.position.add(ag);j.projectVertex(K);j.projectVertex(d);j.projectVertex(s)}if(!1!==j.checkTriangleVisibility(K,d,s)){V=j.checkBackfaceCulling(K,d,s);if(n!==THREE.DoubleSide){if(n===THREE.FrontSide&&!1===V){continue}if(n===THREE.BackSide&&!0===V){continue}}au=aH();au.id=I.id;au.v1.copy(K);au.v2.copy(d);au.v3.copy(s);au.normalModel.copy(D.normal);!1!==V||n!==THREE.BackSide&&n!==THREE.DoubleSide||au.normalModel.negate();au.normalModel.applyMatrix3(m).normalize();q=D.vertexNormals;U=0;for(e=Math.min(q.length,3);U<e;U++){c=au.vertexNormalsModel[U],c.copy(q[U]),!1!==V||n!==THREE.BackSide&&n!==THREE.DoubleSide||c.negate(),c.applyMatrix3(m).normalize()}au.vertexNormalsLength=q.length;n=G[B];if(void 0!==n){for(q=0;3>q;q++){au.uvs[q].copy(n[q])}}au.color=D.color;au.material=b;au.z=(K.positionScreen.z+d.positionScreen.z+s.positionScreen.z)/3;Z.elements.push(au)}}}}}}else{if(I instanceof THREE.Line){if(J instanceof THREE.BufferGeometry){if(G=J.attributes,void 0!==G.position){t=G.position.array;J=0;for(u=t.length;J<u;J+=3){j.pushVertex(t[J],t[J+1],t[J+2])}if(void 0!==G.index){for(G=G.index.array,J=0,u=G.length;J<u;J+=2){j.pushLine(G[J],G[J+1])}}else{for(J=0,u=t.length/3-1;J<u;J++){j.pushLine(J,J+1)}}}}else{if(J instanceof THREE.Geometry&&(an.multiplyMatrices(i,M),D=I.geometry.vertices,0!==D.length)){for(K=aI(),K.positionScreen.copy(D[0]).applyMatrix4(an),J=I.type===THREE.LinePieces?2:1,B=1,W=D.length;B<W;B++){K=aI(),K.positionScreen.copy(D[B]).applyMatrix4(an),0<(B+1)%J||(d=aw[ay-2],ab.copy(K.positionScreen),ak.copy(d.positionScreen),!0===aE(ab,ak)&&(ab.multiplyScalar(1/ab.w),ak.multiplyScalar(1/ak.w),ap=aG(),ap.id=I.id,ap.v1.positionScreen.copy(ab),ap.v2.positionScreen.copy(ak),ap.z=Math.max(ab.z,ak.z),ap.material=I.material,I.material.vertexColors===THREE.VertexColors&&(ap.vertexColors[0].copy(I.geometry.colors[B]),ap.vertexColors[1].copy(I.geometry.colors[B-1])),Z.elements.push(ap)))}}}}else{I instanceof THREE.Sprite&&(ae.set(M.elements[12],M.elements[13],M.elements[14],1),ae.applyMatrix4(i),J=1/ae.w,ae.z*=J,-1<=ae.z&&1>=ae.z&&(S===ai?(u=new THREE.RenderableSprite,aa.push(u),ai++,S++,ao=u):ao=aa[S++],ao.id=I.id,ao.x=ae.x*J,ao.y=ae.y*J,ao.z=ae.z,ao.object=I,ao.rotation=I.rotation,ao.scale.x=I.scale.x*Math.abs(ao.x-(ae.x+X.projectionMatrix.elements[0])/(ae.w+X.projectionMatrix.elements[12])),ao.scale.y=I.scale.y*Math.abs(ao.y-(ae.y+X.projectionMatrix.elements[5])/(ae.w+X.projectionMatrix.elements[13])),ao.material=I.material,Z.elements.push(ao)))}}}!0===N&&Z.elements.sort(aF);return Z}};THREE.Face3=function(h,g,l,k,j,i){this.a=h;this.b=g;this.c=l;this.normal=k instanceof THREE.Vector3?k:new THREE.Vector3;this.vertexNormals=k instanceof Array?k:[];this.color=j instanceof THREE.Color?j:new THREE.Color;this.vertexColors=j instanceof Array?j:[];this.vertexTangents=[];this.materialIndex=void 0!==i?i:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Face4=function(i,h,n,m,l,k,j){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(i,h,n,l,k,j)};THREE.BufferAttribute=function(){};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(b){this.array.set(b)},setX:function(d,c){this.array[d*this.itemSize]=c},setY:function(d,c){this.array[d*this.itemSize+1]=c},setZ:function(d,c){this.array[d*this.itemSize+2]=c},setXY:function(e,d,f){e*=this.itemSize;this.array[e]=d;this.array[e+1]=f},setXYZ:function(f,e,h,g){f*=this.itemSize;this.array[f]=e;this.array[f+1]=h;this.array[f+2]=g},setXYZW:function(g,f,j,i,h){g*=this.itemSize;this.array[g]=f;this.array[g+1]=j;this.array[g+2]=i;this.array[g+3]=h}};THREE.Int8Attribute=function(d,c){this.array=new Int8Array(d*c);this.itemSize=c};THREE.Int8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint8Attribute=function(d,c){this.array=new Uint8Array(d*c);this.itemSize=c};THREE.Uint8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint8ClampedAttribute=function(d,c){this.array=new Uint8ClampedArray(d*c);this.itemSize=c};THREE.Uint8ClampedAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Int16Attribute=function(d,c){this.array=new Int16Array(d*c);this.itemSize=c};THREE.Int16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint16Attribute=function(d,c){this.array=new Uint16Array(d*c);this.itemSize=c};THREE.Uint16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Int32Attribute=function(d,c){this.array=new Int32Array(d*c);this.itemSize=c};THREE.Int32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint32Attribute=function(d,c){this.array=new Uint32Array(d*c);this.itemSize=c};THREE.Uint32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Float32Attribute=function(d,c){this.array=new Float32Array(d*c);this.itemSize=c};THREE.Float32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Float64Attribute=function(d,c){this.array=new Float64Array(d*c);this.itemSize=c};THREE.Float64Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,d,f){!1===d instanceof THREE.BufferAttribute?(console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute )."),this.attributes[e]={array:d,itemSize:f}):this.attributes[e]=d},getAttribute:function(b){return this.attributes[b]},addDrawCall:function(e,d,f){this.drawcalls.push({start:e,count:d,index:void 0!==f?f:0})},applyMatrix:function(d){var c=this.attributes.position;void 0!==c&&(d.applyToVector3Array(c.array),c.needsUpdate=!0);c=this.attributes.normal;void 0!==c&&((new THREE.Matrix3).getNormalMatrix(d).applyToVector3Array(c.array),c.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var i=this.attributes.position.array;if(i){var h=this.boundingBox;3<=i.length&&(h.min.x=h.max.x=i[0],h.min.y=h.max.y=i[1],h.min.z=h.max.z=i[2]);for(var n=3,m=i.length;n<m;n+=3){var l=i[n],k=i[n+1],j=i[n+2];l<h.min.x?h.min.x=l:l>h.max.x&&(h.max.x=l);k<h.min.y?h.min.y=k:k>h.max.y&&(h.max.y=k);j<h.min.z?h.min.z=j:j>h.max.z&&(h.max.z=j)}}if(void 0===i||0===i.length){this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){var d=new THREE.Box3,c=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var j=this.attributes.position.array;if(j){d.makeEmpty();for(var i=this.boundingSphere.center,h=0,b=j.length;h<b;h+=3){c.set(j[h],j[h+1],j[h+2]),d.addPoint(c)}d.center(i);for(var a=0,h=0,b=j.length;h<b;h+=3){c.set(j[h],j[h+1],j[h+2]),a=Math.max(a,i.distanceToSquared(c))}this.boundingSphere.radius=Math.sqrt(a)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var P,O,N,M;P=this.attributes.position.array.length;if(void 0===this.attributes.normal){this.attributes.normal={itemSize:3,array:new Float32Array(P)}}else{for(P=0,O=this.attributes.normal.array.length;P<O;P++){this.attributes.normal.array[P]=0}}var L=this.attributes.position.array,K=this.attributes.normal.array,J,I,H,G,F,D,E=new THREE.Vector3,B=new THREE.Vector3,A=new THREE.Vector3,C=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var j=this.attributes.index.array,o=0<this.offsets.length?this.offsets:[{start:0,count:j.length,index:0}];N=0;for(M=o.length;N<M;++N){O=o[N].start;J=o[N].count;var i=o[N].index;P=O;for(O+=J;P<O;P+=3){J=i+j[P],I=i+j[P+1],H=i+j[P+2],G=L[3*J],F=L[3*J+1],D=L[3*J+2],E.set(G,F,D),G=L[3*I],F=L[3*I+1],D=L[3*I+2],B.set(G,F,D),G=L[3*H],F=L[3*H+1],D=L[3*H+2],A.set(G,F,D),C.subVectors(A,B),m.subVectors(E,B),C.cross(m),K[3*J]+=C.x,K[3*J+1]+=C.y,K[3*J+2]+=C.z,K[3*I]+=C.x,K[3*I+1]+=C.y,K[3*I+2]+=C.z,K[3*H]+=C.x,K[3*H+1]+=C.y,K[3*H+2]+=C.z}}}else{for(P=0,O=L.length;P<O;P+=9){G=L[P],F=L[P+1],D=L[P+2],E.set(G,F,D),G=L[P+3],F=L[P+4],D=L[P+5],B.set(G,F,D),G=L[P+6],F=L[P+7],D=L[P+8],A.set(G,F,D),C.subVectors(A,B),m.subVectors(E,B),C.cross(m),K[P]=C.x,K[P+1]=C.y,K[P+2]=C.z,K[P+3]=C.x,K[P+4]=C.y,K[P+5]=C.z,K[P+6]=C.x,K[P+7]=C.y,K[P+8]=C.z}}this.normalizeNormals();this.normalsNeedUpdate=!0}},computeTangents:function(){function aS(e,d,f){aG=aP[3*e];aH=aP[3*e+1];aD=aP[3*e+2];aC=aP[3*d];aE=aP[3*d+1];aA=aP[3*d+2];az=aP[3*f];aB=aP[3*f+1];aw=aP[3*f+2];ad=aN[2*e];ay=aN[2*e+1];ac=aN[2*d];af=aN[2*d+1];an=aN[2*f];ae=aN[2*f+1];ao=aC-aG;ai=az-aG;al=aE-aH;am=aB-aH;aj=aA-aD;av=aw-aD;ah=ac-ad;ak=an-ad;T=af-ay;i=ae-ay;M=1/(ah*i-ak*T);ax.set((i*ao-T*ai)*M,(i*al-T*am)*M,(i*aj-T*av)*M);m.set((ah*ai-ak*ao)*M,(ah*am-ak*al)*M,(ah*av-ak*aj)*M);aK[e].add(ax);aK[d].add(ax);aK[f].add(ax);aJ[e].add(m);aJ[d].add(m);aJ[f].add(m)}function aR(b){au.x=aO[3*b];au.y=aO[3*b+1];au.z=aO[3*b+2];ab.copy(au);ar=aK[b];S.copy(ar);S.sub(au.multiplyScalar(au.dot(ar))).normalize();at.crossVectors(ab,ar);aF=at.dot(aJ[b]);Z=0>aF?-1:1;aL[4*b]=S.x;aL[4*b+1]=S.y;aL[4*b+2]=S.z;aL[4*b+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}else{var aQ=this.attributes.index.array,aP=this.attributes.position.array,aO=this.attributes.normal.array,aN=this.attributes.uv.array,aM=aP.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*aM)});for(var aL=this.attributes.tangent.array,aK=[],aJ=[],aI=0;aI<aM;aI++){aK[aI]=new THREE.Vector3,aJ[aI]=new THREE.Vector3}var aG,aH,aD,aC,aE,aA,az,aB,aw,ad,ay,ac,af,an,ae,ao,ai,al,am,aj,av,ah,ak,T,i,M,ax=new THREE.Vector3,m=new THREE.Vector3,O,ag,ap,o,j,aa=this.offsets,aI=0;for(ag=aa.length;aI<ag;++aI){O=aa[aI].start;ap=aa[aI].count;var aq=aa[aI].index,aM=O;for(O+=ap;aM<O;aM+=3){ap=aq+aQ[aM],o=aq+aQ[aM+1],j=aq+aQ[aM+2],aS(ap,o,j)}}var S=new THREE.Vector3,at=new THREE.Vector3,au=new THREE.Vector3,ab=new THREE.Vector3,Z,ar,aF,aI=0;for(ag=aa.length;aI<ag;++aI){for(O=aa[aI].start,ap=aa[aI].count,aq=aa[aI].index,aM=O,O+=ap;aM<O;aM+=3){ap=aq+aQ[aM],o=aq+aQ[aM+1],j=aq+aQ[aM+2],aR(ap),aR(o),aR(j)}}}},computeOffsets:function(H){var G=H;void 0===H&&(G=65535);Date.now();H=this.attributes.index.array;for(var F=this.attributes.position.array,E=H.length/3,D=new Uint16Array(H.length),C=0,B=0,A=[{start:0,count:0,index:0}],v=A[0],u=0,o=0,j=new Int32Array(6),m=new Int32Array(F.length),J=new Int32Array(F.length),I=0;I<F.length;I++){m[I]=-1,J[I]=-1}for(F=0;F<E;F++){for(var i=o=0;3>i;i++){I=H[3*F+i],-1==m[I]?(j[2*i]=I,j[2*i+1]=-1,o++):m[I]<v.index?(j[2*i]=I,j[2*i+1]=-1,u++):(j[2*i]=I,j[2*i+1]=m[I])}if(B+o>v.index+G){for(v={start:C,count:0,index:B},A.push(v),o=0;6>o;o+=2){i=j[o+1],-1<i&&i<v.index&&(j[o+1]=-1)}}for(o=0;6>o;o+=2){I=j[o],i=j[o+1],-1===i&&(i=B++),m[I]=i,J[i]=I,D[C++]=i-v.index,v.count++}}this.reorderBuffers(D,J,B);return this.offsets=A},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var h=this.attributes.normal.array,g,l,k,j=0,i=h.length;j<i;j+=3){g=h[j],l=h[j+1],k=h[j+2],g=1/Math.sqrt(g*g+l*l+k*k),h[j]*=g,h[j+1]*=g,h[j+2]*=g}},reorderBuffers:function(v,u,t){var s={},r=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],q;for(q in this.attributes){if("index"!=q){for(var p=this.attributes[q].array,o=0,m=r.length;o<m;o++){var j=r[o];if(p instanceof j){s[q]=new j(this.attributes[q].itemSize*t);break}}}}for(r=0;r<t;r++){for(q in p=u[r],this.attributes){if("index"!=q){for(var o=this.attributes[q].array,m=this.attributes[q].itemSize,j=s[q],i=0;i<m;i++){j[r*m+i]=o[p*m+i]}}}}this.attributes.index.array=v;for(q in this.attributes){"index"!=q&&(this.attributes[q].array=s[q],this.attributes[q].numItems=this.attributes[q].itemSize*t)}},clone:function(){var j=new THREE.BufferGeometry,i=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],p;for(p in this.attributes){for(var o=this.attributes[p],n=o.array,m={itemSize:o.itemSize,array:null},o=0,l=i.length;o<l;o++){var k=i[o];if(n instanceof k){m.array=new k(n);break}}j.attributes[p]=m}o=0;for(l=this.offsets.length;o<l;o++){i=this.offsets[o],j.offsets.push({start:i.start,index:i.index,count:i.count})}return j},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(h){for(var g=(new THREE.Matrix3).getNormalMatrix(h),l=0,k=this.vertices.length;l<k;l++){this.vertices[l].applyMatrix4(h)}l=0;for(k=this.faces.length;l<k;l++){h=this.faces[l];h.normal.applyMatrix3(g).normalize();for(var j=0,i=h.vertexNormals.length;j<i;j++){h.vertexNormals[j].applyMatrix3(g).normalize()}}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeFaceNormals:function(){for(var i=new THREE.Vector3,h=new THREE.Vector3,n=0,m=this.faces.length;n<m;n++){var l=this.faces[n],k=this.vertices[l.a],j=this.vertices[l.b];i.subVectors(this.vertices[l.c],j);h.subVectors(k,j);i.cross(h);i.normalize();l.normal.copy(i)}},computeVertexNormals:function(r){var q,p,o;o=Array(this.vertices.length);q=0;for(p=this.vertices.length;q<p;q++){o[q]=new THREE.Vector3}if(r){var n,m,l,j=new THREE.Vector3,i=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],n=this.vertices[p.a],m=this.vertices[p.b],l=this.vertices[p.c],j.subVectors(l,m),i.subVectors(n,m),j.cross(i),o[p.a].add(j),o[p.b].add(j),o[p.c].add(j)}}else{for(r=0,q=this.faces.length;r<q;r++){p=this.faces[r],o[p.a].add(p.normal),o[p.b].add(p.normal),o[p.c].add(p.normal)}}q=0;for(p=this.vertices.length;q<p;q++){o[q].normalize()}r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],p.vertexNormals[0]=o[p.a].clone(),p.vertexNormals[1]=o[p.b].clone(),p.vertexNormals[2]=o[p.c].clone()}},computeMorphNormals:function(){var r,q,p,o,n;p=0;for(o=this.faces.length;p<o;p++){for(n=this.faces[p],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),r=0,q=n.vertexNormals.length;r<q;r++){n.__originalVertexNormals[r]?n.__originalVertexNormals[r].copy(n.vertexNormals[r]):n.__originalVertexNormals[r]=n.vertexNormals[r].clone()}}var m=new THREE.Geometry;m.faces=this.faces;r=0;for(q=this.morphTargets.length;r<q;r++){if(!this.morphNormals[r]){this.morphNormals[r]={};this.morphNormals[r].faceNormals=[];this.morphNormals[r].vertexNormals=[];n=this.morphNormals[r].faceNormals;var l=this.morphNormals[r].vertexNormals,j,i;p=0;for(o=this.faces.length;p<o;p++){j=new THREE.Vector3,i={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(j),l.push(i)}}l=this.morphNormals[r];m.vertices=this.morphTargets[r].vertices;m.computeFaceNormals();m.computeVertexNormals();p=0;for(o=this.faces.length;p<o;p++){n=this.faces[p],j=l.faceNormals[p],i=l.vertexNormals[p],j.copy(n.normal),i.a.copy(n.vertexNormals[0]),i.b.copy(n.vertexNormals[1]),i.c.copy(n.vertexNormals[2])}}p=0;for(o=this.faces.length;p<o;p++){n=this.faces[p],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals}},computeTangents:function(){var U,T,S,R,Q,P,O,M,K,J,I,G,H,E,D,F,B,A=[],C=[];S=new THREE.Vector3;var m=new THREE.Vector3,j=new THREE.Vector3,o=new THREE.Vector3,i=new THREE.Vector3;U=0;for(T=this.vertices.length;U<T;U++){A[U]=new THREE.Vector3,C[U]=new THREE.Vector3}U=0;for(T=this.faces.length;U<T;U++){Q=this.faces[U],P=this.faceVertexUvs[0][U],R=Q.a,B=Q.b,Q=Q.c,O=this.vertices[R],M=this.vertices[B],K=this.vertices[Q],J=P[0],I=P[1],G=P[2],P=M.x-O.x,H=K.x-O.x,E=M.y-O.y,D=K.y-O.y,M=M.z-O.z,O=K.z-O.z,K=I.x-J.x,F=G.x-J.x,I=I.y-J.y,J=G.y-J.y,G=1/(K*J-F*I),S.set((J*P-I*H)*G,(J*E-I*D)*G,(J*M-I*O)*G),m.set((K*H-F*P)*G,(K*D-F*E)*G,(K*O-F*M)*G),A[R].add(S),A[B].add(S),A[Q].add(S),C[R].add(m),C[B].add(m),C[Q].add(m)}m=["a","b","c","d"];U=0;for(T=this.faces.length;U<T;U++){for(Q=this.faces[U],S=0;S<Math.min(Q.vertexNormals.length,3);S++){i.copy(Q.vertexNormals[S]),R=Q[m[S]],B=A[R],j.copy(B),j.sub(i.multiplyScalar(i.dot(B))).normalize(),o.crossVectors(Q.vertexNormals[S],B),R=o.dot(C[R]),R=0>R?-1:1,Q.vertexTangents[S]=new THREE.Vector4(j.x,j.y,j.z,R)}}this.hasTangents=!0},computeLineDistances:function(){for(var f=0,e=this.vertices,h=0,g=e.length;h<g;h++){0<h&&(f+=e[h].distanceTo(e[h-1])),this.lineDistances[h]=f}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(H,G,F){if(!1===H instanceof THREE.Geometry){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",H)}else{var E,D=this.vertices.length,C=this.vertices,B=H.vertices,A=this.faces,v=H.faces,u=this.faceVertexUvs[0];H=H.faceVertexUvs[0];void 0===F&&(F=0);void 0!==G&&(E=(new THREE.Matrix3).getNormalMatrix(G));for(var o=0,j=B.length;o<j;o++){var m=B[o].clone();void 0!==G&&m.applyMatrix4(G);C.push(m)}o=0;for(j=v.length;o<j;o++){var B=v[o],J,I=B.vertexNormals,i=B.vertexColors,m=new THREE.Face3(B.a+D,B.b+D,B.c+D);m.normal.copy(B.normal);void 0!==E&&m.normal.applyMatrix3(E).normalize();G=0;for(C=I.length;G<C;G++){J=I[G].clone(),void 0!==E&&J.applyMatrix3(E).normalize(),m.vertexNormals.push(J)}m.color.copy(B.color);G=0;for(C=i.length;G<C;G++){J=i[G],m.vertexColors.push(J.clone())}m.materialIndex=B.materialIndex+F;A.push(m)}o=0;for(j=H.length;o<j;o++){if(F=H[o],E=[],void 0!==F){G=0;for(C=F.length;G<C;G++){E.push(new THREE.Vector2(F[G].x,F[G].y))}u.push(E)}}}},mergeVertices:function(){var i={},h=[],n=[],m,l=Math.pow(10,4),k,j;k=0;for(j=this.vertices.length;k<j;k++){m=this.vertices[k],m=Math.round(m.x*l)+"_"+Math.round(m.y*l)+"_"+Math.round(m.z*l),void 0===i[m]?(i[m]=k,h.push(this.vertices[k]),n[k]=h.length-1):n[k]=n[i[m]]}i=[];k=0;for(j=this.faces.length;k<j;k++){for(l=this.faces[k],l.a=n[l.a],l.b=n[l.b],l.c=n[l.c],l=[l.a,l.b,l.c],m=0;3>m;m++){if(l[m]==l[(m+1)%3]){i.push(k);break}}}for(k=i.length-1;0<=k;k--){for(l=i[k],this.faces.splice(l,1),n=0,j=this.faceVertexUvs.length;n<j;n++){this.faceVertexUvs[n].splice(l,1)}}k=this.vertices.length-h.length;this.vertices=h;return k},makeGroups:function(){var b=0;return function(t,s){var r,q,p,o,m={},j=this.morphTargets.length,i=this.morphNormals.length;this.geometryGroups={};r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],p=t?p.materialIndex:0,p in m||(m[p]={hash:p,counter:0}),o=m[p].hash+"_"+m[p].counter,o in this.geometryGroups||(this.geometryGroups[o]={faces3:[],materialIndex:p,vertices:0,numMorphTargets:j,numMorphNormals:i}),this.geometryGroups[o].vertices+3>s&&(m[p].counter+=1,o=m[p].hash+"_"+m[p].counter,o in this.geometryGroups||(this.geometryGroups[o]={faces3:[],materialIndex:p,vertices:0,numMorphTargets:j,numMorphNormals:i})),this.geometryGroups[o].faces3.push(r),this.geometryGroups[o].vertices+=3}this.geometryGroupsList=[];for(var a in this.geometryGroups){this.geometryGroups[a].id=b++,this.geometryGroupsList.push(this.geometryGroups[a])}}}(),clone:function(){for(var j=new THREE.Geometry,i=this.vertices,p=0,o=i.length;p<o;p++){j.vertices.push(i[p].clone())}i=this.faces;p=0;for(o=i.length;p<o;p++){j.faces.push(i[p].clone())}i=this.faceVertexUvs[0];p=0;for(o=i.length;p<o;p++){for(var n=i[p],m=[],l=0,k=n.length;l<k;l++){m.push(new THREE.Vector2(n[l].x,n[l].y))}j.faceVertexUvs[0].push(m)}return j},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var b=new THREE.Matrix4;return function(a){b.lookAt(this.position,a,this.up);this.quaternion.setFromRotationMatrix(b)}}();THREE.Camera.prototype.clone=function(b){void 0===b&&(b=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,b);b.matrixWorldInverse.copy(this.matrixWorldInverse);b.projectionMatrix.copy(this.projectionMatrix);return b};THREE.OrthographicCamera=function(h,g,l,k,j,i){THREE.Camera.call(this);this.left=h;this.right=g;this.top=l;this.bottom=k;this.near=void 0!==j?j:0.1;this.far=void 0!==i?i:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var b=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,b);b.left=this.left;b.right=this.right;b.top=this.top;b.bottom=this.bottom;b.near=this.near;b.far=this.far;return b};THREE.PerspectiveCamera=function(f,e,h,g){THREE.Camera.call(this);this.fov=void 0!==f?f:50;this.aspect=void 0!==e?e:1;this.near=void 0!==h?h:0.1;this.far=void 0!==g?g:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(d,c){void 0===c&&(c=24);this.fov=2*THREE.Math.radToDeg(Math.atan(c/(2*d)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(h,g,l,k,j,i){this.fullWidth=h;this.fullHeight=g;this.x=l;this.y=k;this.width=j;this.height=i;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var f=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,h=-e,g=f*h,f=Math.abs(f*e-g),h=Math.abs(e-h);this.projectionMatrix.makeFrustum(g+this.x*f/this.fullWidth,g+(this.x+this.width)*f/this.fullWidth,e-(this.y+this.height)*h/this.fullHeight,e-this.y*h/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.PerspectiveCamera.prototype.clone=function(){var b=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,b);b.fov=this.fov;b.aspect=this.aspect;b.near=this.near;b.far=this.far;return b};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(b){void 0===b&&(b=new THREE.Light);THREE.Object3D.prototype.clone.call(this,b);b.color.copy(this.color);return b};THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var b=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,b);return b};THREE.AreaLight=function(d,c){THREE.Light.call(this,d);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==c?c:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(d,c){THREE.Light.call(this,d);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==c?c:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var b=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;b.shadowCameraNear=this.shadowCameraNear;b.shadowCameraFar=this.shadowCameraFar;b.shadowCameraLeft=this.shadowCameraLeft;b.shadowCameraRight=this.shadowCameraRight;b.shadowCameraTop=this.shadowCameraTop;b.shadowCameraBottom=this.shadowCameraBottom;b.shadowCameraVisible=this.shadowCameraVisible;b.shadowBias=this.shadowBias;b.shadowDarkness=this.shadowDarkness;b.shadowMapWidth=this.shadowMapWidth;b.shadowMapHeight=this.shadowMapHeight;b.shadowCascade=this.shadowCascade;b.shadowCascadeOffset.copy(this.shadowCascadeOffset);b.shadowCascadeCount=this.shadowCascadeCount;b.shadowCascadeBias=this.shadowCascadeBias.slice(0);b.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);b.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);b.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);b.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return b};THREE.HemisphereLight=function(e,d,f){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(d);this.intensity=void 0!==f?f:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var b=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,b);b.groundColor.copy(this.groundColor);b.intensity=this.intensity;return b};THREE.PointLight=function(e,d,f){THREE.Light.call(this,e);this.intensity=void 0!==d?d:1;this.distance=void 0!==f?f:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var b=new THREE.PointLight;THREE.Light.prototype.clone.call(this,b);b.intensity=this.intensity;b.distance=this.distance;return b};THREE.SpotLight=function(g,f,j,i,h){THREE.Light.call(this,g);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==f?f:1;this.distance=void 0!==j?j:0;this.angle=void 0!==i?i:Math.PI/3;this.exponent=void 0!==h?h:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var b=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.distance=this.distance;b.angle=this.angle;b.exponent=this.exponent;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;b.shadowCameraNear=this.shadowCameraNear;b.shadowCameraFar=this.shadowCameraFar;b.shadowCameraFov=this.shadowCameraFov;b.shadowCameraVisible=this.shadowCameraVisible;b.shadowBias=this.shadowBias;b.shadowDarkness=this.shadowDarkness;b.shadowMapWidth=this.shadowMapWidth;b.shadowMapHeight=this.shadowMapHeight;return b};THREE.Cache=function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(d,c){this.files[d]=c},get:function(b){return this.files[b]},remove:function(b){delete this.files[b]},clear:function(){this.files={}}};THREE.Loader=function(b){this.statusDomElement=(this.showStatus=b)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var b=document.createElement("div");b.style.position="absolute";b.style.right="0px";b.style.top="0px";b.style.fontSize="0.8em";b.style.textAlign="left";b.style.background="rgba(0,0,0,0.25)";b.style.color="#fff";b.style.width="120px";b.style.padding="0.5em 0.5em 0.5em 0.5em";b.style.zIndex=1000;b.innerHTML="Loading ...";return b},updateProgress:function(d){var c="Loaded ",c=d.total?c+((100*d.loaded/d.total).toFixed(0)+"%"):c+((d.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=c},extractUrlBase:function(b){b=b.split("/");if(1===b.length){return"./"}b.pop();return b.join("/")+"/"},initMaterials:function(f,e){for(var h=[],g=0;g<f.length;++g){h[g]=this.createMaterial(f[g],e)}return h},needsTangents:function(e){for(var d=0,f=e.length;d<f;d++){if(e[d] instanceof THREE.ShaderMaterial){return !0}}return !1},createMaterial:function(r,q){function p(b){b=Math.log(b)/Math.LN2;return Math.pow(2,Math.round(b))}function o(B,A,t,s,f,c,b){var D=/\.dds$/i.test(t),C=q+t;if(D){var E=THREE.ImageUtils.loadCompressedTexture(C);B[A]=E}else{E=document.createElement("canvas"),B[A]=new THREE.Texture(E)}B[A].sourceFile=t;s&&(B[A].repeat.set(s[0],s[1]),1!==s[0]&&(B[A].wrapS=THREE.RepeatWrapping),1!==s[1]&&(B[A].wrapT=THREE.RepeatWrapping));f&&B[A].offset.set(f[0],f[1]);c&&(t={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==t[c[0]]&&(B[A].wrapS=t[c[0]]),void 0!==t[c[1]]&&(B[A].wrapT=t[c[1]]));b&&(B[A].anisotropy=b);D||(E=B[A],m.imageLoader.crossOrigin=m.crossOrigin,m.imageLoader.load(C,function(g){if(!1===THREE.Math.isPowerOfTwo(g.width)||!1===THREE.Math.isPowerOfTwo(g.height)){var e=p(g.width),h=p(g.height);E.image.width=e;E.image.height=h;E.image.getContext("2d").drawImage(g,0,0,e,h)}else{E.image=g}E.needsUpdate=!0}))}function n(b){return(255*b[0]<<16)+(255*b[1]<<8)+255*b[2]}var m=this,l="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(r.shading){var i=r.shading.toLowerCase();"phong"===i?l="MeshPhongMaterial":"basic"===i&&(l="MeshBasicMaterial")}void 0!==r.blending&&void 0!==THREE[r.blending]&&(j.blending=THREE[r.blending]);if(void 0!==r.transparent||1>r.opacity){j.transparent=r.transparent}void 0!==r.depthTest&&(j.depthTest=r.depthTest);void 0!==r.depthWrite&&(j.depthWrite=r.depthWrite);void 0!==r.visible&&(j.visible=r.visible);void 0!==r.flipSided&&(j.side=THREE.BackSide);void 0!==r.doubleSided&&(j.side=THREE.DoubleSide);void 0!==r.wireframe&&(j.wireframe=r.wireframe);void 0!==r.vertexColors&&("face"===r.vertexColors?j.vertexColors=THREE.FaceColors:r.vertexColors&&(j.vertexColors=THREE.VertexColors));r.colorDiffuse?j.color=n(r.colorDiffuse):r.DbgColor&&(j.color=r.DbgColor);r.colorSpecular&&(j.specular=n(r.colorSpecular));r.colorAmbient&&(j.ambient=n(r.colorAmbient));r.colorEmissive&&(j.emissive=n(r.colorEmissive));r.transparency&&(j.opacity=r.transparency);r.specularCoef&&(j.shininess=r.specularCoef);r.mapDiffuse&&q&&o(j,"map",r.mapDiffuse,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);r.mapLight&&q&&o(j,"lightMap",r.mapLight,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);r.mapBump&&q&&o(j,"bumpMap",r.mapBump,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);r.mapNormal&&q&&o(j,"normalMap",r.mapNormal,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);r.mapSpecular&&q&&o(j,"specularMap",r.mapSpecular,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);r.mapBumpScale&&(j.bumpScale=r.mapBumpScale);r.mapNormal?(l=THREE.ShaderLib.normalmap,i=THREE.UniformsUtils.clone(l.uniforms),i.tNormal.value=j.normalMap,r.mapNormalFactor&&i.uNormalScale.value.set(r.mapNormalFactor,r.mapNormalFactor),j.map&&(i.tDiffuse.value=j.map,i.enableDiffuse.value=!0),j.specularMap&&(i.tSpecular.value=j.specularMap,i.enableSpecular.value=!0),j.lightMap&&(i.tAO.value=j.lightMap,i.enableAO.value=!0),i.diffuse.value.setHex(j.color),i.specular.value.setHex(j.specular),i.ambient.value.setHex(j.ambient),i.shininess.value=j.shininess,void 0!==j.opacity&&(i.opacity.value=j.opacity),l=new THREE.ShaderMaterial({fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:i,lights:!0,fog:!0}),j.transparent&&(l.transparent=!0)):l=new THREE[l](j);void 0!==r.DbgName&&(l.name=r.DbgName);return l}};THREE.XHRLoader=function(b){this.cache=new THREE.Cache;this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(h,g,l,k){var j=this,i=j.cache.get(h);void 0!==i?g(i):(i=new XMLHttpRequest,void 0!==g&&i.addEventListener("load",function(a){j.cache.add(h,a.target.responseText);g(a.target.responseText);j.manager.itemEnd(h)},!1),void 0!==l&&i.addEventListener("progress",function(b){l(b)},!1),void 0!==k&&i.addEventListener("error",function(b){k(b)},!1),void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),i.open("GET",h,!0),i.send(null),j.manager.itemStart(h))},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.ImageLoader=function(b){this.cache=new THREE.Cache;this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(h,g,l,k){var j=this,i=j.cache.get(h);if(void 0!==i){g(i)}else{return i=document.createElement("img"),void 0!==g&&i.addEventListener("load",function(a){j.cache.add(h,this);g(this);j.manager.itemEnd(h)},!1),void 0!==l&&i.addEventListener("progress",function(b){l(b)},!1),void 0!==k&&i.addEventListener("error",function(b){k(b)},!1),void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),i.src=h,j.manager.itemStart(h),i}},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.JSONLoader=function(b){THREE.Loader.call(this,b);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,d,f){f=f&&"string"===typeof f?f:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,d,f)};THREE.JSONLoader.prototype.loadAjaxJSON=function(i,h,n,m,l){var k=new XMLHttpRequest,j=0;k.onreadystatechange=function(){if(k.readyState===k.DONE){if(200===k.status||0===k.status){if(k.responseText){var a=JSON.parse(k.responseText);if(void 0!==a.metadata&&"scene"===a.metadata.type){console.error('THREE.JSONLoader: "'+h+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}a=i.parse(a,m);n(a.geometry,a.materials)}else{console.error('THREE.JSONLoader: "'+h+'" seems to be unreachable or the file is empty.')}i.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load \""+h+'" ('+k.status+")")}}else{k.readyState===k.LOADING?l&&(0===j&&(j=k.getResponseHeader("Content-Length")),l({total:j,loaded:k.responseText.length})):k.readyState===k.HEADERS_RECEIVED&&void 0!==l&&(j=k.getResponseHeader("Content-Length"))}};k.open("GET",h,!0);k.withCredentials=this.withCredentials;k.send(null)};THREE.JSONLoader.prototype.parse=function(f,e){var h=new THREE.Geometry,g=void 0!==f.scale?1/f.scale:1;(function(M){var K,J,I,H,G,F,D,E,B,A,C,m,j,o=f.faces;F=f.vertices;var c=f.normals,a=f.colors,i=0;if(void 0!==f.uvs){for(K=0;K<f.uvs.length;K++){f.uvs[K].length&&i++}for(K=0;K<i;K++){h.faceVertexUvs[K]=[]}}H=0;for(G=F.length;H<G;){K=new THREE.Vector3,K.x=F[H++]*M,K.y=F[H++]*M,K.z=F[H++]*M,h.vertices.push(K)}H=0;for(G=o.length;H<G;){if(M=o[H++],B=M&1,I=M&2,K=M&8,D=M&16,A=M&32,F=M&64,M&=128,B){B=new THREE.Face3;B.a=o[H];B.b=o[H+1];B.c=o[H+3];C=new THREE.Face3;C.a=o[H+1];C.b=o[H+2];C.c=o[H+3];H+=4;I&&(I=o[H++],B.materialIndex=I,C.materialIndex=I);I=h.faces.length;if(K){for(K=0;K<i;K++){for(m=f.uvs[K],h.faceVertexUvs[K][I]=[],h.faceVertexUvs[K][I+1]=[],J=0;4>J;J++){E=o[H++],j=m[2*E],E=m[2*E+1],j=new THREE.Vector2(j,E),2!==J&&h.faceVertexUvs[K][I].push(j),0!==J&&h.faceVertexUvs[K][I+1].push(j)}}}D&&(D=3*o[H++],B.normal.set(c[D++],c[D++],c[D]),C.normal.copy(B.normal));if(A){for(K=0;4>K;K++){D=3*o[H++],A=new THREE.Vector3(c[D++],c[D++],c[D]),2!==K&&B.vertexNormals.push(A),0!==K&&C.vertexNormals.push(A)}}F&&(F=o[H++],F=a[F],B.color.setHex(F),C.color.setHex(F));if(M){for(K=0;4>K;K++){F=o[H++],F=a[F],2!==K&&B.vertexColors.push(new THREE.Color(F)),0!==K&&C.vertexColors.push(new THREE.Color(F))}}h.faces.push(B);h.faces.push(C)}else{B=new THREE.Face3;B.a=o[H++];B.b=o[H++];B.c=o[H++];I&&(I=o[H++],B.materialIndex=I);I=h.faces.length;if(K){for(K=0;K<i;K++){for(m=f.uvs[K],h.faceVertexUvs[K][I]=[],J=0;3>J;J++){E=o[H++],j=m[2*E],E=m[2*E+1],j=new THREE.Vector2(j,E),h.faceVertexUvs[K][I].push(j)}}}D&&(D=3*o[H++],B.normal.set(c[D++],c[D++],c[D]));if(A){for(K=0;3>K;K++){D=3*o[H++],A=new THREE.Vector3(c[D++],c[D++],c[D]),B.vertexNormals.push(A)}}F&&(F=o[H++],B.color.setHex(a[F]));if(M){for(K=0;3>K;K++){F=o[H++],B.vertexColors.push(new THREE.Color(a[F]))}}h.faces.push(B)}}})(g);(function(){var a=void 0!==f.influencesPerVertex?f.influencesPerVertex:2;if(f.skinWeights){for(var i=0,c=f.skinWeights.length;i<c;i+=a){h.skinWeights.push(new THREE.Vector4(f.skinWeights[i],1<a?f.skinWeights[i+1]:0,2<a?f.skinWeights[i+2]:0,3<a?f.skinWeights[i+3]:0))}}if(f.skinIndices){for(i=0,c=f.skinIndices.length;i<c;i+=a){h.skinIndices.push(new THREE.Vector4(f.skinIndices[i],1<a?f.skinIndices[i+1]:0,2<a?f.skinIndices[i+2]:0,3<a?f.skinIndices[i+3]:0))}}h.bones=f.bones;h.bones&&0<h.bones.length&&(h.skinWeights.length!==h.skinIndices.length||h.skinIndices.length!==h.vertices.length)&&console.warn("When skinning, number of vertices ("+h.vertices.length+"), skinIndices ("+h.skinIndices.length+"), and skinWeights ("+h.skinWeights.length+") should match.");h.animation=f.animation;h.animations=f.animations})();(function(a){if(void 0!==f.morphTargets){var p,m,j,i,c,r;p=0;for(m=f.morphTargets.length;p<m;p++){for(h.morphTargets[p]={},h.morphTargets[p].name=f.morphTargets[p].name,h.morphTargets[p].vertices=[],c=h.morphTargets[p].vertices,r=f.morphTargets[p].vertices,j=0,i=r.length;j<i;j+=3){var o=new THREE.Vector3;o.x=r[j]*a;o.y=r[j+1]*a;o.z=r[j+2]*a;c.push(o)}}}if(void 0!==f.morphColors){for(p=0,m=f.morphColors.length;p<m;p++){for(h.morphColors[p]={},h.morphColors[p].name=f.morphColors[p].name,h.morphColors[p].colors=[],i=h.morphColors[p].colors,c=f.morphColors[p].colors,a=0,j=c.length;a<j;a+=3){r=new THREE.Color(16755200),r.setRGB(c[a],c[a+1],c[a+2]),i.push(r)}}}})(g);h.computeFaceNormals();h.computeBoundingSphere();if(void 0===f.materials||0===f.materials.length){return{geometry:h}}g=this.initMaterials(f.materials,e);this.needsTangents(g)&&h.computeTangents();return{geometry:h,materials:g}};THREE.LoadingManager=function(h,g,l){var k=this,j=0,i=0;this.onLoad=h;this.onProgress=g;this.onError=l;this.itemStart=function(b){i++};this.itemEnd=function(b){j++;if(void 0!==k.onProgress){k.onProgress(b,j,i)}if(j===i&&void 0!==k.onLoad){k.onLoad()}}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader;j.setCrossOrigin(this.crossOrigin);j.load(g,function(b){f(h.parse(JSON.parse(b)))})},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(h){var g=new THREE.BufferGeometry,l=h.attributes,k=h.offsets;h=h.boundingSphere;for(var j in l){var i=l[j];g.attributes[j]={itemSize:i.itemSize,array:new self[i.type](i.array)}}void 0!==k&&(g.offsets=JSON.parse(JSON.stringify(k)));void 0!==h&&(g.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==h.center?h.center:[0,0,0]),h.radius));return g}};THREE.MaterialLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader;j.setCrossOrigin(this.crossOrigin);j.load(g,function(b){f(h.parse(JSON.parse(b)))})},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(f){var e=new THREE[f.type];void 0!==f.color&&e.color.setHex(f.color);void 0!==f.ambient&&e.ambient.setHex(f.ambient);void 0!==f.emissive&&e.emissive.setHex(f.emissive);void 0!==f.specular&&e.specular.setHex(f.specular);void 0!==f.shininess&&(e.shininess=f.shininess);void 0!==f.vertexColors&&(e.vertexColors=f.vertexColors);void 0!==f.blending&&(e.blending=f.blending);void 0!==f.side&&(e.side=f.side);void 0!==f.opacity&&(e.opacity=f.opacity);void 0!==f.transparent&&(e.transparent=f.transparent);void 0!==f.wireframe&&(e.wireframe=f.wireframe);if(void 0!==f.materials){for(var h=0,g=f.materials.length;h<g;h++){e.materials.push(this.parse(f.materials[h]))}}return e}};THREE.ObjectLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader(h.manager);j.setCrossOrigin(this.crossOrigin);j.load(g,function(b){f(h.parse(JSON.parse(b)))})},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(e){var d=this.parseGeometries(e.geometries),f=this.parseMaterials(e.materials);return this.parseObject(e.object,d,f)},parseGeometries:function(j){var i={};if(void 0!==j){for(var p=new THREE.JSONLoader,o=new THREE.BufferGeometryLoader,n=0,m=j.length;n<m;n++){var l,k=j[n];switch(k.type){case"PlaneGeometry":l=new THREE.PlaneGeometry(k.width,k.height,k.widthSegments,k.heightSegments);break;case"BoxGeometry":case"CubeGeometry":l=new THREE.BoxGeometry(k.width,k.height,k.depth,k.widthSegments,k.heightSegments,k.depthSegments);break;case"CircleGeometry":l=new THREE.CircleGeometry(k.radius,k.segments);break;case"CylinderGeometry":l=new THREE.CylinderGeometry(k.radiusTop,k.radiusBottom,k.height,k.radialSegments,k.heightSegments,k.openEnded);break;case"SphereGeometry":l=new THREE.SphereGeometry(k.radius,k.widthSegments,k.heightSegments,k.phiStart,k.phiLength,k.thetaStart,k.thetaLength);break;case"IcosahedronGeometry":l=new THREE.IcosahedronGeometry(k.radius,k.detail);break;case"TorusGeometry":l=new THREE.TorusGeometry(k.radius,k.tube,k.radialSegments,k.tubularSegments,k.arc);break;case"TorusKnotGeometry":l=new THREE.TorusKnotGeometry(k.radius,k.tube,k.radialSegments,k.tubularSegments,k.p,k.q,k.heightScale);break;case"BufferGeometry":l=o.parse(k.data);break;case"Geometry":l=p.parse(k.data).geometry}l.uuid=k.uuid;void 0!==k.name&&(l.name=k.name);i[k.uuid]=l}}return i},parseMaterials:function(i){var h={};if(void 0!==i){for(var n=new THREE.MaterialLoader,m=0,l=i.length;m<l;m++){var k=i[m],j=n.parse(k);j.uuid=k.uuid;void 0!==k.name&&(j.name=k.name);h[k.uuid]=j}}return h},parseObject:function(){var b=new THREE.Matrix4;return function(a,l,k){var j;switch(a.type){case"Scene":j=new THREE.Scene;break;case"PerspectiveCamera":j=new THREE.PerspectiveCamera(a.fov,a.aspect,a.near,a.far);break;case"OrthographicCamera":j=new THREE.OrthographicCamera(a.left,a.right,a.top,a.bottom,a.near,a.far);break;case"AmbientLight":j=new THREE.AmbientLight(a.color);break;case"DirectionalLight":j=new THREE.DirectionalLight(a.color,a.intensity);break;case"PointLight":j=new THREE.PointLight(a.color,a.intensity,a.distance);break;case"SpotLight":j=new THREE.SpotLight(a.color,a.intensity,a.distance,a.angle,a.exponent);break;case"HemisphereLight":j=new THREE.HemisphereLight(a.color,a.groundColor,a.intensity);break;case"Mesh":j=l[a.geometry];var i=k[a.material];void 0===j&&console.error("THREE.ObjectLoader: Undefined geometry "+a.geometry);void 0===i&&console.error("THREE.ObjectLoader: Undefined material "+a.material);j=new THREE.Mesh(j,i);break;case"Sprite":i=k[a.material];void 0===i&&console.error("THREE.ObjectLoader: Undefined material "+a.material);j=new THREE.Sprite(i);break;default:j=new THREE.Object3D}j.uuid=a.uuid;void 0!==a.name&&(j.name=a.name);void 0!==a.matrix?(b.fromArray(a.matrix),b.decompose(j.position,j.quaternion,j.scale)):(void 0!==a.position&&j.position.fromArray(a.position),void 0!==a.rotation&&j.rotation.fromArray(a.rotation),void 0!==a.scale&&j.scale.fromArray(a.scale));void 0!==a.visible&&(j.visible=a.visible);void 0!==a.userData&&(j.userData=a.userData);if(void 0!==a.children){for(var h in a.children){j.add(this.parseObject(a.children[h],l,k))}}return j}}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader(h.manager);j.setCrossOrigin(this.crossOrigin);j.load(g,function(a){h.parse(JSON.parse(a),f,g)})},setCrossOrigin:function(b){this.crossOrigin=b},addGeometryHandler:function(d,c){this.geometryHandlers[d]={loaderClass:c}},addHierarchyHandler:function(d,c){this.hierarchyHandlers[d]={loaderClass:c}},parse:function(ap,ao,an){function am(d,c){return"relativeToHTML"==c?d:Y+d}function al(){ak(ab.scene,ad.objects)}function ak(C,B){var A,t,r,p,k,f;for(f in B){var d=ab.objects[f],F=B[f];if(void 0===d){if(F.type&&F.type in ae.hierarchyHandlers){if(void 0===F.loading){A={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var E={},D;for(D in F){D in A||(E[D]=F[D])}aa=ab.materials[F.material];F.loading=!0;A=ae.hierarchyHandlers[F.type].loaderObject;A.options?A.load(am(F.url,ad.urlBaseType),ah(f,C,aa,F)):A.load(am(F.url,ad.urlBaseType),ah(f,C,aa,F),E)}}else{if(void 0!==F.geometry){if(W=ab.geometries[F.geometry]){d=!1;aa=ab.materials[F.material];d=aa instanceof THREE.ShaderMaterial;t=F.position;r=F.rotation;p=F.scale;A=F.matrix;k=F.quaternion;F.material||(aa=new THREE.MeshFaceMaterial(ab.face_materials[F.geometry]));aa instanceof THREE.MeshFaceMaterial&&0===aa.materials.length&&(aa=new THREE.MeshFaceMaterial(ab.face_materials[F.geometry]));if(aa instanceof THREE.MeshFaceMaterial){for(E=0;E<aa.materials.length;E++){d=d||aa.materials[E] instanceof THREE.ShaderMaterial}}d&&W.computeTangents();F.skin?d=new THREE.SkinnedMesh(W,aa):F.morph?(d=new THREE.MorphAnimMesh(W,aa),void 0!==F.duration&&(d.duration=F.duration),void 0!==F.time&&(d.time=F.time),void 0!==F.mirroredLoop&&(d.mirroredLoop=F.mirroredLoop),aa.morphNormals&&W.computeMorphNormals()):d=new THREE.Mesh(W,aa);d.name=f;A?(d.matrixAutoUpdate=!1,d.matrix.set(A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15])):(d.position.fromArray(t),k?d.quaternion.fromArray(k):d.rotation.fromArray(r),d.scale.fromArray(p));d.visible=F.visible;d.castShadow=F.castShadow;d.receiveShadow=F.receiveShadow;C.add(d);ab.objects[f]=d}}else{if("AmbientLight"===F.type||"PointLight"===F.type||"DirectionalLight"===F.type||"SpotLight"===F.type||"HemisphereLight"===F.type||"AreaLight"===F.type){E=F.color;A=F.intensity;t=F.distance;r=F.position;p=F.rotation;switch(F.type){case"AmbientLight":M=new THREE.AmbientLight(E);break;case"PointLight":M=new THREE.PointLight(E,A,t);M.position.fromArray(r);break;case"DirectionalLight":M=new THREE.DirectionalLight(E,A);M.position.fromArray(F.direction);break;case"SpotLight":M=new THREE.SpotLight(E,A,t,1);M.angle=F.angle;M.position.fromArray(r);M.target.set(r[0],r[1]-t,r[2]);M.target.applyEuler(new THREE.Euler(p[0],p[1],p[2],"XYZ"));break;case"HemisphereLight":M=new THREE.DirectionalLight(E,A,t);M.target.set(r[0],r[1]-t,r[2]);M.target.applyEuler(new THREE.Euler(p[0],p[1],p[2],"XYZ"));break;case"AreaLight":M=new THREE.AreaLight(E,A),M.position.fromArray(r),M.width=F.size,M.height=F.size_y}C.add(M);M.name=f;ab.lights[f]=M;ab.objects[f]=M}else{"PerspectiveCamera"===F.type||"OrthographicCamera"===F.type?(t=F.position,r=F.rotation,k=F.quaternion,"PerspectiveCamera"===F.type?S=new THREE.PerspectiveCamera(F.fov,F.aspect,F.near,F.far):"OrthographicCamera"===F.type&&(S=new THREE.OrthographicCamera(F.left,F.right,F.top,F.bottom,F.near,F.far)),S.name=f,S.position.fromArray(t),void 0!==k?S.quaternion.fromArray(k):void 0!==r&&S.rotation.fromArray(r),C.add(S),ab.cameras[f]=S,ab.objects[f]=S):(t=F.position,r=F.rotation,p=F.scale,k=F.quaternion,d=new THREE.Object3D,d.name=f,d.position.fromArray(t),k?d.quaternion.fromArray(k):d.rotation.fromArray(r),d.scale.fromArray(p),d.visible=void 0!==F.visible?F.visible:!1,C.add(d),ab.objects[f]=d,ab.empties[f]=d)}}}if(d){if(void 0!==F.userData){for(var v in F.userData){d.userData[v]=F.userData[v]}}if(void 0!==F.groups){for(E=0;E<F.groups.length;E++){A=F.groups[E],void 0===ab.groups[A]&&(ab.groups[A]=[]),ab.groups[A].push(f)}}}}void 0!==d&&void 0!==F.children&&ak(d,F.children)}}function aj(v,u,t,s,r){var q=r.rotation,p=r.quaternion,n=r.scale;v.position.fromArray(r.position);p?v.quaternion.fromArray(p):v.rotation.fromArray(q);v.scale.fromArray(n);s&&v.traverse(function(b){b.material=s});var e=void 0!==r.visible?r.visible:!0;v.traverse(function(b){b.visible=e});t.add(v);v.name=u;ab.objects[u]=v;al()}function ai(b){return function(a,d){a.name=b;ab.geometries[b]=a;ab.face_materials[b]=d;al();j-=1;ae.onLoadComplete();af()}}function ah(f,e,h,g){return function(a){aj(a.content?a.content:a.dae?a.scene:a,f,e,h,g);j-=1;ae.onLoadComplete();af()}}function ag(b){return function(a,d){a.name=b;ab.geometries[b]=a;ab.face_materials[b]=d}}function af(){ae.callbackProgress({totalModels:i,totalTextures:I,loadedModels:i-j,loadedTextures:I-O},ab);ae.onLoadProgress();if(0===j&&0===O){for(var b=0;b<o.length;b++){var f=o[b],e=ab.objects[f.targetName];e?f.object.target=e:(f.object.target=new THREE.Object3D,ab.scene.add(f.object.target));f.object.target.userData.targetInverse=f.object}ao(ab)}}function ac(e,d){d(e);if(void 0!==e.children){for(var f in e.children){ac(e.children[f],d)}}}var ae=this,Y=THREE.Loader.prototype.extractUrlBase(an),W,aa,S,Q,U,M,j,O,i,I,ab,o=[],ad=ap,R;for(R in this.geometryHandlers){ap=this.geometryHandlers[R].loaderClass,this.geometryHandlers[R].loaderObject=new ap}for(R in this.hierarchyHandlers){ap=this.hierarchyHandlers[R].loaderClass,this.hierarchyHandlers[R].loaderObject=new ap}O=j=0;ab={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};ad.transform&&(R=ad.transform.position,ap=ad.transform.rotation,an=ad.transform.scale,R&&ab.scene.position.fromArray(R),ap&&ab.scene.rotation.fromArray(ap),an&&ab.scene.scale.fromArray(an),R||ap||an)&&(ab.scene.updateMatrix(),ab.scene.updateMatrixWorld());R=function(b){return function(){O-=b;af();ae.onLoadComplete()}};for(var X in ad.fogs){ap=ad.fogs[X],"linear"===ap.type?Q=new THREE.Fog(0,ap.near,ap.far):"exp2"===ap.type&&(Q=new THREE.FogExp2(0,ap.density)),ap=ap.color,Q.color.setRGB(ap[0],ap[1],ap[2]),ab.fogs[X]=Q}for(var Z in ad.geometries){Q=ad.geometries[Z],Q.type in this.geometryHandlers&&(j+=1,ae.onLoadStart())}for(var T in ad.objects){ac(ad.objects[T],function(b){b.type&&b.type in ae.hierarchyHandlers&&(j+=1,ae.onLoadStart())})}i=j;for(Z in ad.geometries){if(Q=ad.geometries[Z],"cube"===Q.type){W=new THREE.BoxGeometry(Q.width,Q.height,Q.depth,Q.widthSegments,Q.heightSegments,Q.depthSegments),W.name=Z,ab.geometries[Z]=W}else{if("plane"===Q.type){W=new THREE.PlaneGeometry(Q.width,Q.height,Q.widthSegments,Q.heightSegments),W.name=Z,ab.geometries[Z]=W}else{if("sphere"===Q.type){W=new THREE.SphereGeometry(Q.radius,Q.widthSegments,Q.heightSegments),W.name=Z,ab.geometries[Z]=W}else{if("cylinder"===Q.type){W=new THREE.CylinderGeometry(Q.topRad,Q.botRad,Q.height,Q.radSegs,Q.heightSegs),W.name=Z,ab.geometries[Z]=W}else{if("torus"===Q.type){W=new THREE.TorusGeometry(Q.radius,Q.tube,Q.segmentsR,Q.segmentsT),W.name=Z,ab.geometries[Z]=W}else{if("icosahedron"===Q.type){W=new THREE.IcosahedronGeometry(Q.radius,Q.subdivisions),W.name=Z,ab.geometries[Z]=W}else{if(Q.type in this.geometryHandlers){T={};for(U in Q){"type"!==U&&"url"!==U&&(T[U]=Q[U])}this.geometryHandlers[Q.type].loaderObject.load(am(Q.url,ad.urlBaseType),ai(Z),T)}else{"embedded"===Q.type&&(T=ad.embeds[Q.id],T.metadata=ad.metadata,T&&(T=this.geometryHandlers.ascii.loaderObject.parse(T,""),ag(Z)(T.geometry,T.materials)))}}}}}}}}for(var m in ad.textures){if(Z=ad.textures[m],Z.url instanceof Array){for(O+=Z.url.length,U=0;U<Z.url.length;U++){ae.onLoadStart()}}else{O+=1,ae.onLoadStart()}}I=O;for(m in ad.textures){Z=ad.textures[m];void 0!==Z.mapping&&void 0!==THREE[Z.mapping]&&(Z.mapping=new THREE[Z.mapping]);if(Z.url instanceof Array){T=Z.url.length;Q=[];for(U=0;U<T;U++){Q[U]=am(Z.url[U],ad.urlBaseType)}U=(U=/\.dds$/i.test(Q[0]))?THREE.ImageUtils.loadCompressedTextureCube(Q,Z.mapping,R(T)):THREE.ImageUtils.loadTextureCube(Q,Z.mapping,R(T))}else{U=/\.dds$/i.test(Z.url),T=am(Z.url,ad.urlBaseType),Q=R(1),U=U?THREE.ImageUtils.loadCompressedTexture(T,Z.mapping,Q):THREE.ImageUtils.loadTexture(T,Z.mapping,Q),void 0!==THREE[Z.minFilter]&&(U.minFilter=THREE[Z.minFilter]),void 0!==THREE[Z.magFilter]&&(U.magFilter=THREE[Z.magFilter]),Z.anisotropy&&(U.anisotropy=Z.anisotropy),Z.repeat&&(U.repeat.set(Z.repeat[0],Z.repeat[1]),1!==Z.repeat[0]&&(U.wrapS=THREE.RepeatWrapping),1!==Z.repeat[1]&&(U.wrapT=THREE.RepeatWrapping)),Z.offset&&U.offset.set(Z.offset[0],Z.offset[1]),Z.wrap&&(T={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==T[Z.wrap[0]]&&(U.wrapS=T[Z.wrap[0]]),void 0!==T[Z.wrap[1]]&&(U.wrapT=T[Z.wrap[1]]))}ab.textures[m]=U}var P,V;for(P in ad.materials){m=ad.materials[P];for(V in m.parameters){"envMap"===V||"map"===V||"lightMap"===V||"bumpMap"===V?m.parameters[V]=ab.textures[m.parameters[V]]:"shading"===V?m.parameters[V]="flat"===m.parameters[V]?THREE.FlatShading:THREE.SmoothShading:"side"===V?m.parameters[V]="double"==m.parameters[V]?THREE.DoubleSide:"back"==m.parameters[V]?THREE.BackSide:THREE.FrontSide:"blending"===V?m.parameters[V]=m.parameters[V] in THREE?THREE[m.parameters[V]]:THREE.NormalBlending:"combine"===V?m.parameters[V]=m.parameters[V] in THREE?THREE[m.parameters[V]]:THREE.MultiplyOperation:"vertexColors"===V?"face"==m.parameters[V]?m.parameters[V]=THREE.FaceColors:m.parameters[V]&&(m.parameters[V]=THREE.VertexColors):"wrapRGB"===V&&(R=m.parameters[V],m.parameters[V]=new THREE.Vector3(R[0],R[1],R[2]))}void 0!==m.parameters.opacity&&1>m.parameters.opacity&&(m.parameters.transparent=!0);m.parameters.normalMap?(R=THREE.ShaderLib.normalmap,Z=THREE.UniformsUtils.clone(R.uniforms),U=m.parameters.color,T=m.parameters.specular,Q=m.parameters.ambient,X=m.parameters.shininess,Z.tNormal.value=ab.textures[m.parameters.normalMap],m.parameters.normalScale&&Z.uNormalScale.value.set(m.parameters.normalScale[0],m.parameters.normalScale[1]),m.parameters.map&&(Z.tDiffuse.value=m.parameters.map,Z.enableDiffuse.value=!0),m.parameters.envMap&&(Z.tCube.value=m.parameters.envMap,Z.enableReflection.value=!0,Z.reflectivity.value=m.parameters.reflectivity),m.parameters.lightMap&&(Z.tAO.value=m.parameters.lightMap,Z.enableAO.value=!0),m.parameters.specularMap&&(Z.tSpecular.value=ab.textures[m.parameters.specularMap],Z.enableSpecular.value=!0),m.parameters.displacementMap&&(Z.tDisplacement.value=ab.textures[m.parameters.displacementMap],Z.enableDisplacement.value=!0,Z.uDisplacementBias.value=m.parameters.displacementBias,Z.uDisplacementScale.value=m.parameters.displacementScale),Z.diffuse.value.setHex(U),Z.specular.value.setHex(T),Z.ambient.value.setHex(Q),Z.shininess.value=X,m.parameters.opacity&&(Z.opacity.value=m.parameters.opacity),aa=new THREE.ShaderMaterial({fragmentShader:R.fragmentShader,vertexShader:R.vertexShader,uniforms:Z,lights:!0,fog:!0})):aa=new THREE[m.type](m.parameters);aa.name=P;ab.materials[P]=aa}for(P in ad.materials){if(m=ad.materials[P],m.parameters.materials){V=[];for(U=0;U<m.parameters.materials.length;U++){V.push(ab.materials[m.parameters.materials[U]])}ab.materials[P].materials=V}}al();ab.cameras&&ad.defaults.camera&&(ab.currentCamera=ab.cameras[ad.defaults.camera]);ab.fogs&&ad.defaults.fog&&(ab.scene.fog=ab.fogs[ad.defaults.fog]);ae.callbackSync(ab);af()}};THREE.TextureLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(f,e,h,g){h=new THREE.ImageLoader(this.manager);h.setCrossOrigin(this.crossOrigin);h.load(f,function(b){b=new THREE.Texture(b);b.needsUpdate=!0;void 0!==e&&e(b)})},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,setValues:function(f){if(void 0!==f){for(var e in f){var h=f[e];if(void 0===h){console.warn("THREE.Material: '"+e+"' parameter is undefined.")}else{if(e in this){var g=this[e];g instanceof THREE.Color?g.set(h):g instanceof THREE.Vector3&&h instanceof THREE.Vector3?g.copy(h):this[e]="overdraw"==e?Number(h):h}}}}},clone:function(b){void 0===b&&(b=new THREE.Material);b.name=this.name;b.side=this.side;b.opacity=this.opacity;b.transparent=this.transparent;b.blending=this.blending;b.blendSrc=this.blendSrc;b.blendDst=this.blendDst;b.blendEquation=this.blendEquation;b.depthTest=this.depthTest;b.depthWrite=this.depthWrite;b.polygonOffset=this.polygonOffset;b.polygonOffsetFactor=this.polygonOffsetFactor;b.polygonOffsetUnits=this.polygonOffsetUnits;b.alphaTest=this.alphaTest;b.overdraw=this.overdraw;b.visible=this.visible;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var b=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.linecap=this.linecap;b.linejoin=this.linejoin;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.LineDashedMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var b=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.scale=this.scale;b.dashSize=this.dashSize;b.gapSize=this.gapSize;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.MeshBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var b=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;return b};THREE.MeshLambertMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var b=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshPhongMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var b=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.specular.copy(this.specular);b.shininess=this.shininess;b.metal=this.metal;b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.bumpMap=this.bumpMap;b.bumpScale=this.bumpScale;b.normalMap=this.normalMap;b.normalScale.copy(this.normalScale);b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshDepthMaterial=function(b){THREE.Material.call(this);this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(b)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var b=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,b);b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(b)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var b=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,b);b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshFaceMaterial=function(b){this.materials=b instanceof Array?b:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var d=new THREE.MeshFaceMaterial,c=0;c<this.materials.length;c++){d.materials.push(this.materials[c].clone())}return d};THREE.ParticleSystemMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleSystemMaterial.prototype.clone=function(){var b=new THREE.ParticleSystemMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.size=this.size;b.sizeAttenuation=this.sizeAttenuation;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;THREE.ShaderMaterial=function(b){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(b)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var b=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,b);b.fragmentShader=this.fragmentShader;b.vertexShader=this.vertexShader;b.uniforms=THREE.UniformsUtils.clone(this.uniforms);b.attributes=this.attributes;b.defines=this.defines;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.fog=this.fog;b.lights=this.lights;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.RawShaderMaterial=function(b){THREE.ShaderMaterial.call(this,b)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var b=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,b);return b};THREE.SpriteMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(b)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var b=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.rotation=this.rotation;b.fog=this.fog;return b};THREE.SpriteCanvasMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(d,e){};this.setValues(b)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.clone=function(){var b=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.program=this.program;return b};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;THREE.Texture=function(r,q,p,o,n,m,l,j,i){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=r;this.mipmaps=[];this.mapping=void 0!==q?q:new THREE.UVMapping;this.wrapS=void 0!==p?p:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==o?o:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n?n:THREE.LinearFilter;this.minFilter=void 0!==m?m:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==l?l:THREE.RGBAFormat;this.type=void 0!==j?j:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(b){!0===b&&this.update();this._needsUpdate=b},clone:function(b){void 0===b&&(b=new THREE.Texture);b.image=this.image;b.mipmaps=this.mipmaps.slice(0);b.mapping=this.mapping;b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.format=this.format;b.type=this.type;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.generateMipmaps=this.generateMipmaps;b.premultiplyAlpha=this.premultiplyAlpha;b.flipY=this.flipY;b.unpackAlignment=this.unpackAlignment;return b},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(v,u,t,s,r,q,p,o,m,j,i){THREE.Texture.call(this,null,q,p,o,m,j,s,r,i);this.image={width:u,height:t};this.mipmaps=v;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var b=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.DataTexture=function(v,u,t,s,r,q,p,o,m,j,i){THREE.Texture.call(this,null,q,p,o,m,j,s,r,i);this.image={data:v,width:u,height:t}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var b=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.ParticleSystem=function(d,c){THREE.Object3D.call(this);this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==c?c:new THREE.ParticleSystemMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(b){void 0===b&&(b=new THREE.ParticleSystem(this.geometry,this.material));b.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Line=function(e,d,f){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==d?d:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==f?f:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(b){void 0===b&&(b=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Mesh=function(d,c){THREE.Object3D.call(this);this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==c?c:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0,c=this.geometry.morphTargets.length;d<c;d++){this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=d}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(void 0!==this.morphTargetDictionary[b]){return this.morphTargetDictionary[b]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(d,c){void 0===d&&(d=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,d,c);return d};THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4;this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(f,e){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate){f?this.skinMatrix.multiplyMatrices(f,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0,this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0}for(var h=0,g=this.children.length;h<g;h++){this.children[h].update(this.skinMatrix,e)}};THREE.Skeleton=function(j,i){this.useVertexTexture=void 0!==i?i:!0;this.bones=[];this.boneMatrices=[];var p,o,n,m,l;if(void 0!==j){for(var k=0;k<j.length;++k){o=j[k],n=o.pos,m=o.rotq,l=o.scl,p=this.addBone(),p.name=o.name,p.position.set(n[0],n[1],n[2]),p.quaternion.set(m[0],m[1],m[2],m[3]),void 0!==l?p.scale.set(l[0],l[1],l[2]):p.scale.set(1,1,1)}for(k=0;k<j.length;++k){o=j[k],-1!==o.parent&&this.bones[o.parent].add(this.bones[k])}p=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=p=256<p?64:64<p?32:16<p?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*p)}};THREE.Skeleton.prototype=Object.create(THREE.Mesh.prototype);THREE.Skeleton.prototype.addBone=function(b){void 0===b&&(b=new THREE.Bone(this));this.bones.push(b);return b};THREE.Skeleton.prototype.calculateInverses=function(e){this.boneInverses=[];e=0;for(var d=this.bones.length;e<d;++e){var f=new THREE.Matrix4;f.getInverse(this.bones[e].skinMatrix);this.boneInverses.push(f)}};THREE.SkinnedMesh=function(e,d,f){THREE.Mesh.call(this,e,d);this.skeleton=new THREE.Skeleton(this.geometry&&this.geometry.bones,f);for(e=0;e<this.skeleton.bones.length;++e){d=this.skeleton.bones[e],void 0===d.parent&&this.add(d)}this.identityMatrix=new THREE.Matrix4;this.pose()};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var b=new THREE.Matrix4;return function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1}a=0;for(var f=this.children.length;a<f;a++){var e=this.children[a];e instanceof THREE.Bone?e.update(this.identityMatrix,!1):e.updateMatrixWorld(!0)}void 0===this.skeleton.boneInverses&&this.skeleton.calculateInverses();a=0;for(f=this.skeleton.bones.length;a<f;a++){b.multiplyMatrices(this.skeleton.bones[a].skinMatrix,this.skeleton.boneInverses[a]),b.flattenToArrayOffset(this.skeleton.boneMatrices,16*a)}this.skeleton.useVertexTexture&&(this.skeleton.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var e=0;e<this.geometry.skinIndices.length;e++){var d=this.geometry.skinWeights[e],f=1/d.lengthManhattan();Infinity!==f?d.multiplyScalar(f):d.set(1)}}};THREE.SkinnedMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,b);return b};THREE.MorphAnimMesh=function(d,c){THREE.Mesh.call(this,d,c);this.duration=1000;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(d,c){this.startKeyframe=d;this.endKeyframe=c;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var j=this.geometry;j.animations||(j.animations={});for(var i,p=j.animations,o=/([a-z]+)(\d+)/,n=0,m=j.morphTargets.length;n<m;n++){var l=j.morphTargets[n].name.match(o);if(l&&1<l.length){l=l[1];p[l]||(p[l]={start:Infinity,end:-Infinity});var k=p[l];n<k.start&&(k.start=n);n>k.end&&(k.end=n);i||(i=l)}}j.firstAnimation=i};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,d,f){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:d,end:f}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,d){var f=this.geometry.animations[e];f?(this.setFrameRange(f.start,f.end),this.duration=(f.end-f.start)/d*1000,this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}}else{this.time%=this.duration,0>this.time&&(this.time+=this.duration)}d=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);d!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);c=this.time%c/c;this.directionBackwards&&(c=1-c);this.morphTargetInfluences[this.currentKeyframe]=c;this.morphTargetInfluences[this.lastKeyframe]=1-c};THREE.MorphAnimMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.MorphAnimMesh(this.geometry,this.material));b.duration=this.duration;b.mirroredLoop=this.mirroredLoop;b.time=this.time;b.lastKeyframe=this.lastKeyframe;b.currentKeyframe=this.currentKeyframe;b.direction=this.direction;b.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,b);return b};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,d){void 0===d&&(d=0);d=Math.abs(d);for(var f=0;f<this.objects.length&&!(d<this.objects[f].distance);f++){}this.objects.splice(f,0,{distance:d,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var d=1,f=this.objects.length;d<f&&!(e<this.objects[d].distance);d++){}return this.objects[d-1].object};THREE.LOD.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f){if(1<this.objects.length){d.setFromMatrixPosition(f.matrixWorld);c.setFromMatrixPosition(this.matrixWorld);f=d.distanceTo(c);this.objects[0].object.visible=!0;for(var b=1,a=this.objects.length;b<a;b++){if(f>=this.objects[b].distance){this.objects[b-1].object.visible=!1,this.objects[b].object.visible=!0}else{break}}for(;b<a;b++){this.objects[b].object.visible=!1}}}}();THREE.LOD.prototype.clone=function(f){void 0===f&&(f=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,f);for(var e=0,h=this.objects.length;e<h;e++){var g=this.objects[e].object.clone();g.visible=0===e;f.addLevel(g,this.objects[e].distance)}return f};THREE.Sprite=function(){var d=new THREE.Float32Attribute(3,3);d.set([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0]);var c=new THREE.BufferGeometry;c.addAttribute("position",d);return function(b){THREE.Object3D.call(this);this.geometry=c;this.material=void 0!==b?b:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(b){void 0===b&&(b=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(d){if(d instanceof THREE.Light){-1===this.__lights.indexOf(d)&&this.__lights.push(d),d.target&&void 0===d.target.parent&&this.add(d.target)}else{if(!(d instanceof THREE.Camera||d instanceof THREE.Bone)){this.__objectsAdded.push(d);var c=this.__objectsRemoved.indexOf(d);-1!==c&&this.__objectsRemoved.splice(c,1)}}this.dispatchEvent({type:"objectAdded",object:d});d.dispatchEvent({type:"addedToScene",scene:this});for(c=0;c<d.children.length;c++){this.__addObject(d.children[c])}};THREE.Scene.prototype.__removeObject=function(d){if(d instanceof THREE.Light){var c=this.__lights.indexOf(d);-1!==c&&this.__lights.splice(c,1);if(d.shadowCascadeArray){for(c=0;c<d.shadowCascadeArray.length;c++){this.__removeObject(d.shadowCascadeArray[c])}}}else{d instanceof THREE.Camera||(this.__objectsRemoved.push(d),c=this.__objectsAdded.indexOf(d),-1!==c&&this.__objectsAdded.splice(c,1))}this.dispatchEvent({type:"objectRemoved",object:d});d.dispatchEvent({type:"removedFromScene",scene:this});for(c=0;c<d.children.length;c++){this.__removeObject(d.children[c])}};THREE.Scene.prototype.clone=function(b){void 0===b&&(b=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,b);null!==this.fog&&(b.fog=this.fog.clone());null!==this.overrideMaterial&&(b.overrideMaterial=this.overrideMaterial.clone());b.autoUpdate=this.autoUpdate;b.matrixAutoUpdate=this.matrixAutoUpdate;return b};THREE.Fog=function(e,d,f){this.name="";this.color=new THREE.Color(e);this.near=void 0!==d?d:1;this.far=void 0!==f?f:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(d,c){this.name="";this.color=new THREE.Color(d);this.density=void 0!==c?c:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(ba){function a9(f,e,h,g){a0(e);aZ(h);aW(g);aX(f.getStyle());ax.stroke();S.expandByScalar(2*e)}function a8(b){aS(b.getStyle());ax.fill()}function a7(b){a6(b.target)}function a6(h){var g=h.wrapS===THREE.RepeatWrapping,p=h.wrapT===THREE.RepeatWrapping,n=h.image,l=document.createElement("canvas");l.width=n.width;l.height=n.height;var k=l.getContext("2d");k.setTransform(1,0,0,-1,0,n.height);k.drawImage(n,0,0);aV[h.id]=ax.createPattern(l,!0===g&&!0===p?"repeat":!0===g&&!1===p?"repeat-x":!1===g&&!0===p?"repeat-y":"no-repeat")}function a5(I,H,G,F,E,D,C,B,v,A,s,d,e){if(!(e instanceof THREE.DataTexture)){!1===e.hasEventListener("update",a7)&&(void 0!==e.image&&0<e.image.width&&a6(e),e.addEventListener("update",a7));var L=aV[e.id];if(void 0!==L){aS(L);var L=e.offset.x/e.repeat.x,K=e.offset.y/e.repeat.y,J=e.image.width*e.repeat.x;e=e.image.height*e.repeat.y;C=(C+L)*J;B=(B+K)*e;G-=I;F-=H;E-=I;D-=H;v=(v+L)*J-C;A=(A+K)*e-B;s=(s+L)*J-C;d=(d+K)*e-B;e=v*d-s*A;0!==e&&(L=1/e,e=(d*G-A*E)*L,A=(d*F-A*D)*L,G=(v*E-s*G)*L,F=(v*D-s*F)*L,I=I-e*C-G*B,H=H-A*C-F*B,ax.save(),ax.transform(e,A,G,F,I,H),ax.fill(),ax.restore())}else{aS("rgba(0,0,0,1)"),ax.fill()}}}function a4(h,g,p){var n=g.x-h.x,l=g.y-h.y,k=n*n+l*l;0!==k&&(p/=Math.sqrt(k),n*=p,l*=p,g.x+=n,g.y+=l,h.x-=n,h.y-=l)}function a3(b){av!==b&&(av=ax.globalAlpha=b)}function a1(b){ar!==b&&(b===THREE.NormalBlending?ax.globalCompositeOperation="source-over":b===THREE.AdditiveBlending?ax.globalCompositeOperation="lighter":b===THREE.SubtractiveBlending&&(ax.globalCompositeOperation="darker"),ar=b)}function a0(b){at!==b&&(at=ax.lineWidth=b)}function aZ(b){ae!==b&&(ae=ax.lineCap=b)}function aW(b){m!==b&&(m=ax.lineJoin=b)}function aX(b){aI!==b&&(aI=ax.strokeStyle=b)}function aS(b){ap!==b&&(ap=ax.fillStyle=b)}function aQ(d,c){if(T!==d||aK!==c){ax.setLineDash([d,c]),T=d,aK=c}}console.log("THREE.CanvasRenderer",THREE.REVISION);var aU=THREE.Math.smoothstep;ba=ba||{};var aN=this,aM,aO,aJ,ak=new THREE.Projector,aL=void 0!==ba.canvas?ba.canvas:document.createElement("canvas"),ai=aL.width,an=aL.height,aw=Math.floor(ai/2),al=Math.floor(an/2),ax=aL.getContext("2d",{alpha:!0===ba.alpha}),aq=new THREE.Color(0),au=0,av=1,ar=0,aI=null,ap=null,at=null,ae=null,m=null,T=null,aK=0,M,ac,ao,ay;new THREE.RenderableVertex;new THREE.RenderableVertex;var O,o,ag,az,ad,aE,aG=new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;var ah=new THREE.Color,af=new THREE.Color,aC=new THREE.Color,aV={},i,aj,am,a2,ab,aH,aB,aF=new THREE.Box2,j=new THREE.Box2,S=new THREE.Box2,aT=new THREE.Color,aa=new THREE.Color,aD=new THREE.Color,aR=new THREE.Vector3,aY=new THREE.Vector3,aA=new THREE.Vector3,aP=new THREE.Matrix3;void 0===ax.setLineDash&&(ax.setLineDash=function(){});this.domElement=aL;this.devicePixelRatio=void 0!==ba.devicePixelRatio?ba.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,d,f){ai=e*this.devicePixelRatio;an=d*this.devicePixelRatio;aL.width=ai;aL.height=an;aw=Math.floor(ai/2);al=Math.floor(an/2);!1!==f&&(aL.style.width=e+"px",aL.style.height=d+"px");aF.min.set(-aw,-al);aF.max.set(aw,al);j.min.set(-aw,-al);j.max.set(aw,al);av=1;ar=0;m=ae=at=ap=aI=null;this.setViewport(0,0,e,d)};this.setViewport=function(f,e,h,g){ax.setTransform(h*this.devicePixelRatio/ai,0,0,-(g*this.devicePixelRatio)/an,f*this.devicePixelRatio,an-e*this.devicePixelRatio);ax.translate(aw,al)};this.setScissor=function(){};this.enableScissorTest=function(){};this.setClearColor=function(d,c){aq.set(d);au=void 0!==c?c:1;j.min.set(-aw,-al);j.max.set(aw,al)};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){!1===j.empty()&&(j.intersect(aF),j.expandByScalar(2),1>au&&ax.clearRect(j.min.x|0,j.min.y|0,j.max.x-j.min.x|0,j.max.y-j.min.y|0),0<au&&(a1(THREE.NormalBlending),a3(1),aS("rgba("+Math.floor(255*aq.r)+","+Math.floor(255*aq.g)+","+Math.floor(255*aq.b)+","+au+")"),ax.fillRect(j.min.x|0,j.min.y|0,j.max.x-j.min.x|0,j.max.y-j.min.y|0)),j.makeEmpty())};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(q,r){if(!1===r instanceof THREE.Camera){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}else{!0===this.autoClear&&this.clear();aN.info.render.vertices=0;aN.info.render.faces=0;aM=ak.projectScene(q,r,this.sortObjects,this.sortElements);aO=aM.elements;aJ=aM.lights;M=r;aP.getNormalMatrix(r.matrixWorldInverse);aT.setRGB(0,0,0);aa.setRGB(0,0,0);aD.setRGB(0,0,0);for(var d=0,p=aJ.length;d<p;d++){var n=aJ[d],t=n.color;n instanceof THREE.AmbientLight?aT.add(t):n instanceof THREE.DirectionalLight?aa.add(t):n instanceof THREE.PointLight&&aD.add(t)}d=0;for(p=aO.length;d<p;d++){var v=aO[d],l=v.material;if(void 0!==l&&0!==l.opacity){S.makeEmpty();if(v instanceof THREE.RenderableSprite){ac=v;ac.x*=aw;ac.y*=al;var n=ac,s=v,t=l;a3(t.opacity);a1(t.blending);var g=s.scale.x*aw,s=s.scale.y*al,v=0.5*Math.sqrt(g*g+s*s);S.min.set(n.x-v,n.y-v);S.max.set(n.x+v,n.y+v);if(t instanceof THREE.SpriteMaterial||t instanceof THREE.ParticleSystemMaterial){var b=t.map;if(null!==b){!1===b.hasEventListener("update",a7)&&(void 0!==b.image&&0<b.image.width&&a6(b),b.addEventListener("update",a7));v=aV[b.id];void 0!==v?aS(v):aS("rgba( 0, 0, 0, 1 )");var u=b.image,v=u.width*b.offset.x,l=u.height*b.offset.y,k=u.width*b.repeat.x,b=u.height*b.repeat.y,u=g/k,h=s/b;ax.save();ax.translate(n.x,n.y);0!==t.rotation&&ax.rotate(t.rotation);ax.translate(-g/2,-s/2);ax.scale(u,h);ax.translate(-v,-l);ax.fillRect(v,l,k,b)}else{aS(t.color.getStyle()),ax.save(),ax.translate(n.x,n.y),0!==t.rotation&&ax.rotate(t.rotation),ax.scale(g,-s),ax.fillRect(-0.5,-0.5,1,1)}ax.restore()}else{t instanceof THREE.SpriteCanvasMaterial&&(aX(t.color.getStyle()),aS(t.color.getStyle()),ax.save(),ax.translate(n.x,n.y),0!==t.rotation&&ax.rotate(t.rotation),ax.scale(g,s),t.program(ax),ax.restore())}}else{if(v instanceof THREE.RenderableLine){if(ac=v.v1,ao=v.v2,ac.positionScreen.x*=aw,ac.positionScreen.y*=al,ao.positionScreen.x*=aw,ao.positionScreen.y*=al,S.setFromPoints([ac.positionScreen,ao.positionScreen]),!0===aF.isIntersectionBox(S)){if(n=ac,t=ao,g=v,s=l,a3(s.opacity),a1(s.blending),ax.beginPath(),ax.moveTo(n.positionScreen.x,n.positionScreen.y),ax.lineTo(t.positionScreen.x,t.positionScreen.y),s instanceof THREE.LineBasicMaterial){a0(s.linewidth);aZ(s.linecap);aW(s.linejoin);if(s.vertexColors!==THREE.VertexColors){aX(s.color.getStyle())}else{if(v=g.vertexColors[0].getStyle(),g=g.vertexColors[1].getStyle(),v===g){aX(v)}else{try{var e=ax.createLinearGradient(n.positionScreen.x,n.positionScreen.y,t.positionScreen.x,t.positionScreen.y);e.addColorStop(0,v);e.addColorStop(1,g)}catch(f){e=v}aX(e)}}ax.stroke();S.expandByScalar(2*s.linewidth)}else{s instanceof THREE.LineDashedMaterial&&(a0(s.linewidth),aZ(s.linecap),aW(s.linejoin),aX(s.color.getStyle()),aQ(s.dashSize,s.gapSize),ax.stroke(),S.expandByScalar(2*s.linewidth),aQ(null,null))}}}else{if(v instanceof THREE.RenderableFace){ac=v.v1;ao=v.v2;ay=v.v3;if(-1>ac.positionScreen.z||1<ac.positionScreen.z){continue}if(-1>ao.positionScreen.z||1<ao.positionScreen.z){continue}if(-1>ay.positionScreen.z||1<ay.positionScreen.z){continue}ac.positionScreen.x*=aw;ac.positionScreen.y*=al;ao.positionScreen.x*=aw;ao.positionScreen.y*=al;ay.positionScreen.x*=aw;ay.positionScreen.y*=al;0<l.overdraw&&(a4(ac.positionScreen,ao.positionScreen,l.overdraw),a4(ao.positionScreen,ay.positionScreen,l.overdraw),a4(ay.positionScreen,ac.positionScreen,l.overdraw));S.setFromPoints([ac.positionScreen,ao.positionScreen,ay.positionScreen]);if(!0===aF.isIntersectionBox(S)){t=ac;g=ao;s=ay;n=l;aN.info.render.vertices+=3;aN.info.render.faces++;a3(n.opacity);a1(n.blending);O=t.positionScreen.x;o=t.positionScreen.y;ag=g.positionScreen.x;az=g.positionScreen.y;ad=s.positionScreen.x;aE=s.positionScreen.y;var l=O,k=o,b=ag,u=az,h=ad,c=aE;ax.beginPath();ax.moveTo(l,k);ax.lineTo(b,u);ax.lineTo(h,c);ax.closePath();if((n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)&&null===n.map){ah.copy(n.color);af.copy(n.emissive);n.vertexColors===THREE.FaceColors&&ah.multiply(v.color);aG.copy(aT);aY.copy(t.positionWorld).add(g.positionWorld).add(s.positionWorld).divideScalar(3);t=aY;g=v.normalModel;s=aG;v=0;for(l=aJ.length;v<l;v++){k=aJ[v],aC.copy(k.color),k instanceof THREE.DirectionalLight?(b=aR.setFromMatrixPosition(k.matrixWorld).normalize(),u=g.dot(b),0>=u||(u*=k.intensity,s.add(aC.multiplyScalar(u)))):k instanceof THREE.PointLight&&(b=aR.setFromMatrixPosition(k.matrixWorld),u=g.dot(aR.subVectors(b,t).normalize()),0>=u||(u*=0==k.distance?1:1-Math.min(t.distanceTo(b)/k.distance,1),0!=u&&(u*=k.intensity,s.add(aC.multiplyScalar(u)))))}aG.multiply(ah).add(af);!0===n.wireframe?a9(aG,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):a8(aG)}else{n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial?null!==n.map?n.map.mapping instanceof THREE.UVMapping&&(i=v.uvs,a5(O,o,ag,az,ad,aE,i[0].x,i[0].y,i[1].x,i[1].y,i[2].x,i[2].y,n.map)):null!==n.envMap?n.envMap.mapping instanceof THREE.SphericalReflectionMapping?(aA.copy(v.vertexNormalsModel[0]).applyMatrix3(aP),aj=0.5*aA.x+0.5,am=0.5*aA.y+0.5,aA.copy(v.vertexNormalsModel[1]).applyMatrix3(aP),a2=0.5*aA.x+0.5,ab=0.5*aA.y+0.5,aA.copy(v.vertexNormalsModel[2]).applyMatrix3(aP),aH=0.5*aA.x+0.5,aB=0.5*aA.y+0.5,a5(O,o,ag,az,ad,aE,aj,am,a2,ab,aH,aB,n.envMap)):n.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(aA.copy(v.vertexNormalsModel[0]).applyMatrix3(aP),aj=-0.5*aA.x+0.5,am=-0.5*aA.y+0.5,aA.copy(v.vertexNormalsModel[1]).applyMatrix3(aP),a2=-0.5*aA.x+0.5,ab=-0.5*aA.y+0.5,aA.copy(v.vertexNormalsModel[2]).applyMatrix3(aP),aH=-0.5*aA.x+0.5,aB=-0.5*aA.y+0.5,a5(O,o,ag,az,ad,aE,aj,am,a2,ab,aH,aB,n.envMap)):(aG.copy(n.color),n.vertexColors===THREE.FaceColors&&aG.multiply(v.color),!0===n.wireframe?a9(aG,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):a8(aG)):(n instanceof THREE.MeshDepthMaterial?aG.r=aG.g=aG.b=1-aU(t.positionScreen.z*t.positionScreen.w,M.near,M.far):n instanceof THREE.MeshNormalMaterial?(aA.copy(v.normalModel).applyMatrix3(aP),aG.setRGB(aA.x,aA.y,aA.z).multiplyScalar(0.5).addScalar(0.5)):aG.setRGB(1,1,1),!0===n.wireframe?a9(aG,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):a8(aG))}}}}}j.union(S)}}}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n\tvec3 reflectVec;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\t\tif ( useRefract ) {\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t} else { \n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\t\t}\n\t#else\n\t\treflectVec = vReflect;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#endif\n\t#ifdef GAMMA_INPUT\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\t#endif\n\tif ( combine == 1 ) {\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\t} else if ( combine == 2 ) {\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\t} else {\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\t}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\tvarying vec3 vReflect;\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#endif\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\t#endif\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\tif ( useRefract ) {\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t} else {\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\t#ifdef GAMMA_INPUT\n\t\ttexelColor.xyz *= texelColor.xyz;\n\t#endif\n\tgl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\n\tvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\n\tvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t#ifdef DOUBLE_SIDED\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t#ifdef WRAP_AROUND\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t#endif\n\t#endif\n\t#ifdef WRAP_AROUND\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\t\t#endif\n\t#endif\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\t#ifdef DOUBLE_SIDED\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\t#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef WRAP_AROUND\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\t\t\t#endif\n\t\t#endif\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\t\t#endif\n\t}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\tspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tlVector = normalize( lVector );\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\t\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\t\t\t#endif\n\t\t}\n\t}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\t\t#endif\n\t}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\tvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\tvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\tvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tvec3 pointDiffuse  = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\t#ifdef WRAP_AROUND\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t#else\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\t\t#endif\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\t}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tvec3 spotDiffuse  = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\tspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\t\t\t#endif\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\t\t}\n\t}\n#endif\n#if MAX_DIR_LIGHTS > 0\n\tvec3 dirDiffuse  = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\tfloat dotProduct = dot( normal, dirVector );\n\t\t#ifdef WRAP_AROUND\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\t\t#else\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\t\t#endif\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tvec3 hemiDiffuse  = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\themiDiffuse += diffuse * hemiColor;\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n\t\tvec3 lVectorGround = -lVector;\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\t#ifdef GAMMA_INPUT\n\t\tvColor = color * color;\n\t#else\n\t\tvColor = color;\n\t#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\t#ifdef USE_MORPHTARGETS\n\tvec4 skinVertex = vec4( morphed, 1.0 );\n\t#else\n\tvec4 skinVertex = vec4( position, 1.0 );\n\t#endif\n\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n\tskinned      += boneMatY * skinVertex * skinWeight.y;\n\tskinned      += boneMatZ * skinVertex * skinWeight.z;\n\tskinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n\tmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\n\tmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tvec3 morphedNormal = vec3( 0.0 );\n\tmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\tmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = skinWeight.x * boneMatX;\n\tskinMatrix \t+= skinWeight.y * boneMatY;\n\tskinMatrix \t+= skinWeight.z * boneMatZ;\n\tskinMatrix \t+= skinWeight.w * boneMatW;\n\t#ifdef USE_MORPHNORMALS\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\t#else\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\t#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\n\tobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\tobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\tobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\t}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n\t#ifdef SHADOWMAP_DEBUG\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\t#endif\n\t#ifdef SHADOWMAP_CASCADE\n\t\tint inFrustumCount = 0;\n\t#endif\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\t#ifdef SHADOWMAP_CASCADE\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\t\t#else\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\t#endif\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\t\tfloat shadow = 0.0;\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\t\tfloat shadow = 0.0;\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\t\t\t#else\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\t\t\t#endif\n\t\t}\n\t\t#ifdef SHADOWMAP_DEBUG\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\t\t\t#else\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\t\t\t#endif\n\t\t#endif\n\t}\n\t#ifdef GAMMA_OUTPUT\n\t\tshadowColor *= shadowColor;\n\t#endif\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\t#endif\n#endif",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif"};THREE.UniformsUtils={merge:function(g){var f,j,i,h={};for(f=0;f<g.length;f++){for(j in i=this.clone(g[f]),i){h[j]=i[j]}}return h},clone:function(g){var f,j,i,h={};for(f in g){for(j in h[f]={},g[f]){i=g[f][j],h[f][j]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}}return h}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:0.98},reflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}\n\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t\themiDiffuse += diffuse * hemiColor;\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n\t\t\tvec3 lVectorGround = -lVector;\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\n\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\n\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = vec4( position, 1.0 );\n\t\t\t\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned \t  += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned \t  += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned \t  += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tdisplacedPosition  = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = vec4( position, 1.0 );\n\t\t\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned \t  += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned \t  += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned \t  += boneMatW * skinVertex * skinWeight.w;\n\t\t\tdisplacedPosition  = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};THREE.WebGLRenderer=function(aW){function aV(k,h){var q=k.vertices.length,p=h.material;if(p.attributes){void 0===k.__webglCustomAttributesList&&(k.__webglCustomAttributesList=[]);for(var n in p.attributes){var m=p.attributes[n];if(!m.__webglInitialized||m.createUniqueBuffers){m.__webglInitialized=!0;var l=1;"v2"===m.type?l=2:"v3"===m.type?l=3:"v4"===m.type?l=4:"c"===m.type&&(l=3);m.size=l;m.array=new Float32Array(q*l);m.buffer=aF.createBuffer();m.buffer.belongsToAttribute=n;m.needsUpdate=!0}k.__webglCustomAttributesList.push(m)}}}function aT(D,C){var B=C.geometry,A=D.faces3,v=3*A.length,u=1*A.length,t=3*A.length,A=aS(C,D),m=aN(A),f=aP(A),e=A.vertexColors?A.vertexColors:!1;D.__vertexArray=new Float32Array(3*v);f&&(D.__normalArray=new Float32Array(3*v));B.hasTangents&&(D.__tangentArray=new Float32Array(4*v));e&&(D.__colorArray=new Float32Array(3*v));m&&(0<B.faceVertexUvs.length&&(D.__uvArray=new Float32Array(2*v)),1<B.faceVertexUvs.length&&(D.__uv2Array=new Float32Array(2*v)));C.geometry.skinWeights.length&&C.geometry.skinIndices.length&&(D.__skinIndexArray=new Float32Array(4*v),D.__skinWeightArray=new Float32Array(4*v));B=null!==al&&21845<u?Uint32Array:Uint16Array;D.__typeArray=B;D.__faceArray=new B(3*u);D.__lineArray=new B(2*t);if(D.numMorphTargets){for(D.__morphTargetsArrays=[],B=0,m=D.numMorphTargets;B<m;B++){D.__morphTargetsArrays.push(new Float32Array(3*v))}}if(D.numMorphNormals){for(D.__morphNormalsArrays=[],B=0,m=D.numMorphNormals;B<m;B++){D.__morphNormalsArrays.push(new Float32Array(3*v))}}D.__webglFaceCount=3*u;D.__webglLineCount=2*t;if(A.attributes){void 0===D.__webglCustomAttributesList&&(D.__webglCustomAttributesList=[]);for(var d in A.attributes){var u=A.attributes[d],t={},E;for(E in u){t[E]=u[E]}if(!t.__webglInitialized||t.createUniqueBuffers){t.__webglInitialized=!0,B=1,"v2"===t.type?B=2:"v3"===t.type?B=3:"v4"===t.type?B=4:"c"===t.type&&(B=3),t.size=B,t.array=new Float32Array(v*B),t.buffer=aF.createBuffer(),t.buffer.belongsToAttribute=d,u.needsUpdate=!0,t.__original=u}D.__webglCustomAttributesList.push(t)}}D.__inittedArrays=!0}function aS(d,c){return d.material instanceof THREE.MeshFaceMaterial?d.material.materials[c.materialIndex]:d.material}function aP(b){return b instanceof THREE.MeshBasicMaterial&&!b.envMap||b instanceof THREE.MeshDepthMaterial?!1:b&&void 0!==b.shading&&b.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function aN(b){return b.map||b.lightMap||b.bumpMap||b.normalMap||b.specularMap||b instanceof THREE.ShaderMaterial?!0:!1}function aM(l,k,s,r){for(var q in k){var p=k[q],n=s[q];if(0<=p){if(n){var m=n.itemSize;aF.bindBuffer(aF.ARRAY_BUFFER,n.buffer);aH(p);aF.vertexAttribPointer(p,m,aF.FLOAT,!1,0,r*m*4)}else{l.defaultAttributeValues&&(2===l.defaultAttributeValues[q].length?aF.vertexAttrib2fv(p,l.defaultAttributeValues[q]):3===l.defaultAttributeValues[q].length&&aF.vertexAttrib3fv(p,l.defaultAttributeValues[q]))}}}aG()}function aK(){for(var d=0,c=an.length;d<c;d++){an[d]=0}}function aH(b){an[b]=1;0===aO[b]&&(aF.enableVertexAttribArray(b),aO[b]=1)}function aG(){for(var d=0,c=aO.length;d<c;d++){aO[d]!==an[d]&&(aF.disableVertexAttribArray(d),aO[d]=0)}}function aE(d,c){return d.z!==c.z?c.z-d.z:d.id-c.id}function aA(d,c){return c[0]-d[0]}function aC(g,f,l){if(g.length){for(var k=0,h=g.length;k<h;k++){bn=ad=null,bD=bt=be=bG=bx=aJ=bs=-1,aD=!0,g[k].render(f,l,aj,bI),bn=ad=null,bD=bt=be=bG=bx=aJ=bs=-1,aD=!0}}}function ay(G,F,E,D,C,B,A,v){var u,s,t,r;F?(s=G.length-1,r=F=-1):(s=0,F=G.length,r=1);for(var q=s;q!==F;q+=r){if(u=G[q],u.render){s=u.object;t=u.buffer;if(v){u=v}else{u=u[E];if(!u){continue}A&&a8.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst);a8.setDepthTest(u.depthTest);a8.setDepthWrite(u.depthWrite);bi(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}a8.setMaterialFaces(u);t instanceof THREE.BufferGeometry?a8.renderBufferDirect(D,C,B,u,t,s):a8.renderBuffer(D,C,B,u,t,s)}}}function ax(C,B,A,v,u,t,s){for(var r,q,n=0,p=C.length;n<p;n++){if(r=C[n],q=r.object,q.visible){if(s){r=s}else{r=r[B];if(!r){continue}t&&a8.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst);a8.setDepthTest(r.depthTest);a8.setDepthWrite(r.depthWrite);bi(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits)}a8.renderImmediateObject(A,v,u,r,q)}}}function az(c,s){var r,q,p;if(void 0===c.__webglInit&&(c.__webglInit=!0,c._modelViewMatrix=new THREE.Matrix4,c._normalMatrix=new THREE.Matrix3,q=c.geometry,void 0!==q&&void 0===q.__webglInit)){if(q.__webglInit=!0,q.addEventListener("dispose",ai),q instanceof THREE.BufferGeometry){for(p in q.attributes){var n="index"===p?aF.ELEMENT_ARRAY_BUFFER:aF.ARRAY_BUFFER,m=q.attributes[p];m.buffer=aF.createBuffer();aF.bindBuffer(n,m.buffer);aF.bufferData(n,m.array,aF.STATIC_DRAW)}}else{if(c instanceof THREE.Mesh){for(r in p=c.material,void 0===q.geometryGroups&&q.makeGroups(p instanceof THREE.MeshFaceMaterial,al?4294967296:65535),q.geometryGroups){if(p=q.geometryGroups[r],!p.__webglVertexBuffer){n=p;n.__webglVertexBuffer=aF.createBuffer();n.__webglNormalBuffer=aF.createBuffer();n.__webglTangentBuffer=aF.createBuffer();n.__webglColorBuffer=aF.createBuffer();n.__webglUVBuffer=aF.createBuffer();n.__webglUV2Buffer=aF.createBuffer();n.__webglSkinIndicesBuffer=aF.createBuffer();n.__webglSkinWeightsBuffer=aF.createBuffer();n.__webglFaceBuffer=aF.createBuffer();n.__webglLineBuffer=aF.createBuffer();var b=m=void 0;if(n.numMorphTargets){for(n.__webglMorphTargetsBuffers=[],m=0,b=n.numMorphTargets;m<b;m++){n.__webglMorphTargetsBuffers.push(aF.createBuffer())}}if(n.numMorphNormals){for(n.__webglMorphNormalsBuffers=[],m=0,b=n.numMorphNormals;m<b;m++){n.__webglMorphNormalsBuffers.push(aF.createBuffer())}}a8.info.memory.geometries++;aT(p,c);q.verticesNeedUpdate=!0;q.morphTargetsNeedUpdate=!0;q.elementsNeedUpdate=!0;q.uvsNeedUpdate=!0;q.normalsNeedUpdate=!0;q.tangentsNeedUpdate=!0;q.colorsNeedUpdate=!0}}}else{c instanceof THREE.Line?q.__webglVertexBuffer||(p=q,p.__webglVertexBuffer=aF.createBuffer(),p.__webglColorBuffer=aF.createBuffer(),p.__webglLineDistanceBuffer=aF.createBuffer(),a8.info.memory.geometries++,p=q,n=p.vertices.length,p.__vertexArray=new Float32Array(3*n),p.__colorArray=new Float32Array(3*n),p.__lineDistanceArray=new Float32Array(1*n),p.__webglLineCount=n,aV(p,c),q.verticesNeedUpdate=!0,q.colorsNeedUpdate=!0,q.lineDistancesNeedUpdate=!0):c instanceof THREE.ParticleSystem&&!q.__webglVertexBuffer&&(p=q,p.__webglVertexBuffer=aF.createBuffer(),p.__webglColorBuffer=aF.createBuffer(),a8.info.memory.geometries++,p=q,n=p.vertices.length,p.__vertexArray=new Float32Array(3*n),p.__colorArray=new Float32Array(3*n),p.__sortArray=[],p.__webglParticleCount=n,aV(p,c),q.verticesNeedUpdate=!0,q.colorsNeedUpdate=!0)}}}if(void 0===c.__webglActive){if(c instanceof THREE.Mesh){if(q=c.geometry,q instanceof THREE.BufferGeometry){av(s.__webglObjects,q,c)}else{if(q instanceof THREE.Geometry){for(r in q.geometryGroups){p=q.geometryGroups[r],av(s.__webglObjects,p,c)}}}}else{c instanceof THREE.Line||c instanceof THREE.ParticleSystem?(q=c.geometry,av(s.__webglObjects,q,c)):c instanceof THREE.ImmediateRenderObject||c.immediateRenderCallback?s.__webglObjectsImmediate.push({id:null,object:c,opaque:null,transparent:null,z:0}):c instanceof THREE.Sprite?s.__webglSprites.push(c):c instanceof THREE.LensFlare&&s.__webglFlares.push(c)}c.__webglActive=!0}}function av(e,d,f){e.push({id:null,buffer:d,object:f,opaque:null,transparent:null,z:0})}function au(d){for(var c in d.attributes){if(d.attributes[c].needsUpdate){return !0}}return !1}function aw(d){for(var c in d.attributes){d.attributes[c].needsUpdate=!1}}function ar(d,c){d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem||d instanceof THREE.Line?ba(c.__webglObjects,d):d instanceof THREE.Sprite?at(c.__webglSprites,d):d instanceof THREE.LensFlare?at(c.__webglFlares,d):(d instanceof THREE.ImmediateRenderObject||d.immediateRenderCallback)&&ba(c.__webglObjectsImmediate,d);delete d.__webglActive}function ba(e,d){for(var f=e.length-1;0<=f;f--){e[f].object===d&&e.splice(f,1)}}function at(e,d){for(var f=e.length-1;0<=f;f--){e[f]===d&&e.splice(f,1)}}function a9(cf,ce,cd,cc,cb){ak=0;cc.needsUpdate&&(cc.program&&S(cc),a8.initMaterial(cc,ce,cd,cb),cc.needsUpdate=!1);cc.morphTargets&&!cb.__webglMorphTargetInfluences&&(cb.__webglMorphTargetInfluences=new Float32Array(a8.maxMorphTargets));var ca=!1,b9=cc.program,b8=b9.uniforms,b7=cc.uniforms;b9.id!==ad&&(aF.useProgram(b9.program),ad=b9.id,ca=!0);cc.id!==bD&&(bD=cc.id,ca=!0);if(ca||cf!==bn){aF.uniformMatrix4fv(b8.projectionMatrix,!1,cf.projectionMatrix.elements),ah&&aF.uniform1f(b8.logDepthBufFC,2/(Math.log(cf.far+1)/Math.LN2)),cf!==bn&&(bn=cf)}if(cc.skinning){if(bE&&cb.skeleton.useVertexTexture){if(null!==b8.boneTexture){var b6=bd();aF.uniform1i(b8.boneTexture,b6);a8.setTexture(cb.skeleton.boneTexture,b6)}null!==b8.boneTextureWidth&&aF.uniform1i(b8.boneTextureWidth,cb.skeleton.boneTextureWidth);null!==b8.boneTextureHeight&&aF.uniform1i(b8.boneTextureHeight,cb.skeleton.boneTextureHeight)}else{null!==b8.boneGlobalMatrices&&aF.uniformMatrix4fv(b8.boneGlobalMatrices,!1,cb.skeleton.boneMatrices)}}if(ca){cd&&cc.fog&&(b7.fogColor.value=cd.color,cd instanceof THREE.Fog?(b7.fogNear.value=cd.near,b7.fogFar.value=cd.far):cd instanceof THREE.FogExp2&&(b7.fogDensity.value=cd.density));if(cc instanceof THREE.MeshPhongMaterial||cc instanceof THREE.MeshLambertMaterial||cc.lights){if(aD){var b5,b4=b6=0,b3=0,b2,b1,b0,bZ=bu,bX=bZ.directional.colors,bY=bZ.directional.positions,bV=bZ.point.colors,bR=bZ.point.positions,bL=bZ.point.distances,bW=bZ.spot.colors,bN=bZ.spot.positions,bQ=bZ.spot.distances,bP=bZ.spot.directions,bK=bZ.spot.anglesCos,bO=bZ.spot.exponents,bJ=bZ.hemi.skyColors,bM=bZ.hemi.groundColors,K=bZ.hemi.positions,B=0,bT=0,P=0,D=0,bU=0,bS=0,cg=0,m=0,H=b5=0;cd=b0=H=0;for(ca=ce.length;cd<ca;cd++){if(b5=ce[cd],!b5.onlyShadow){if(b2=b5.color,b1=b5.intensity,b0=b5.distance,b5 instanceof THREE.AmbientLight){b5.visible&&(a8.gammaInput?(b6+=b2.r*b2.r,b4+=b2.g*b2.g,b3+=b2.b*b2.b):(b6+=b2.r,b4+=b2.g,b3+=b2.b))}else{if(b5 instanceof THREE.DirectionalLight){if(bU+=1,b5.visible&&(aR.setFromMatrixPosition(b5.matrixWorld),o.setFromMatrixPosition(b5.target.matrixWorld),aR.sub(o),aR.normalize(),0!==aR.x||0!==aR.y||0!==aR.z)){b5=3*B,bY[b5]=aR.x,bY[b5+1]=aR.y,bY[b5+2]=aR.z,a8.gammaInput?bq(bX,b5,b2,b1*b1):bb(bX,b5,b2,b1),B+=1}}else{b5 instanceof THREE.PointLight?(bS+=1,b5.visible&&(H=3*bT,a8.gammaInput?bq(bV,H,b2,b1*b1):bb(bV,H,b2,b1),o.setFromMatrixPosition(b5.matrixWorld),bR[H]=o.x,bR[H+1]=o.y,bR[H+2]=o.z,bL[bT]=b0,bT+=1)):b5 instanceof THREE.SpotLight?(cg+=1,b5.visible&&(H=3*P,a8.gammaInput?bq(bW,H,b2,b1*b1):bb(bW,H,b2,b1),o.setFromMatrixPosition(b5.matrixWorld),bN[H]=o.x,bN[H+1]=o.y,bN[H+2]=o.z,bQ[P]=b0,aR.copy(o),o.setFromMatrixPosition(b5.target.matrixWorld),aR.sub(o),aR.normalize(),bP[H]=aR.x,bP[H+1]=aR.y,bP[H+2]=aR.z,bK[P]=Math.cos(b5.angle),bO[P]=b5.exponent,P+=1)):b5 instanceof THREE.HemisphereLight&&(m+=1,b5.visible&&(aR.setFromMatrixPosition(b5.matrixWorld),aR.normalize(),0!==aR.x||0!==aR.y||0!==aR.z))&&(b0=3*D,K[b0]=aR.x,K[b0+1]=aR.y,K[b0+2]=aR.z,b2=b5.color,b5=b5.groundColor,a8.gammaInput?(b1*=b1,bq(bJ,b0,b2,b1),bq(bM,b0,b5,b1)):(bb(bJ,b0,b2,b1),bb(bM,b0,b5,b1)),D+=1)}}}}cd=3*B;for(ca=Math.max(bX.length,3*bU);cd<ca;cd++){bX[cd]=0}cd=3*bT;for(ca=Math.max(bV.length,3*bS);cd<ca;cd++){bV[cd]=0}cd=3*P;for(ca=Math.max(bW.length,3*cg);cd<ca;cd++){bW[cd]=0}cd=3*D;for(ca=Math.max(bJ.length,3*m);cd<ca;cd++){bJ[cd]=0}cd=3*D;for(ca=Math.max(bM.length,3*m);cd<ca;cd++){bM[cd]=0}bZ.directional.length=B;bZ.point.length=bT;bZ.spot.length=P;bZ.hemi.length=D;bZ.ambient[0]=b6;bZ.ambient[1]=b4;bZ.ambient[2]=b3;aD=!1}cd=bu;b7.ambientLightColor.value=cd.ambient;b7.directionalLightColor.value=cd.directional.colors;b7.directionalLightDirection.value=cd.directional.positions;b7.pointLightColor.value=cd.point.colors;b7.pointLightPosition.value=cd.point.positions;b7.pointLightDistance.value=cd.point.distances;b7.spotLightColor.value=cd.spot.colors;b7.spotLightPosition.value=cd.spot.positions;b7.spotLightDistance.value=cd.spot.distances;b7.spotLightDirection.value=cd.spot.directions;b7.spotLightAngleCos.value=cd.spot.anglesCos;b7.spotLightExponent.value=cd.spot.exponents;b7.hemisphereLightSkyColor.value=cd.hemi.skyColors;b7.hemisphereLightGroundColor.value=cd.hemi.groundColors;b7.hemisphereLightDirection.value=cd.hemi.positions}if(cc instanceof THREE.MeshBasicMaterial||cc instanceof THREE.MeshLambertMaterial||cc instanceof THREE.MeshPhongMaterial){b7.opacity.value=cc.opacity;a8.gammaInput?b7.diffuse.value.copyGammaToLinear(cc.color):b7.diffuse.value=cc.color;b7.map.value=cc.map;b7.lightMap.value=cc.lightMap;b7.specularMap.value=cc.specularMap;cc.bumpMap&&(b7.bumpMap.value=cc.bumpMap,b7.bumpScale.value=cc.bumpScale);cc.normalMap&&(b7.normalMap.value=cc.normalMap,b7.normalScale.value.copy(cc.normalScale));var J;cc.map?J=cc.map:cc.specularMap?J=cc.specularMap:cc.normalMap?J=cc.normalMap:cc.bumpMap&&(J=cc.bumpMap);void 0!==J&&(cd=J.offset,J=J.repeat,b7.offsetRepeat.value.set(cd.x,cd.y,J.x,J.y));b7.envMap.value=cc.envMap;b7.flipEnvMap.value=cc.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;b7.reflectivity.value=cc.reflectivity;b7.refractionRatio.value=cc.refractionRatio;b7.combine.value=cc.combine;b7.useRefract.value=cc.envMap&&cc.envMap.mapping instanceof THREE.CubeRefractionMapping}cc instanceof THREE.LineBasicMaterial?(b7.diffuse.value=cc.color,b7.opacity.value=cc.opacity):cc instanceof THREE.LineDashedMaterial?(b7.diffuse.value=cc.color,b7.opacity.value=cc.opacity,b7.dashSize.value=cc.dashSize,b7.totalSize.value=cc.dashSize+cc.gapSize,b7.scale.value=cc.scale):cc instanceof THREE.ParticleSystemMaterial?(b7.psColor.value=cc.color,b7.opacity.value=cc.opacity,b7.size.value=cc.size,b7.scale.value=bh.height/2,b7.map.value=cc.map):cc instanceof THREE.MeshPhongMaterial?(b7.shininess.value=cc.shininess,a8.gammaInput?(b7.ambient.value.copyGammaToLinear(cc.ambient),b7.emissive.value.copyGammaToLinear(cc.emissive),b7.specular.value.copyGammaToLinear(cc.specular)):(b7.ambient.value=cc.ambient,b7.emissive.value=cc.emissive,b7.specular.value=cc.specular),cc.wrapAround&&b7.wrapRGB.value.copy(cc.wrapRGB)):cc instanceof THREE.MeshLambertMaterial?(a8.gammaInput?(b7.ambient.value.copyGammaToLinear(cc.ambient),b7.emissive.value.copyGammaToLinear(cc.emissive)):(b7.ambient.value=cc.ambient,b7.emissive.value=cc.emissive),cc.wrapAround&&b7.wrapRGB.value.copy(cc.wrapRGB)):cc instanceof THREE.MeshDepthMaterial?(b7.mNear.value=cf.near,b7.mFar.value=cf.far,b7.opacity.value=cc.opacity):cc instanceof THREE.MeshNormalMaterial&&(b7.opacity.value=cc.opacity);if(cb.receiveShadow&&!cc._shadowPass&&b7.shadowMatrix){for(cd=J=0,ca=ce.length;cd<ca;cd++){b6=ce[cd],b6.castShadow&&(b6 instanceof THREE.SpotLight||b6 instanceof THREE.DirectionalLight&&!b6.shadowCascade)&&(b7.shadowMap.value[J]=b6.shadowMap,b7.shadowMapSize.value[J]=b6.shadowMapSize,b7.shadowMatrix.value[J]=b6.shadowMatrix,b7.shadowDarkness.value[J]=b6.shadowDarkness,b7.shadowBias.value[J]=b6.shadowBias,J++)}}ce=cc.uniformsList;b7=0;for(J=ce.length;b7<J;b7++){if(ca=b9.uniforms[ce[b7][1]]){if(cd=ce[b7][0],b4=cd.type,b6=cd.value,"i"===b4){aF.uniform1i(ca,b6)}else{if("f"===b4){aF.uniform1f(ca,b6)}else{if("v2"===b4){aF.uniform2f(ca,b6.x,b6.y)}else{if("v3"===b4){aF.uniform3f(ca,b6.x,b6.y,b6.z)}else{if("v4"===b4){aF.uniform4f(ca,b6.x,b6.y,b6.z,b6.w)}else{if("c"===b4){aF.uniform3f(ca,b6.r,b6.g,b6.b)}else{if("iv1"===b4){aF.uniform1iv(ca,b6)}else{if("iv"===b4){aF.uniform3iv(ca,b6)}else{if("fv1"===b4){aF.uniform1fv(ca,b6)}else{if("fv"===b4){aF.uniform3fv(ca,b6)}else{if("v2v"===b4){void 0===cd._array&&(cd._array=new Float32Array(2*b6.length));b4=0;for(b3=b6.length;b4<b3;b4++){bZ=2*b4,cd._array[bZ]=b6[b4].x,cd._array[bZ+1]=b6[b4].y}aF.uniform2fv(ca,cd._array)}else{if("v3v"===b4){void 0===cd._array&&(cd._array=new Float32Array(3*b6.length));b4=0;for(b3=b6.length;b4<b3;b4++){bZ=3*b4,cd._array[bZ]=b6[b4].x,cd._array[bZ+1]=b6[b4].y,cd._array[bZ+2]=b6[b4].z}aF.uniform3fv(ca,cd._array)}else{if("v4v"===b4){void 0===cd._array&&(cd._array=new Float32Array(4*b6.length));b4=0;for(b3=b6.length;b4<b3;b4++){bZ=4*b4,cd._array[bZ]=b6[b4].x,cd._array[bZ+1]=b6[b4].y,cd._array[bZ+2]=b6[b4].z,cd._array[bZ+3]=b6[b4].w}aF.uniform4fv(ca,cd._array)}else{if("m3"===b4){aF.uniformMatrix3fv(ca,!1,b6.elements)}else{if("m3v"===b4){void 0===cd._array&&(cd._array=new Float32Array(9*b6.length));b4=0;for(b3=b6.length;b4<b3;b4++){b6[b4].flattenToArrayOffset(cd._array,9*b4)}aF.uniformMatrix3fv(ca,!1,cd._array)}else{if("m4"===b4){aF.uniformMatrix4fv(ca,!1,b6.elements)}else{if("m4v"===b4){void 0===cd._array&&(cd._array=new Float32Array(16*b6.length));b4=0;for(b3=b6.length;b4<b3;b4++){b6[b4].flattenToArrayOffset(cd._array,16*b4)}aF.uniformMatrix4fv(ca,!1,cd._array)}else{if("t"===b4){if(bZ=b6,b6=bd(),aF.uniform1i(ca,b6),bZ){if(bZ.image instanceof Array&&6===bZ.image.length){if(cd=bZ,ca=b6,6===cd.image.length){if(cd.needsUpdate){cd.image.__webglTextureCube||(cd.addEventListener("dispose",bw),cd.image.__webglTextureCube=aF.createTexture(),a8.info.memory.textures++);aF.activeTexture(aF.TEXTURE0+ca);aF.bindTexture(aF.TEXTURE_CUBE_MAP,cd.image.__webglTextureCube);aF.pixelStorei(aF.UNPACK_FLIP_Y_WEBGL,cd.flipY);ca=cd instanceof THREE.CompressedTexture;b6=[];for(b4=0;6>b4;b4++){a8.autoScaleCubemaps&&!ca?(b3=b6,bZ=b4,bX=cd.image[b4],bV=af,bX.width<=bV&&bX.height<=bV||(bR=Math.max(bX.width,bX.height),bY=Math.floor(bX.width*bV/bR),bV=Math.floor(bX.height*bV/bR),bR=document.createElement("canvas"),bR.width=bY,bR.height=bV,bR.getContext("2d").drawImage(bX,0,0,bX.width,bX.height,0,0,bY,bV),bX=bR),b3[bZ]=bX):b6[b4]=cd.image[b4]}b4=b6[0];b3=THREE.Math.isPowerOfTwo(b4.width)&&THREE.Math.isPowerOfTwo(b4.height);bZ=aq(cd.format);bX=aq(cd.type);bm(aF.TEXTURE_CUBE_MAP,cd,b3);for(b4=0;6>b4;b4++){if(ca){for(bV=b6[b4].mipmaps,bR=0,bL=bV.length;bR<bL;bR++){bY=bV[bR],cd.format!==THREE.RGBAFormat?aF.compressedTexImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+b4,bR,bZ,bY.width,bY.height,0,bY.data):aF.texImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+b4,bR,bZ,bY.width,bY.height,0,bZ,bX,bY.data)}}else{aF.texImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+b4,0,bZ,bZ,bX,b6[b4])}}cd.generateMipmaps&&b3&&aF.generateMipmap(aF.TEXTURE_CUBE_MAP);cd.needsUpdate=!1;if(cd.onUpdate){cd.onUpdate()}}else{aF.activeTexture(aF.TEXTURE0+ca),aF.bindTexture(aF.TEXTURE_CUBE_MAP,cd.image.__webglTextureCube)}}}else{bZ instanceof THREE.WebGLRenderTargetCube?(cd=bZ,aF.activeTexture(aF.TEXTURE0+b6),aF.bindTexture(aF.TEXTURE_CUBE_MAP,cd.__webglTexture)):a8.setTexture(bZ,b6)}}}else{if("tv"===b4){void 0===cd._array&&(cd._array=[]);b4=0;for(b3=cd.value.length;b4<b3;b4++){cd._array[b4]=bd()}aF.uniform1iv(ca,cd._array);b4=0;for(b3=cd.value.length;b4<b3;b4++){bZ=cd.value[b4],b6=cd._array[b4],bZ&&a8.setTexture(bZ,b6)}}else{console.warn("THREE.WebGLRenderer: Unknown uniform type: "+b4)}}}}}}}}}}}}}}}}}}}}}(cc instanceof THREE.ShaderMaterial||cc instanceof THREE.MeshPhongMaterial||cc.envMap)&&null!==b8.cameraPosition&&(o.setFromMatrixPosition(cf.matrixWorld),aF.uniform3f(b8.cameraPosition,o.x,o.y,o.z));(cc instanceof THREE.MeshPhongMaterial||cc instanceof THREE.MeshLambertMaterial||cc instanceof THREE.ShaderMaterial||cc.skinning)&&null!==b8.viewMatrix&&aF.uniformMatrix4fv(b8.viewMatrix,!1,cf.matrixWorldInverse.elements)}aF.uniformMatrix4fv(b8.modelViewMatrix,!1,cb._modelViewMatrix.elements);b8.normalMatrix&&aF.uniformMatrix3fv(b8.normalMatrix,!1,cb._normalMatrix.elements);null!==b8.modelMatrix&&aF.uniformMatrix4fv(b8.modelMatrix,!1,cb.matrixWorld.elements);return b9}function bd(){var b=ak;b>=bc&&console.warn("WebGLRenderer: trying to use "+b+" texture units while this GPU supports only "+bc);ak+=1;return b}function bq(f,e,h,g){f[e]=h.r*h.r*g;f[e+1]=h.g*h.g*g;f[e+2]=h.b*h.b*g}function bb(f,e,h,g){f[e]=h.r*g;f[e+1]=h.g*g;f[e+2]=h.b*g}function br(b){b!==aY&&(aF.lineWidth(b),aY=b)}function bi(e,d,f){bB!==e&&(e?aF.enable(aF.POLYGON_OFFSET_FILL):aF.disable(aF.POLYGON_OFFSET_FILL),bB=e);!e||a0===d&&ab===f||(aF.polygonOffset(d,f),a0=d,ab=f)}function bm(e,d,f){f?(aF.texParameteri(e,aF.TEXTURE_WRAP_S,aq(d.wrapS)),aF.texParameteri(e,aF.TEXTURE_WRAP_T,aq(d.wrapT)),aF.texParameteri(e,aF.TEXTURE_MAG_FILTER,aq(d.magFilter)),aF.texParameteri(e,aF.TEXTURE_MIN_FILTER,aq(d.minFilter))):(aF.texParameteri(e,aF.TEXTURE_WRAP_S,aF.CLAMP_TO_EDGE),aF.texParameteri(e,aF.TEXTURE_WRAP_T,aF.CLAMP_TO_EDGE),aF.texParameteri(e,aF.TEXTURE_MAG_FILTER,bj(d.magFilter)),aF.texParameteri(e,aF.TEXTURE_MIN_FILTER,bj(d.minFilter)));ag&&d.type!==THREE.FloatType&&(1<d.anisotropy||d.__oldAnisotropy)&&(aF.texParameterf(e,ag.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(d.anisotropy,bk)),d.__oldAnisotropy=d.anisotropy)}function bo(d,c){aF.bindRenderbuffer(aF.RENDERBUFFER,d);c.depthBuffer&&!c.stencilBuffer?(aF.renderbufferStorage(aF.RENDERBUFFER,aF.DEPTH_COMPONENT16,c.width,c.height),aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_ATTACHMENT,aF.RENDERBUFFER,d)):c.depthBuffer&&c.stencilBuffer?(aF.renderbufferStorage(aF.RENDERBUFFER,aF.DEPTH_STENCIL,c.width,c.height),aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_STENCIL_ATTACHMENT,aF.RENDERBUFFER,d)):aF.renderbufferStorage(aF.RENDERBUFFER,aF.RGBA4,c.width,c.height)}function bj(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?aF.NEAREST:aF.LINEAR}function aq(b){if(b===THREE.RepeatWrapping){return aF.REPEAT}if(b===THREE.ClampToEdgeWrapping){return aF.CLAMP_TO_EDGE}if(b===THREE.MirroredRepeatWrapping){return aF.MIRRORED_REPEAT}if(b===THREE.NearestFilter){return aF.NEAREST}if(b===THREE.NearestMipMapNearestFilter){return aF.NEAREST_MIPMAP_NEAREST}if(b===THREE.NearestMipMapLinearFilter){return aF.NEAREST_MIPMAP_LINEAR}if(b===THREE.LinearFilter){return aF.LINEAR}if(b===THREE.LinearMipMapNearestFilter){return aF.LINEAR_MIPMAP_NEAREST}if(b===THREE.LinearMipMapLinearFilter){return aF.LINEAR_MIPMAP_LINEAR}if(b===THREE.UnsignedByteType){return aF.UNSIGNED_BYTE}if(b===THREE.UnsignedShort4444Type){return aF.UNSIGNED_SHORT_4_4_4_4}if(b===THREE.UnsignedShort5551Type){return aF.UNSIGNED_SHORT_5_5_5_1}if(b===THREE.UnsignedShort565Type){return aF.UNSIGNED_SHORT_5_6_5}if(b===THREE.ByteType){return aF.BYTE}if(b===THREE.ShortType){return aF.SHORT}if(b===THREE.UnsignedShortType){return aF.UNSIGNED_SHORT}if(b===THREE.IntType){return aF.INT}if(b===THREE.UnsignedIntType){return aF.UNSIGNED_INT}if(b===THREE.FloatType){return aF.FLOAT}if(b===THREE.AlphaFormat){return aF.ALPHA}if(b===THREE.RGBFormat){return aF.RGB}if(b===THREE.RGBAFormat){return aF.RGBA}if(b===THREE.LuminanceFormat){return aF.LUMINANCE}if(b===THREE.LuminanceAlphaFormat){return aF.LUMINANCE_ALPHA}if(b===THREE.AddEquation){return aF.FUNC_ADD}if(b===THREE.SubtractEquation){return aF.FUNC_SUBTRACT}if(b===THREE.ReverseSubtractEquation){return aF.FUNC_REVERSE_SUBTRACT}if(b===THREE.ZeroFactor){return aF.ZERO}if(b===THREE.OneFactor){return aF.ONE}if(b===THREE.SrcColorFactor){return aF.SRC_COLOR}if(b===THREE.OneMinusSrcColorFactor){return aF.ONE_MINUS_SRC_COLOR}if(b===THREE.SrcAlphaFactor){return aF.SRC_ALPHA}if(b===THREE.OneMinusSrcAlphaFactor){return aF.ONE_MINUS_SRC_ALPHA}if(b===THREE.DstAlphaFactor){return aF.DST_ALPHA}if(b===THREE.OneMinusDstAlphaFactor){return aF.ONE_MINUS_DST_ALPHA}if(b===THREE.DstColorFactor){return aF.DST_COLOR}if(b===THREE.OneMinusDstColorFactor){return aF.ONE_MINUS_DST_COLOR}if(b===THREE.SrcAlphaSaturateFactor){return aF.SRC_ALPHA_SATURATE}if(void 0!==aZ){if(b===THREE.RGB_S3TC_DXT1_Format){return aZ.COMPRESSED_RGB_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT1_Format){return aZ.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT3_Format){return aZ.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(b===THREE.RGBA_S3TC_DXT5_Format){return aZ.COMPRESSED_RGBA_S3TC_DXT5_EXT}}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);aW=aW||{};var bh=void 0!==aW.canvas?aW.canvas:document.createElement("canvas"),bl=void 0!==aW.context?aW.context:null,a7=void 0!==aW.precision?aW.precision:"highp",a1=void 0!==aW.alpha?aW.alpha:!1,a5=void 0!==aW.depth?aW.depth:!0,bF=void 0!==aW.stencil?aW.stencil:!0,a3=void 0!==aW.antialias?aW.antialias:!1,a6=void 0!==aW.premultipliedAlpha?aW.premultipliedAlpha:!0,bf=void 0!==aW.preserveDrawingBuffer?aW.preserveDrawingBuffer:!1,ah=void 0!==aW.logarithmicDepthBuffer?aW.logarithmicDepthBuffer:!1,a4=new THREE.Color(0),a2=0;this.domElement=bh;this.context=null;this.devicePixelRatio=void 0!==aW.devicePixelRatio?aW.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var a8=this,bv=[],ad=null,by=null,bD=-1,bt=null,bn=null,ak=0,bG=-1,be=-1,bs=-1,ae=-1,M=-1,T=-1,aJ=-1,bx=-1,bB=null,a0=null,ab=null,aY=null,bg=0,ap=0,aL=bh.width,aU=bh.height,aj=0,bI=0,an=new Uint8Array(16),aO=new Uint8Array(16),bC=new THREE.Frustum,aX=new THREE.Matrix4,aB=new THREE.Matrix4,o=new THREE.Vector3,aR=new THREE.Vector3,aD=!0,bu={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},aF,bA,i,ag,aZ,al;(function(){try{var d={alpha:a1,depth:a5,stencil:bF,antialias:a3,premultipliedAlpha:a6,preserveDrawingBuffer:bf};aF=bl||bh.getContext("webgl",d)||bh.getContext("experimental-webgl",d);if(null===aF){throw"Error creating WebGL context."}}catch(c){console.error(c)}bA=aF.getExtension("OES_texture_float");aF.getExtension("OES_texture_float_linear");i=aF.getExtension("OES_standard_derivatives");ag=aF.getExtension("EXT_texture_filter_anisotropic")||aF.getExtension("MOZ_EXT_texture_filter_anisotropic")||aF.getExtension("WEBKIT_EXT_texture_filter_anisotropic");aZ=aF.getExtension("WEBGL_compressed_texture_s3tc")||aF.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||aF.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");al=aF.getExtension("OES_element_index_uint");null===bA&&console.log("THREE.WebGLRenderer: Float textures not supported.");null===i&&console.log("THREE.WebGLRenderer: Standard derivatives not supported.");null===ag&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");null===aZ&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");null===al&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.");void 0===aF.getShaderPrecisionFormat&&(aF.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});ah&&aF.getExtension("EXT_frag_depth")})();aF.clearColor(0,0,0,1);aF.clearDepth(1);aF.clearStencil(0);aF.enable(aF.DEPTH_TEST);aF.depthFunc(aF.LEQUAL);aF.frontFace(aF.CCW);aF.cullFace(aF.BACK);aF.enable(aF.CULL_FACE);aF.enable(aF.BLEND);aF.blendEquation(aF.FUNC_ADD);aF.blendFunc(aF.SRC_ALPHA,aF.ONE_MINUS_SRC_ALPHA);aF.viewport(bg,ap,aL,aU);aF.clearColor(a4.r,a4.g,a4.b,a2);this.context=aF;var bc=aF.getParameter(aF.MAX_TEXTURE_IMAGE_UNITS),aI=aF.getParameter(aF.MAX_VERTEX_TEXTURE_IMAGE_UNITS);aF.getParameter(aF.MAX_TEXTURE_SIZE);var af=aF.getParameter(aF.MAX_CUBE_MAP_TEXTURE_SIZE),bk=ag?aF.getParameter(ag.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,aQ=0<aI,bE=aQ&&bA;aZ&&aF.getParameter(aF.COMPRESSED_TEXTURE_FORMATS);var O=aF.getShaderPrecisionFormat(aF.VERTEX_SHADER,aF.HIGH_FLOAT),aa=aF.getShaderPrecisionFormat(aF.VERTEX_SHADER,aF.MEDIUM_FLOAT);aF.getShaderPrecisionFormat(aF.VERTEX_SHADER,aF.LOW_FLOAT);var bH=aF.getShaderPrecisionFormat(aF.FRAGMENT_SHADER,aF.HIGH_FLOAT),bz=aF.getShaderPrecisionFormat(aF.FRAGMENT_SHADER,aF.MEDIUM_FLOAT);aF.getShaderPrecisionFormat(aF.FRAGMENT_SHADER,aF.LOW_FLOAT);var bp=0<O.precision&&0<bH.precision,am=0<aa.precision&&0<bz.precision;"highp"!==a7||bp||(am?(a7="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(a7="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"!==a7||am||(a7="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return aF};this.supportsVertexTextures=function(){return aQ};this.supportsFloatTextures=function(){return bA};this.supportsStandardDerivatives=function(){return i};this.supportsCompressedTextureS3TC=function(){return aZ};this.getMaxAnisotropy=function(){return bk};this.getPrecision=function(){return a7};this.setSize=function(e,d,f){bh.width=e*this.devicePixelRatio;bh.height=d*this.devicePixelRatio;!1!==f&&(bh.style.width=e+"px",bh.style.height=d+"px");this.setViewport(0,0,e,d)};this.setViewport=function(f,e,h,g){bg=f*this.devicePixelRatio;ap=e*this.devicePixelRatio;aL=h*this.devicePixelRatio;aU=g*this.devicePixelRatio;aF.viewport(bg,ap,aL,aU)};this.setScissor=function(f,e,h,g){aF.scissor(f*this.devicePixelRatio,e*this.devicePixelRatio,h*this.devicePixelRatio,g*this.devicePixelRatio)};this.enableScissorTest=function(b){b?aF.enable(aF.SCISSOR_TEST):aF.disable(aF.SCISSOR_TEST)};this.setClearColor=function(d,c){a4.set(d);a2=void 0!==c?c:1;aF.clearColor(a4.r,a4.g,a4.b,a2)};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getClearColor=function(){return a4};this.getClearAlpha=function(){return a2};this.clear=function(f,e,h){var g=0;if(void 0===f||f){g|=aF.COLOR_BUFFER_BIT}if(void 0===e||e){g|=aF.DEPTH_BUFFER_BIT}if(void 0===h||h){g|=aF.STENCIL_BUFFER_BIT}aF.clear(g)};this.clearColor=function(){aF.clear(aF.COLOR_BUFFER_BIT)};this.clearDepth=function(){aF.clear(aF.DEPTH_BUFFER_BIT)};this.clearStencil=function(){aF.clear(aF.STENCIL_BUFFER_BIT)};this.clearTarget=function(f,e,h,g){this.setRenderTarget(f);this.clear(e,h,g)};this.addPostPlugin=function(b){b.init(this);this.renderPluginsPost.push(b)};this.addPrePlugin=function(b){b.init(this);this.renderPluginsPre.push(b)};this.updateShadowMap=function(d,c){ad=null;bD=bt=bx=aJ=bs=-1;aD=!0;be=bG=-1;this.shadowMapPlugin.update(d,c)};var ai=function(g){g=g.target;g.removeEventListener("dispose",ai);g.__webglInit=void 0;if(g instanceof THREE.BufferGeometry){var f=g.attributes,l;for(l in f){void 0!==f[l].buffer&&aF.deleteBuffer(f[l].buffer)}a8.info.memory.geometries--}else{if(void 0!==g.geometryGroups){for(f in g.geometryGroups){l=g.geometryGroups[f];if(void 0!==l.numMorphTargets){for(var k=0,h=l.numMorphTargets;k<h;k++){aF.deleteBuffer(l.__webglMorphTargetsBuffers[k])}}if(void 0!==l.numMorphNormals){for(k=0,h=l.numMorphNormals;k<h;k++){aF.deleteBuffer(l.__webglMorphNormalsBuffers[k])}}ao(l)}}else{ao(g)}}},bw=function(b){b=b.target;b.removeEventListener("dispose",bw);b.image&&b.image.__webglTextureCube?aF.deleteTexture(b.image.__webglTextureCube):b.__webglInit&&(b.__webglInit=!1,aF.deleteTexture(b.__webglTexture));a8.info.memory.textures--},ac=function(d){d=d.target;d.removeEventListener("dispose",ac);if(d&&d.__webglTexture){if(aF.deleteTexture(d.__webglTexture),d instanceof THREE.WebGLRenderTargetCube){for(var c=0;6>c;c++){aF.deleteFramebuffer(d.__webglFramebuffer[c]),aF.deleteRenderbuffer(d.__webglRenderbuffer[c])}}else{aF.deleteFramebuffer(d.__webglFramebuffer),aF.deleteRenderbuffer(d.__webglRenderbuffer)}}a8.info.memory.textures--},j=function(b){b=b.target;b.removeEventListener("dispose",j);S(b)},ao=function(d){void 0!==d.__webglVertexBuffer&&aF.deleteBuffer(d.__webglVertexBuffer);void 0!==d.__webglNormalBuffer&&aF.deleteBuffer(d.__webglNormalBuffer);void 0!==d.__webglTangentBuffer&&aF.deleteBuffer(d.__webglTangentBuffer);void 0!==d.__webglColorBuffer&&aF.deleteBuffer(d.__webglColorBuffer);void 0!==d.__webglUVBuffer&&aF.deleteBuffer(d.__webglUVBuffer);void 0!==d.__webglUV2Buffer&&aF.deleteBuffer(d.__webglUV2Buffer);void 0!==d.__webglSkinIndicesBuffer&&aF.deleteBuffer(d.__webglSkinIndicesBuffer);void 0!==d.__webglSkinWeightsBuffer&&aF.deleteBuffer(d.__webglSkinWeightsBuffer);void 0!==d.__webglFaceBuffer&&aF.deleteBuffer(d.__webglFaceBuffer);void 0!==d.__webglLineBuffer&&aF.deleteBuffer(d.__webglLineBuffer);void 0!==d.__webglLineDistanceBuffer&&aF.deleteBuffer(d.__webglLineDistanceBuffer);if(void 0!==d.__webglCustomAttributesList){for(var c in d.__webglCustomAttributesList){aF.deleteBuffer(d.__webglCustomAttributesList[c].buffer)}}a8.info.memory.geometries--},S=function(g){var f=g.program;if(void 0!==f){g.program=void 0;var l,k,h=!1;g=0;for(l=bv.length;g<l;g++){if(k=bv[g],k.program===f){k.usedTimes--;0===k.usedTimes&&(h=!0);break}}if(!0===h){h=[];g=0;for(l=bv.length;g<l;g++){k=bv[g],k.program!==f&&h.push(k)}bv=h;aF.deleteProgram(f);a8.info.memory.programs--}}};this.renderBufferImmediate=function(F,E,D){aK();F.hasPositions&&!F.__webglVertexBuffer&&(F.__webglVertexBuffer=aF.createBuffer());F.hasNormals&&!F.__webglNormalBuffer&&(F.__webglNormalBuffer=aF.createBuffer());F.hasUvs&&!F.__webglUvBuffer&&(F.__webglUvBuffer=aF.createBuffer());F.hasColors&&!F.__webglColorBuffer&&(F.__webglColorBuffer=aF.createBuffer());F.hasPositions&&(aF.bindBuffer(aF.ARRAY_BUFFER,F.__webglVertexBuffer),aF.bufferData(aF.ARRAY_BUFFER,F.positionArray,aF.DYNAMIC_DRAW),aH(E.attributes.position),aF.vertexAttribPointer(E.attributes.position,3,aF.FLOAT,!1,0,0));if(F.hasNormals){aF.bindBuffer(aF.ARRAY_BUFFER,F.__webglNormalBuffer);if(D.shading===THREE.FlatShading){var C,B,A,v,l,m,k,h,J,H,I,G=3*F.count;for(I=0;I<G;I+=9){H=F.normalArray,C=H[I],B=H[I+1],A=H[I+2],v=H[I+3],m=H[I+4],h=H[I+5],l=H[I+6],k=H[I+7],J=H[I+8],C=(C+v+l)/3,B=(B+m+k)/3,A=(A+h+J)/3,H[I]=C,H[I+1]=B,H[I+2]=A,H[I+3]=C,H[I+4]=B,H[I+5]=A,H[I+6]=C,H[I+7]=B,H[I+8]=A}}aF.bufferData(aF.ARRAY_BUFFER,F.normalArray,aF.DYNAMIC_DRAW);aH(E.attributes.normal);aF.vertexAttribPointer(E.attributes.normal,3,aF.FLOAT,!1,0,0)}F.hasUvs&&D.map&&(aF.bindBuffer(aF.ARRAY_BUFFER,F.__webglUvBuffer),aF.bufferData(aF.ARRAY_BUFFER,F.uvArray,aF.DYNAMIC_DRAW),aH(E.attributes.uv),aF.vertexAttribPointer(E.attributes.uv,2,aF.FLOAT,!1,0,0));F.hasColors&&D.vertexColors!==THREE.NoColors&&(aF.bindBuffer(aF.ARRAY_BUFFER,F.__webglColorBuffer),aF.bufferData(aF.ARRAY_BUFFER,F.colorArray,aF.DYNAMIC_DRAW),aH(E.attributes.color),aF.vertexAttribPointer(E.attributes.color,3,aF.FLOAT,!1,0,0));aG();aF.drawArrays(aF.TRIANGLES,0,F.count);F.count=0};this.renderBufferDirect=function(C,B,A,v,u,t){if(!1!==v.visible){var s=a9(C,B,A,v,t);C=s.attributes;B=u.attributes;A=!1;s=16777215*u.id+2*s.id+(v.wireframe?1:0);s!==bt&&(bt=s,A=!0);A&&aK();if(t instanceof THREE.Mesh){if(t=B.index){var r;t.array instanceof Uint32Array?(s=aF.UNSIGNED_INT,r=4):(s=aF.UNSIGNED_SHORT,r=2);u=u.offsets;if(0===u.length){A&&(aM(v,C,B,0),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(aF.TRIANGLES,t.array.length,s,0),a8.info.render.calls++,a8.info.render.vertices+=t.array.length,a8.info.render.faces+=t.array.length/3}else{A=!0;for(var h=0,m=u.length;h<m;h++){var g=u[h].index;A&&(aM(v,C,B,g),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer));aF.drawElements(aF.TRIANGLES,u[h].count,s,u[h].start*r);a8.info.render.calls++;a8.info.render.vertices+=u[h].count;a8.info.render.faces+=u[h].count/3}}}else{A&&aM(v,C,B,0),v=u.attributes.position,aF.drawArrays(aF.TRIANGLES,0,v.array.length/3),a8.info.render.calls++,a8.info.render.vertices+=v.array.length/3,a8.info.render.faces+=v.array.length/9}}else{if(t instanceof THREE.ParticleSystem){A&&aM(v,C,B,0),v=B.position,aF.drawArrays(aF.POINTS,0,v.array.length/3),a8.info.render.calls++,a8.info.render.points+=v.array.length/3}else{if(t instanceof THREE.Line){if(s=t.type===THREE.LineStrip?aF.LINE_STRIP:aF.LINES,br(v.linewidth),t=B.index){if(t.array instanceof Uint32Array?(s=aF.UNSIGNED_INT,r=4):(s=aF.UNSIGNED_SHORT,r=2),u=u.offsets,0===u.length){A&&(aM(v,C,B,0),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(aF.LINES,t.array.length,s,0),a8.info.render.calls++,a8.info.render.vertices+=t.array.length}else{for(1<u.length&&(A=!0),h=0,m=u.length;h<m;h++){g=u[h].index,A&&(aM(v,C,B,g),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(aF.LINES,u[h].count,s,u[h].start*r),a8.info.render.calls++,a8.info.render.vertices+=u[h].count}}}else{A&&aM(v,C,B,0),v=B.position,aF.drawArrays(s,0,v.array.length/3),a8.info.render.calls++,a8.info.render.points+=v.array.length/3}}}}}};this.renderBuffer=function(B,A,v,u,t,q){if(!1!==u.visible){var m,k;v=a9(B,A,v,u,q);A=v.attributes;B=!1;v=16777215*t.id+2*v.id+(u.wireframe?1:0);v!==bt&&(bt=v,B=!0);B&&aK();if(!u.morphTargets&&0<=A.position){B&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglVertexBuffer),aH(A.position),aF.vertexAttribPointer(A.position,3,aF.FLOAT,!1,0,0))}else{if(q.morphTargetBase){v=u.program.attributes;-1!==q.morphTargetBase&&0<=v.position?(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[q.morphTargetBase]),aH(v.position),aF.vertexAttribPointer(v.position,3,aF.FLOAT,!1,0,0)):0<=v.position&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglVertexBuffer),aH(v.position),aF.vertexAttribPointer(v.position,3,aF.FLOAT,!1,0,0));if(q.morphTargetForcedOrder.length){var l=0;k=q.morphTargetForcedOrder;for(m=q.morphTargetInfluences;l<u.numSupportedMorphTargets&&l<k.length;){0<=v["morphTarget"+l]&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[k[l]]),aH(v["morphTarget"+l]),aF.vertexAttribPointer(v["morphTarget"+l],3,aF.FLOAT,!1,0,0)),0<=v["morphNormal"+l]&&u.morphNormals&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[k[l]]),aH(v["morphNormal"+l]),aF.vertexAttribPointer(v["morphNormal"+l],3,aF.FLOAT,!1,0,0)),q.__webglMorphTargetInfluences[l]=m[k[l]],l++}}else{k=[];m=q.morphTargetInfluences;var h,C=m.length;for(h=0;h<C;h++){l=m[h],0<l&&k.push([l,h])}k.length>u.numSupportedMorphTargets?(k.sort(aA),k.length=u.numSupportedMorphTargets):k.length>u.numSupportedMorphNormals?k.sort(aA):0===k.length&&k.push([0,0]);for(l=0;l<u.numSupportedMorphTargets;){k[l]?(h=k[l][1],0<=v["morphTarget"+l]&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[h]),aH(v["morphTarget"+l]),aF.vertexAttribPointer(v["morphTarget"+l],3,aF.FLOAT,!1,0,0)),0<=v["morphNormal"+l]&&u.morphNormals&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[h]),aH(v["morphNormal"+l]),aF.vertexAttribPointer(v["morphNormal"+l],3,aF.FLOAT,!1,0,0)),q.__webglMorphTargetInfluences[l]=m[h]):q.__webglMorphTargetInfluences[l]=0,l++}}null!==u.program.uniforms.morphTargetInfluences&&aF.uniform1fv(u.program.uniforms.morphTargetInfluences,q.__webglMorphTargetInfluences)}}if(B){if(t.__webglCustomAttributesList){for(m=0,k=t.__webglCustomAttributesList.length;m<k;m++){v=t.__webglCustomAttributesList[m],0<=A[v.buffer.belongsToAttribute]&&(aF.bindBuffer(aF.ARRAY_BUFFER,v.buffer),aH(A[v.buffer.belongsToAttribute]),aF.vertexAttribPointer(A[v.buffer.belongsToAttribute],v.size,aF.FLOAT,!1,0,0))}}0<=A.color&&(0<q.geometry.colors.length||0<q.geometry.faces.length?(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglColorBuffer),aH(A.color),aF.vertexAttribPointer(A.color,3,aF.FLOAT,!1,0,0)):u.defaultAttributeValues&&aF.vertexAttrib3fv(A.color,u.defaultAttributeValues.color));0<=A.normal&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglNormalBuffer),aH(A.normal),aF.vertexAttribPointer(A.normal,3,aF.FLOAT,!1,0,0));0<=A.tangent&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglTangentBuffer),aH(A.tangent),aF.vertexAttribPointer(A.tangent,4,aF.FLOAT,!1,0,0));0<=A.uv&&(q.geometry.faceVertexUvs[0]?(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglUVBuffer),aH(A.uv),aF.vertexAttribPointer(A.uv,2,aF.FLOAT,!1,0,0)):u.defaultAttributeValues&&aF.vertexAttrib2fv(A.uv,u.defaultAttributeValues.uv));0<=A.uv2&&(q.geometry.faceVertexUvs[1]?(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglUV2Buffer),aH(A.uv2),aF.vertexAttribPointer(A.uv2,2,aF.FLOAT,!1,0,0)):u.defaultAttributeValues&&aF.vertexAttrib2fv(A.uv2,u.defaultAttributeValues.uv2));u.skinning&&0<=A.skinIndex&&0<=A.skinWeight&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglSkinIndicesBuffer),aH(A.skinIndex),aF.vertexAttribPointer(A.skinIndex,4,aF.FLOAT,!1,0,0),aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglSkinWeightsBuffer),aH(A.skinWeight),aF.vertexAttribPointer(A.skinWeight,4,aF.FLOAT,!1,0,0));0<=A.lineDistance&&(aF.bindBuffer(aF.ARRAY_BUFFER,t.__webglLineDistanceBuffer),aH(A.lineDistance),aF.vertexAttribPointer(A.lineDistance,1,aF.FLOAT,!1,0,0))}aG();q instanceof THREE.Mesh?(q=t.__typeArray===Uint32Array?aF.UNSIGNED_INT:aF.UNSIGNED_SHORT,u.wireframe?(br(u.wireframeLinewidth),B&&aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.__webglLineBuffer),aF.drawElements(aF.LINES,t.__webglLineCount,q,0)):(B&&aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.__webglFaceBuffer),aF.drawElements(aF.TRIANGLES,t.__webglFaceCount,q,0)),a8.info.render.calls++,a8.info.render.vertices+=t.__webglFaceCount,a8.info.render.faces+=t.__webglFaceCount/3):q instanceof THREE.Line?(q=q.type===THREE.LineStrip?aF.LINE_STRIP:aF.LINES,br(u.linewidth),aF.drawArrays(q,0,t.__webglLineCount),a8.info.render.calls++):q instanceof THREE.ParticleSystem&&(aF.drawArrays(aF.POINTS,0,t.__webglParticleCount),a8.info.render.calls++,a8.info.render.points+=t.__webglParticleCount)}};this.render=function(F,E,D,C){if(!1===E instanceof THREE.Camera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")}else{var B,A,v,t,s=F.__lights,p=F.fog;bD=-1;aD=!0;!0===F.autoUpdate&&F.updateMatrixWorld();void 0===E.parent&&E.updateMatrixWorld();E.matrixWorldInverse.getInverse(E.matrixWorld);aX.multiplyMatrices(E.projectionMatrix,E.matrixWorldInverse);bC.setFromMatrix(aX);this.autoUpdateObjects&&this.initWebGLObjects(F);aC(this.renderPluginsPre,F,E);a8.info.render.calls=0;a8.info.render.vertices=0;a8.info.render.faces=0;a8.info.render.points=0;this.setRenderTarget(D);(this.autoClear||C)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);t=F.__webglObjects;C=0;for(B=t.length;C<B;C++){if(A=t[C],v=A.object,A.id=C,A.render=!1,v.visible&&(!(v instanceof THREE.Mesh||v instanceof THREE.ParticleSystem)||!v.frustumCulled||bC.intersectsObject(v))){var n=v;n._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,n.matrixWorld);n._normalMatrix.getNormalMatrix(n._modelViewMatrix);var n=A,m=n.object,H=n.buffer,G=m.geometry,m=m.material;m instanceof THREE.MeshFaceMaterial?(m=m.materials[G instanceof THREE.BufferGeometry?0:H.materialIndex],m.transparent?(n.transparent=m,n.opaque=null):(n.opaque=m,n.transparent=null)):m&&(m.transparent?(n.transparent=m,n.opaque=null):(n.opaque=m,n.transparent=null));A.render=!0;!0===this.sortObjects&&(null!==v.renderDepth?A.z=v.renderDepth:(o.setFromMatrixPosition(v.matrixWorld),o.applyProjection(aX),A.z=o.z))}}this.sortObjects&&t.sort(aE);t=F.__webglObjectsImmediate;C=0;for(B=t.length;C<B;C++){A=t[C],v=A.object,v.visible&&(v._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,v.matrixWorld),v._normalMatrix.getNormalMatrix(v._modelViewMatrix),v=A.object.material,v.transparent?(A.transparent=v,A.opaque=null):(A.opaque=v,A.transparent=null))}F.overrideMaterial?(C=F.overrideMaterial,this.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),this.setDepthTest(C.depthTest),this.setDepthWrite(C.depthWrite),bi(C.polygonOffset,C.polygonOffsetFactor,C.polygonOffsetUnits),ay(F.__webglObjects,!1,"",E,s,p,!0,C),ax(F.__webglObjectsImmediate,"",E,s,p,!1,C)):(C=null,this.setBlending(THREE.NoBlending),ay(F.__webglObjects,!0,"opaque",E,s,p,!1,C),ax(F.__webglObjectsImmediate,"opaque",E,s,p,!1,C),ay(F.__webglObjects,!1,"transparent",E,s,p,!0,C),ax(F.__webglObjectsImmediate,"transparent",E,s,p,!0,C));aC(this.renderPluginsPost,F,E);D&&D.generateMipmaps&&D.minFilter!==THREE.NearestFilter&&D.minFilter!==THREE.LinearFilter&&(D instanceof THREE.WebGLRenderTargetCube?(aF.bindTexture(aF.TEXTURE_CUBE_MAP,D.__webglTexture),aF.generateMipmap(aF.TEXTURE_CUBE_MAP),aF.bindTexture(aF.TEXTURE_CUBE_MAP,null)):(aF.bindTexture(aF.TEXTURE_2D,D.__webglTexture),aF.generateMipmap(aF.TEXTURE_2D),aF.bindTexture(aF.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(h,g,n,m,l){var k=a9(h,g,n,m,l);bt=-1;a8.setMaterialFaces(m);l.immediateRenderCallback?l.immediateRenderCallback(k,aF,bC):l.render(function(b){a8.renderBufferImmediate(b,k,m)})};this.initWebGLObjects=function(dd){dd.__webglObjects||(dd.__webglObjects=[],dd.__webglObjectsImmediate=[],dd.__webglSprites=[],dd.__webglFlares=[]);for(;dd.__objectsAdded.length;){az(dd.__objectsAdded[0],dd),dd.__objectsAdded.splice(0,1)}for(;dd.__objectsRemoved.length;){ar(dd.__objectsRemoved[0],dd),dd.__objectsRemoved.splice(0,1)}for(var c9=0,c6=dd.__webglObjects.length;c9<c6;c9++){var c5=dd.__webglObjects[c9].object;void 0===c5.__webglInit&&(void 0!==c5.__webglActive&&ar(c5,dd),az(c5,dd));var c4=c5,c3=c4.geometry,c1=void 0,c2=void 0,cY=void 0;if(c3 instanceof THREE.BufferGeometry){var cX=aF.DYNAMIC_DRAW,cW=c3.attributes,dO=void 0,dN=void 0;for(dO in cW){dN=cW[dO],dN.needsUpdate&&("index"===dO?(aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,dN.buffer),aF.bufferData(aF.ELEMENT_ARRAY_BUFFER,dN.array,cX)):(aF.bindBuffer(aF.ARRAY_BUFFER,dN.buffer),aF.bufferData(aF.ARRAY_BUFFER,dN.array,cX)),dN.needsUpdate=!1)}}else{if(c4 instanceof THREE.Mesh){for(var cT=0,dA=c3.geometryGroupsList.length;cT<dA;cT++){if(c1=c3.geometryGroupsList[cT],cY=aS(c4,c1),c3.buffersNeedUpdate&&aT(c1,c4),c2=cY.attributes&&au(cY),c3.verticesNeedUpdate||c3.morphTargetsNeedUpdate||c3.elementsNeedUpdate||c3.uvsNeedUpdate||c3.normalsNeedUpdate||c3.colorsNeedUpdate||c3.tangentsNeedUpdate||c2){var cV=c1,dH=c4,dM=aF.DYNAMIC_DRAW,dK=!c3.dynamic,dC=cY;if(cV.__inittedArrays){var dF=aP(dC),dw=dC.vertexColors?dC.vertexColors:!1,dy=aN(dC),dB=dF===THREE.SmoothShading,dL=void 0,dJ=void 0,dv=void 0,dE=void 0,dp=void 0,cw=void 0,dk=void 0,cl=void 0,dt=void 0,dn=void 0,dm=void 0,d3=void 0,d2=void 0,dI=void 0,bO=void 0,dl=void 0,dj=void 0,cO=void 0,dT=void 0,eh=void 0,bR=void 0,b2=void 0,dZ=void 0,bT=void 0,d5=void 0,d=void 0,di=void 0,cJ=void 0,cA=void 0,cc=void 0,ef=void 0,u=void 0,b7=void 0,bZ=void 0,d8=void 0,cR=void 0,b5=void 0,bX=void 0,ce=void 0,dg=void 0,d1=0,dG=0,bM=0,f=0,b3=0,cE=0,ed=0,cI=0,cC=0,cg=0,ct=0,dx=0,bV=void 0,cv=cV.__vertexArray,c7=cV.__uvArray,cN=cV.__uv2Array,cf=cV.__normalArray,dX=cV.__tangentArray,ck=cV.__colorArray,du=cV.__skinIndexArray,c0=cV.__skinWeightArray,dh=cV.__morphTargetsArrays,co=cV.__morphNormalsArrays,cS=cV.__webglCustomAttributesList,dz=void 0,d9=cV.__faceArray,b4=cV.__lineArray,cH=dH.geometry,cs=cH.elementsNeedUpdate,m=cH.uvsNeedUpdate,bY=cH.normalsNeedUpdate,eg=cH.tangentsNeedUpdate,d4=cH.colorsNeedUpdate,de=cH.morphTargetsNeedUpdate,cu=cH.vertices,cF=cV.faces3,b9=cH.faces,ch=cH.faceVertexUvs[0],b6=cH.faceVertexUvs[1],cj=cH.skinIndices,dW=cH.skinWeights,ds=cH.morphTargets,bP=cH.morphNormals;if(cH.verticesNeedUpdate){dL=0;for(dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],d3=cu[dE.a],d2=cu[dE.b],dI=cu[dE.c],cv[dG]=d3.x,cv[dG+1]=d3.y,cv[dG+2]=d3.z,cv[dG+3]=d2.x,cv[dG+4]=d2.y,cv[dG+5]=d2.z,cv[dG+6]=dI.x,cv[dG+7]=dI.y,cv[dG+8]=dI.z,dG+=9}aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglVertexBuffer);aF.bufferData(aF.ARRAY_BUFFER,cv,dM)}if(de){for(d8=0,cR=ds.length;d8<cR;d8++){dL=ct=0;for(dJ=cF.length;dL<dJ;dL++){ce=cF[dL],dE=b9[ce],d3=ds[d8].vertices[dE.a],d2=ds[d8].vertices[dE.b],dI=ds[d8].vertices[dE.c],b5=dh[d8],b5[ct]=d3.x,b5[ct+1]=d3.y,b5[ct+2]=d3.z,b5[ct+3]=d2.x,b5[ct+4]=d2.y,b5[ct+5]=d2.z,b5[ct+6]=dI.x,b5[ct+7]=dI.y,b5[ct+8]=dI.z,dC.morphNormals&&(dB?(dg=bP[d8].vertexNormals[ce],cO=dg.a,dT=dg.b,eh=dg.c):eh=dT=cO=bP[d8].faceNormals[ce],bX=co[d8],bX[ct]=cO.x,bX[ct+1]=cO.y,bX[ct+2]=cO.z,bX[ct+3]=dT.x,bX[ct+4]=dT.y,bX[ct+5]=dT.z,bX[ct+6]=eh.x,bX[ct+7]=eh.y,bX[ct+8]=eh.z),ct+=9}aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglMorphTargetsBuffers[d8]);aF.bufferData(aF.ARRAY_BUFFER,dh[d8],dM);dC.morphNormals&&(aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglMorphNormalsBuffers[d8]),aF.bufferData(aF.ARRAY_BUFFER,co[d8],dM))}}if(dW.length){dL=0;for(dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],bT=dW[dE.a],d5=dW[dE.b],d=dW[dE.c],c0[cg]=bT.x,c0[cg+1]=bT.y,c0[cg+2]=bT.z,c0[cg+3]=bT.w,c0[cg+4]=d5.x,c0[cg+5]=d5.y,c0[cg+6]=d5.z,c0[cg+7]=d5.w,c0[cg+8]=d.x,c0[cg+9]=d.y,c0[cg+10]=d.z,c0[cg+11]=d.w,di=cj[dE.a],cJ=cj[dE.b],cA=cj[dE.c],du[cg]=di.x,du[cg+1]=di.y,du[cg+2]=di.z,du[cg+3]=di.w,du[cg+4]=cJ.x,du[cg+5]=cJ.y,du[cg+6]=cJ.z,du[cg+7]=cJ.w,du[cg+8]=cA.x,du[cg+9]=cA.y,du[cg+10]=cA.z,du[cg+11]=cA.w,cg+=12}0<cg&&(aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglSkinIndicesBuffer),aF.bufferData(aF.ARRAY_BUFFER,du,dM),aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglSkinWeightsBuffer),aF.bufferData(aF.ARRAY_BUFFER,c0,dM))}if(d4&&dw){dL=0;for(dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],dk=dE.vertexColors,cl=dE.color,3===dk.length&&dw===THREE.VertexColors?(bR=dk[0],b2=dk[1],dZ=dk[2]):dZ=b2=bR=cl,ck[cC]=bR.r,ck[cC+1]=bR.g,ck[cC+2]=bR.b,ck[cC+3]=b2.r,ck[cC+4]=b2.g,ck[cC+5]=b2.b,ck[cC+6]=dZ.r,ck[cC+7]=dZ.g,ck[cC+8]=dZ.b,cC+=9}0<cC&&(aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglColorBuffer),aF.bufferData(aF.ARRAY_BUFFER,ck,dM))}if(eg&&cH.hasTangents){dL=0;for(dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],dt=dE.vertexTangents,bO=dt[0],dl=dt[1],dj=dt[2],dX[ed]=bO.x,dX[ed+1]=bO.y,dX[ed+2]=bO.z,dX[ed+3]=bO.w,dX[ed+4]=dl.x,dX[ed+5]=dl.y,dX[ed+6]=dl.z,dX[ed+7]=dl.w,dX[ed+8]=dj.x,dX[ed+9]=dj.y,dX[ed+10]=dj.z,dX[ed+11]=dj.w,ed+=12}aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglTangentBuffer);aF.bufferData(aF.ARRAY_BUFFER,dX,dM)}if(bY&&dF){dL=0;for(dJ=cF.length;dL<dJ;dL++){if(dE=b9[cF[dL]],dp=dE.vertexNormals,cw=dE.normal,3===dp.length&&dB){for(cc=0;3>cc;cc++){u=dp[cc],cf[cE]=u.x,cf[cE+1]=u.y,cf[cE+2]=u.z,cE+=3}}else{for(cc=0;3>cc;cc++){cf[cE]=cw.x,cf[cE+1]=cw.y,cf[cE+2]=cw.z,cE+=3}}}aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglNormalBuffer);aF.bufferData(aF.ARRAY_BUFFER,cf,dM)}if(m&&ch&&dy){dL=0;for(dJ=cF.length;dL<dJ;dL++){if(dv=cF[dL],dn=ch[dv],void 0!==dn){for(cc=0;3>cc;cc++){b7=dn[cc],c7[bM]=b7.x,c7[bM+1]=b7.y,bM+=2}}}0<bM&&(aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglUVBuffer),aF.bufferData(aF.ARRAY_BUFFER,c7,dM))}if(m&&b6&&dy){dL=0;for(dJ=cF.length;dL<dJ;dL++){if(dv=cF[dL],dm=b6[dv],void 0!==dm){for(cc=0;3>cc;cc++){bZ=dm[cc],cN[f]=bZ.x,cN[f+1]=bZ.y,f+=2}}}0<f&&(aF.bindBuffer(aF.ARRAY_BUFFER,cV.__webglUV2Buffer),aF.bufferData(aF.ARRAY_BUFFER,cN,dM))}if(cs){dL=0;for(dJ=cF.length;dL<dJ;dL++){d9[b3]=d1,d9[b3+1]=d1+1,d9[b3+2]=d1+2,b3+=3,b4[cI]=d1,b4[cI+1]=d1+1,b4[cI+2]=d1,b4[cI+3]=d1+2,b4[cI+4]=d1+1,b4[cI+5]=d1+2,cI+=6,d1+=3}aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,cV.__webglFaceBuffer);aF.bufferData(aF.ELEMENT_ARRAY_BUFFER,d9,dM);aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,cV.__webglLineBuffer);aF.bufferData(aF.ELEMENT_ARRAY_BUFFER,b4,dM)}if(cS){for(cc=0,ef=cS.length;cc<ef;cc++){if(dz=cS[cc],dz.__original.needsUpdate){dx=0;if(1===dz.size){if(void 0===dz.boundTo||"vertices"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],dz.array[dx]=dz.value[dE.a],dz.array[dx+1]=dz.value[dE.b],dz.array[dx+2]=dz.value[dE.c],dx+=3}}else{if("faces"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){bV=dz.value[cF[dL]],dz.array[dx]=bV,dz.array[dx+1]=bV,dz.array[dx+2]=bV,dx+=3}}}}else{if(2===dz.size){if(void 0===dz.boundTo||"vertices"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],d3=dz.value[dE.a],d2=dz.value[dE.b],dI=dz.value[dE.c],dz.array[dx]=d3.x,dz.array[dx+1]=d3.y,dz.array[dx+2]=d2.x,dz.array[dx+3]=d2.y,dz.array[dx+4]=dI.x,dz.array[dx+5]=dI.y,dx+=6}}else{if("faces"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){dI=d2=d3=bV=dz.value[cF[dL]],dz.array[dx]=d3.x,dz.array[dx+1]=d3.y,dz.array[dx+2]=d2.x,dz.array[dx+3]=d2.y,dz.array[dx+4]=dI.x,dz.array[dx+5]=dI.y,dx+=6}}}}else{if(3===dz.size){var cp;cp="c"===dz.type?["r","g","b"]:["x","y","z"];if(void 0===dz.boundTo||"vertices"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],d3=dz.value[dE.a],d2=dz.value[dE.b],dI=dz.value[dE.c],dz.array[dx]=d3[cp[0]],dz.array[dx+1]=d3[cp[1]],dz.array[dx+2]=d3[cp[2]],dz.array[dx+3]=d2[cp[0]],dz.array[dx+4]=d2[cp[1]],dz.array[dx+5]=d2[cp[2]],dz.array[dx+6]=dI[cp[0]],dz.array[dx+7]=dI[cp[1]],dz.array[dx+8]=dI[cp[2]],dx+=9}}else{if("faces"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){dI=d2=d3=bV=dz.value[cF[dL]],dz.array[dx]=d3[cp[0]],dz.array[dx+1]=d3[cp[1]],dz.array[dx+2]=d3[cp[2]],dz.array[dx+3]=d2[cp[0]],dz.array[dx+4]=d2[cp[1]],dz.array[dx+5]=d2[cp[2]],dz.array[dx+6]=dI[cp[0]],dz.array[dx+7]=dI[cp[1]],dz.array[dx+8]=dI[cp[2]],dx+=9}}else{if("faceVertices"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){bV=dz.value[cF[dL]],d3=bV[0],d2=bV[1],dI=bV[2],dz.array[dx]=d3[cp[0]],dz.array[dx+1]=d3[cp[1]],dz.array[dx+2]=d3[cp[2]],dz.array[dx+3]=d2[cp[0]],dz.array[dx+4]=d2[cp[1]],dz.array[dx+5]=d2[cp[2]],dz.array[dx+6]=dI[cp[0]],dz.array[dx+7]=dI[cp[1]],dz.array[dx+8]=dI[cp[2]],dx+=9}}}}}else{if(4===dz.size){if(void 0===dz.boundTo||"vertices"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){dE=b9[cF[dL]],d3=dz.value[dE.a],d2=dz.value[dE.b],dI=dz.value[dE.c],dz.array[dx]=d3.x,dz.array[dx+1]=d3.y,dz.array[dx+2]=d3.z,dz.array[dx+3]=d3.w,dz.array[dx+4]=d2.x,dz.array[dx+5]=d2.y,dz.array[dx+6]=d2.z,dz.array[dx+7]=d2.w,dz.array[dx+8]=dI.x,dz.array[dx+9]=dI.y,dz.array[dx+10]=dI.z,dz.array[dx+11]=dI.w,dx+=12}}else{if("faces"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){dI=d2=d3=bV=dz.value[cF[dL]],dz.array[dx]=d3.x,dz.array[dx+1]=d3.y,dz.array[dx+2]=d3.z,dz.array[dx+3]=d3.w,dz.array[dx+4]=d2.x,dz.array[dx+5]=d2.y,dz.array[dx+6]=d2.z,dz.array[dx+7]=d2.w,dz.array[dx+8]=dI.x,dz.array[dx+9]=dI.y,dz.array[dx+10]=dI.z,dz.array[dx+11]=dI.w,dx+=12}}else{if("faceVertices"===dz.boundTo){for(dL=0,dJ=cF.length;dL<dJ;dL++){bV=dz.value[cF[dL]],d3=bV[0],d2=bV[1],dI=bV[2],dz.array[dx]=d3.x,dz.array[dx+1]=d3.y,dz.array[dx+2]=d3.z,dz.array[dx+3]=d3.w,dz.array[dx+4]=d2.x,dz.array[dx+5]=d2.y,dz.array[dx+6]=d2.z,dz.array[dx+7]=d2.w,dz.array[dx+8]=dI.x,dz.array[dx+9]=dI.y,dz.array[dx+10]=dI.z,dz.array[dx+11]=dI.w,dx+=12}}}}}}}}aF.bindBuffer(aF.ARRAY_BUFFER,dz.buffer);aF.bufferData(aF.ARRAY_BUFFER,dz.array,dM)}}}dK&&(delete cV.__inittedArrays,delete cV.__colorArray,delete cV.__normalArray,delete cV.__tangentArray,delete cV.__uvArray,delete cV.__uv2Array,delete cV.__faceArray,delete cV.__vertexArray,delete cV.__lineArray,delete cV.__skinIndexArray,delete cV.__skinWeightArray)}}}c3.verticesNeedUpdate=!1;c3.morphTargetsNeedUpdate=!1;c3.elementsNeedUpdate=!1;c3.uvsNeedUpdate=!1;c3.normalsNeedUpdate=!1;c3.colorsNeedUpdate=!1;c3.tangentsNeedUpdate=!1;c3.buffersNeedUpdate=!1;cY.attributes&&aw(cY)}else{if(c4 instanceof THREE.Line){cY=aS(c4,c3);c2=cY.attributes&&au(cY);if(c3.verticesNeedUpdate||c3.colorsNeedUpdate||c3.lineDistancesNeedUpdate||c2){var cL=c3,cZ=aF.DYNAMIC_DRAW,cG=void 0,cx=void 0,cm=void 0,cK=void 0,cU=void 0,cB=void 0,q=cL.vertices,dR=cL.colors,cP=cL.lineDistances,bU=q.length,bL=dR.length,e=cP.length,cq=cL.__vertexArray,dP=cL.__colorArray,ei=cL.__lineDistanceArray,cM=cL.colorsNeedUpdate,cD=cL.lineDistancesNeedUpdate,b8=cL.__webglCustomAttributesList,d0=void 0,d6=void 0,ci=void 0,ee=void 0,cy=void 0,dV=void 0;if(cL.verticesNeedUpdate){for(cG=0;cG<bU;cG++){cK=q[cG],cU=3*cG,cq[cU]=cK.x,cq[cU+1]=cK.y,cq[cU+2]=cK.z}aF.bindBuffer(aF.ARRAY_BUFFER,cL.__webglVertexBuffer);aF.bufferData(aF.ARRAY_BUFFER,cq,cZ)}if(cM){for(cx=0;cx<bL;cx++){cB=dR[cx],cU=3*cx,dP[cU]=cB.r,dP[cU+1]=cB.g,dP[cU+2]=cB.b}aF.bindBuffer(aF.ARRAY_BUFFER,cL.__webglColorBuffer);aF.bufferData(aF.ARRAY_BUFFER,dP,cZ)}if(cD){for(cm=0;cm<e;cm++){ei[cm]=cP[cm]}aF.bindBuffer(aF.ARRAY_BUFFER,cL.__webglLineDistanceBuffer);aF.bufferData(aF.ARRAY_BUFFER,ei,cZ)}if(b8){for(d0=0,d6=b8.length;d0<d6;d0++){if(dV=b8[d0],dV.needsUpdate&&(void 0===dV.boundTo||"vertices"===dV.boundTo)){cU=0;ee=dV.value.length;if(1===dV.size){for(ci=0;ci<ee;ci++){dV.array[ci]=dV.value[ci]}}else{if(2===dV.size){for(ci=0;ci<ee;ci++){cy=dV.value[ci],dV.array[cU]=cy.x,dV.array[cU+1]=cy.y,cU+=2}}else{if(3===dV.size){if("c"===dV.type){for(ci=0;ci<ee;ci++){cy=dV.value[ci],dV.array[cU]=cy.r,dV.array[cU+1]=cy.g,dV.array[cU+2]=cy.b,cU+=3}}else{for(ci=0;ci<ee;ci++){cy=dV.value[ci],dV.array[cU]=cy.x,dV.array[cU+1]=cy.y,dV.array[cU+2]=cy.z,cU+=3}}}else{if(4===dV.size){for(ci=0;ci<ee;ci++){cy=dV.value[ci],dV.array[cU]=cy.x,dV.array[cU+1]=cy.y,dV.array[cU+2]=cy.z,dV.array[cU+3]=cy.w,cU+=4}}}}}aF.bindBuffer(aF.ARRAY_BUFFER,dV.buffer);aF.bufferData(aF.ARRAY_BUFFER,dV.array,cZ)}}}}c3.verticesNeedUpdate=!1;c3.colorsNeedUpdate=!1;c3.lineDistancesNeedUpdate=!1;cY.attributes&&aw(cY)}else{if(c4 instanceof THREE.ParticleSystem){cY=aS(c4,c3);c2=cY.attributes&&au(cY);if(c3.verticesNeedUpdate||c3.colorsNeedUpdate||c4.sortParticles||c2){var b1=c3,b0=aF.DYNAMIC_DRAW,cd=c4,cn=void 0,bS=void 0,bJ=void 0,dq=void 0,c=void 0,cz=void 0,dD=b1.vertices,bQ=dD.length,r=b1.colors,dS=r.length,bW=b1.__vertexArray,bN=b1.__colorArray,d7=b1.__sortArray,df=b1.verticesNeedUpdate,cQ=b1.colorsNeedUpdate,dU=b1.__webglCustomAttributesList,cr=void 0,dY=void 0,c8=void 0,dQ=void 0,bK=void 0,dr=void 0;if(cd.sortParticles){aB.copy(aX);aB.multiply(cd.matrixWorld);for(cn=0;cn<bQ;cn++){bJ=dD[cn],o.copy(bJ),o.applyProjection(aB),d7[cn]=[o.z,cn]}d7.sort(aA);for(cn=0;cn<bQ;cn++){bJ=dD[d7[cn][1]],dq=3*cn,bW[dq]=bJ.x,bW[dq+1]=bJ.y,bW[dq+2]=bJ.z}for(bS=0;bS<dS;bS++){dq=3*bS,cz=r[d7[bS][1]],bN[dq]=cz.r,bN[dq+1]=cz.g,bN[dq+2]=cz.b}if(dU){for(cr=0,dY=dU.length;cr<dY;cr++){if(dr=dU[cr],void 0===dr.boundTo||"vertices"===dr.boundTo){if(dq=0,dQ=dr.value.length,1===dr.size){for(c8=0;c8<dQ;c8++){c=d7[c8][1],dr.array[c8]=dr.value[c]}}else{if(2===dr.size){for(c8=0;c8<dQ;c8++){c=d7[c8][1],bK=dr.value[c],dr.array[dq]=bK.x,dr.array[dq+1]=bK.y,dq+=2}}else{if(3===dr.size){if("c"===dr.type){for(c8=0;c8<dQ;c8++){c=d7[c8][1],bK=dr.value[c],dr.array[dq]=bK.r,dr.array[dq+1]=bK.g,dr.array[dq+2]=bK.b,dq+=3}}else{for(c8=0;c8<dQ;c8++){c=d7[c8][1],bK=dr.value[c],dr.array[dq]=bK.x,dr.array[dq+1]=bK.y,dr.array[dq+2]=bK.z,dq+=3}}}else{if(4===dr.size){for(c8=0;c8<dQ;c8++){c=d7[c8][1],bK=dr.value[c],dr.array[dq]=bK.x,dr.array[dq+1]=bK.y,dr.array[dq+2]=bK.z,dr.array[dq+3]=bK.w,dq+=4}}}}}}}}}else{if(df){for(cn=0;cn<bQ;cn++){bJ=dD[cn],dq=3*cn,bW[dq]=bJ.x,bW[dq+1]=bJ.y,bW[dq+2]=bJ.z}}if(cQ){for(bS=0;bS<dS;bS++){cz=r[bS],dq=3*bS,bN[dq]=cz.r,bN[dq+1]=cz.g,bN[dq+2]=cz.b}}if(dU){for(cr=0,dY=dU.length;cr<dY;cr++){if(dr=dU[cr],dr.needsUpdate&&(void 0===dr.boundTo||"vertices"===dr.boundTo)){if(dQ=dr.value.length,dq=0,1===dr.size){for(c8=0;c8<dQ;c8++){dr.array[c8]=dr.value[c8]}}else{if(2===dr.size){for(c8=0;c8<dQ;c8++){bK=dr.value[c8],dr.array[dq]=bK.x,dr.array[dq+1]=bK.y,dq+=2}}else{if(3===dr.size){if("c"===dr.type){for(c8=0;c8<dQ;c8++){bK=dr.value[c8],dr.array[dq]=bK.r,dr.array[dq+1]=bK.g,dr.array[dq+2]=bK.b,dq+=3}}else{for(c8=0;c8<dQ;c8++){bK=dr.value[c8],dr.array[dq]=bK.x,dr.array[dq+1]=bK.y,dr.array[dq+2]=bK.z,dq+=3}}}else{if(4===dr.size){for(c8=0;c8<dQ;c8++){bK=dr.value[c8],dr.array[dq]=bK.x,dr.array[dq+1]=bK.y,dr.array[dq+2]=bK.z,dr.array[dq+3]=bK.w,dq+=4}}}}}}}}}if(df||cd.sortParticles){aF.bindBuffer(aF.ARRAY_BUFFER,b1.__webglVertexBuffer),aF.bufferData(aF.ARRAY_BUFFER,bW,b0)}if(cQ||cd.sortParticles){aF.bindBuffer(aF.ARRAY_BUFFER,b1.__webglColorBuffer),aF.bufferData(aF.ARRAY_BUFFER,bN,b0)}if(dU){for(cr=0,dY=dU.length;cr<dY;cr++){if(dr=dU[cr],dr.needsUpdate||cd.sortParticles){aF.bindBuffer(aF.ARRAY_BUFFER,dr.buffer),aF.bufferData(aF.ARRAY_BUFFER,dr.array,b0)}}}}c3.verticesNeedUpdate=!1;c3.colorsNeedUpdate=!1;cY.attributes&&aw(cY)}}}}}};this.initMaterial=function(L,K,J,I){var H,G,F,E;L.addEventListener("dispose",j);var D,C,A,B;L instanceof THREE.MeshDepthMaterial?B="depth":L instanceof THREE.MeshNormalMaterial?B="normal":L instanceof THREE.MeshBasicMaterial?B="basic":L instanceof THREE.MeshLambertMaterial?B="lambert":L instanceof THREE.MeshPhongMaterial?B="phong":L instanceof THREE.LineBasicMaterial?B="basic":L instanceof THREE.LineDashedMaterial?B="dashed":L instanceof THREE.ParticleSystemMaterial&&(B="particle_basic");B&&(H=THREE.ShaderLib[B],L.uniforms=THREE.UniformsUtils.clone(H.uniforms),L.vertexShader=H.vertexShader,L.fragmentShader=H.fragmentShader);A=E=F=G=H=0;for(var v=K.length;A<v;A++){var m=K[A];m.onlyShadow||!1===m.visible||(m instanceof THREE.DirectionalLight&&H++,m instanceof THREE.PointLight&&G++,m instanceof THREE.SpotLight&&F++,m instanceof THREE.HemisphereLight&&E++)}v=A=0;for(m=K.length;v<m;v++){var Q=K[v];Q.castShadow&&(Q instanceof THREE.SpotLight&&A++,Q instanceof THREE.DirectionalLight&&!Q.shadowCascade&&A++)}K=A;bE&&I&&I.skeleton&&I.skeleton.useVertexTexture?A=1024:(A=aF.getParameter(aF.MAX_VERTEX_UNIFORM_VECTORS),A=Math.floor((A-20)/4),void 0!==I&&I instanceof THREE.SkinnedMesh&&(A=Math.min(I.skeleton.bones.length,A),A<I.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+I.skeleton.bones.length+", this GPU supports just "+A+" (try OpenGL instead of ANGLE)")));J={precision:a7,supportsVertexTextures:aQ,map:!!L.map,envMap:!!L.envMap,lightMap:!!L.lightMap,bumpMap:!!L.bumpMap,normalMap:!!L.normalMap,specularMap:!!L.specularMap,vertexColors:L.vertexColors,fog:J,useFog:L.fog,fogExp:J instanceof THREE.FogExp2,sizeAttenuation:L.sizeAttenuation,logarithmicDepthBuffer:ah,skinning:L.skinning,maxBones:A,useVertexTexture:bE&&I&&I.skeleton&&I.skeleton.useVertexTexture,morphTargets:L.morphTargets,morphNormals:L.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:H,maxPointLights:G,maxSpotLights:F,maxHemiLights:E,maxShadows:K,shadowMapEnabled:this.shadowMapEnabled&&I.receiveShadow&&0<K,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:L.alphaTest,metal:L.metal,wrapAround:L.wrapAround,doubleSided:L.side===THREE.DoubleSide,flipSided:L.side===THREE.BackSide};I=[];B?I.push(B):(I.push(L.fragmentShader),I.push(L.vertexShader));for(var N in L.defines){I.push(N),I.push(L.defines[N])}for(C in J){I.push(C),I.push(J[C])}B=I.join();var P;C=0;for(N=bv.length;C<N;C++){if(I=bv[C],I.code===B){P=I;P.usedTimes++;break}}void 0===P&&(P=new THREE.WebGLProgram(this,B,L,J),bv.push(P),a8.info.memory.programs=bv.length);L.program=P;P=L.program.attributes;if(L.morphTargets){for(L.numSupportedMorphTargets=0,N="morphTarget",C=0;C<this.maxMorphTargets;C++){B=N+C,0<=P[B]&&L.numSupportedMorphTargets++}}if(L.morphNormals){for(L.numSupportedMorphNormals=0,N="morphNormal",C=0;C<this.maxMorphNormals;C++){B=N+C,0<=P[B]&&L.numSupportedMorphNormals++}}L.uniformsList=[];for(D in L.uniforms){L.uniformsList.push([L.uniforms[D],D])}};this.setFaceCulling=function(d,c){d===THREE.CullFaceNone?aF.disable(aF.CULL_FACE):(c===THREE.FrontFaceDirectionCW?aF.frontFace(aF.CW):aF.frontFace(aF.CCW),d===THREE.CullFaceBack?aF.cullFace(aF.BACK):d===THREE.CullFaceFront?aF.cullFace(aF.FRONT):aF.cullFace(aF.FRONT_AND_BACK),aF.enable(aF.CULL_FACE))};this.setMaterialFaces=function(d){var c=d.side===THREE.DoubleSide;d=d.side===THREE.BackSide;bG!==c&&(c?aF.disable(aF.CULL_FACE):aF.enable(aF.CULL_FACE),bG=c);be!==d&&(d?aF.frontFace(aF.CW):aF.frontFace(aF.CCW),be=d)};this.setDepthTest=function(b){aJ!==b&&(b?aF.enable(aF.DEPTH_TEST):aF.disable(aF.DEPTH_TEST),aJ=b)};this.setDepthWrite=function(b){bx!==b&&(aF.depthMask(b),bx=b)};this.setBlending=function(f,e,h,g){f!==bs&&(f===THREE.NoBlending?aF.disable(aF.BLEND):f===THREE.AdditiveBlending?(aF.enable(aF.BLEND),aF.blendEquation(aF.FUNC_ADD),aF.blendFunc(aF.SRC_ALPHA,aF.ONE)):f===THREE.SubtractiveBlending?(aF.enable(aF.BLEND),aF.blendEquation(aF.FUNC_ADD),aF.blendFunc(aF.ZERO,aF.ONE_MINUS_SRC_COLOR)):f===THREE.MultiplyBlending?(aF.enable(aF.BLEND),aF.blendEquation(aF.FUNC_ADD),aF.blendFunc(aF.ZERO,aF.SRC_COLOR)):f===THREE.CustomBlending?aF.enable(aF.BLEND):(aF.enable(aF.BLEND),aF.blendEquationSeparate(aF.FUNC_ADD,aF.FUNC_ADD),aF.blendFuncSeparate(aF.SRC_ALPHA,aF.ONE_MINUS_SRC_ALPHA,aF.ONE,aF.ONE_MINUS_SRC_ALPHA)),bs=f);if(f===THREE.CustomBlending){if(e!==ae&&(aF.blendEquation(aq(e)),ae=e),h!==M||g!==T){aF.blendFunc(aq(h),aq(g)),M=h,T=g}}else{T=M=ae=null}};this.setTexture=function(u,t){if(u.needsUpdate){u.__webglInit||(u.__webglInit=!0,u.addEventListener("dispose",bw),u.__webglTexture=aF.createTexture(),a8.info.memory.textures++);aF.activeTexture(aF.TEXTURE0+t);aF.bindTexture(aF.TEXTURE_2D,u.__webglTexture);aF.pixelStorei(aF.UNPACK_FLIP_Y_WEBGL,u.flipY);aF.pixelStorei(aF.UNPACK_PREMULTIPLY_ALPHA_WEBGL,u.premultiplyAlpha);aF.pixelStorei(aF.UNPACK_ALIGNMENT,u.unpackAlignment);var s=u.image,r=THREE.Math.isPowerOfTwo(s.width)&&THREE.Math.isPowerOfTwo(s.height),q=aq(u.format),p=aq(u.type);bm(aF.TEXTURE_2D,u,r);var n=u.mipmaps;if(u instanceof THREE.DataTexture){if(0<n.length&&r){for(var m=0,l=n.length;m<l;m++){s=n[m],aF.texImage2D(aF.TEXTURE_2D,m,q,s.width,s.height,0,q,p,s.data)}u.generateMipmaps=!1}else{aF.texImage2D(aF.TEXTURE_2D,0,q,s.width,s.height,0,q,p,s.data)}}else{if(u instanceof THREE.CompressedTexture){for(m=0,l=n.length;m<l;m++){s=n[m],u.format!==THREE.RGBAFormat?aF.compressedTexImage2D(aF.TEXTURE_2D,m,q,s.width,s.height,0,s.data):aF.texImage2D(aF.TEXTURE_2D,m,q,s.width,s.height,0,q,p,s.data)}}else{if(0<n.length&&r){m=0;for(l=n.length;m<l;m++){s=n[m],aF.texImage2D(aF.TEXTURE_2D,m,q,q,p,s)}u.generateMipmaps=!1}else{aF.texImage2D(aF.TEXTURE_2D,0,q,q,p,u.image)}}}u.generateMipmaps&&r&&aF.generateMipmap(aF.TEXTURE_2D);u.needsUpdate=!1;if(u.onUpdate){u.onUpdate()}}else{aF.activeTexture(aF.TEXTURE0+t),aF.bindTexture(aF.TEXTURE_2D,u.__webglTexture)}};this.setRenderTarget=function(l){var k=l instanceof THREE.WebGLRenderTargetCube;if(l&&!l.__webglFramebuffer){void 0===l.depthBuffer&&(l.depthBuffer=!0);void 0===l.stencilBuffer&&(l.stencilBuffer=!0);l.addEventListener("dispose",ac);l.__webglTexture=aF.createTexture();a8.info.memory.textures++;var s=THREE.Math.isPowerOfTwo(l.width)&&THREE.Math.isPowerOfTwo(l.height),r=aq(l.format),q=aq(l.type);if(k){l.__webglFramebuffer=[];l.__webglRenderbuffer=[];aF.bindTexture(aF.TEXTURE_CUBE_MAP,l.__webglTexture);bm(aF.TEXTURE_CUBE_MAP,l,s);for(var p=0;6>p;p++){l.__webglFramebuffer[p]=aF.createFramebuffer();l.__webglRenderbuffer[p]=aF.createRenderbuffer();aF.texImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,r,l.width,l.height,0,r,q,null);var n=l,m=aF.TEXTURE_CUBE_MAP_POSITIVE_X+p;aF.bindFramebuffer(aF.FRAMEBUFFER,l.__webglFramebuffer[p]);aF.framebufferTexture2D(aF.FRAMEBUFFER,aF.COLOR_ATTACHMENT0,m,n.__webglTexture,0);bo(l.__webglRenderbuffer[p],l)}s&&aF.generateMipmap(aF.TEXTURE_CUBE_MAP)}else{l.__webglFramebuffer=aF.createFramebuffer(),l.__webglRenderbuffer=l.shareDepthFrom?l.shareDepthFrom.__webglRenderbuffer:aF.createRenderbuffer(),aF.bindTexture(aF.TEXTURE_2D,l.__webglTexture),bm(aF.TEXTURE_2D,l,s),aF.texImage2D(aF.TEXTURE_2D,0,r,l.width,l.height,0,r,q,null),r=aF.TEXTURE_2D,aF.bindFramebuffer(aF.FRAMEBUFFER,l.__webglFramebuffer),aF.framebufferTexture2D(aF.FRAMEBUFFER,aF.COLOR_ATTACHMENT0,r,l.__webglTexture,0),l.shareDepthFrom?l.depthBuffer&&!l.stencilBuffer?aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_ATTACHMENT,aF.RENDERBUFFER,l.__webglRenderbuffer):l.depthBuffer&&l.stencilBuffer&&aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_STENCIL_ATTACHMENT,aF.RENDERBUFFER,l.__webglRenderbuffer):bo(l.__webglRenderbuffer,l),s&&aF.generateMipmap(aF.TEXTURE_2D)}k?aF.bindTexture(aF.TEXTURE_CUBE_MAP,null):aF.bindTexture(aF.TEXTURE_2D,null);aF.bindRenderbuffer(aF.RENDERBUFFER,null);aF.bindFramebuffer(aF.FRAMEBUFFER,null)}l?(k=k?l.__webglFramebuffer[l.activeCubeFace]:l.__webglFramebuffer,s=l.width,l=l.height,q=r=0):(k=null,s=aL,l=aU,r=bg,q=ap);k!==by&&(aF.bindFramebuffer(aF.FRAMEBUFFER,k),aF.viewport(r,q,s,l),by=k);aj=s;bI=l};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,d,f){this.width=e;this.height=d;f=f||{};this.wrapS=void 0!==f.wrapS?f.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==f.wrapT?f.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f.magFilter?f.magFilter:THREE.LinearFilter;this.minFilter=void 0!==f.minFilter?f.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==f.anisotropy?f.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==f.format?f.format:THREE.RGBAFormat;this.type=void 0!==f.type?f.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==f.depthBuffer?f.depthBuffer:!0;this.stencilBuffer=void 0!==f.stencilBuffer?f.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(d,c){this.width=d;this.height=c},clone:function(){var b=new THREE.WebGLRenderTarget(this.width,this.height);b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.format=this.format;b.type=this.type;b.depthBuffer=this.depthBuffer;b.stencilBuffer=this.stencilBuffer;b.generateMipmaps=this.generateMipmaps;b.shareDepthFrom=this.shareDepthFrom;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(e,d,f){THREE.WebGLRenderTarget.call(this,e,d,f);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLProgram=function(){var b=0;return function(G,F,E,D){var C=G.context,B=E.fragmentShader,A=E.vertexShader,u=E.uniforms,o=E.attributes,m=E.defines,i=E.index0AttributeName;void 0===i&&!0===D.morphTargets&&(i="position");var j="SHADOWMAP_TYPE_BASIC";D.shadowMapType===THREE.PCFShadowMap?j="SHADOWMAP_TYPE_PCF":D.shadowMapType===THREE.PCFSoftShadowMap&&(j="SHADOWMAP_TYPE_PCF_SOFT");var K,J;K=[];for(var a in m){J=m[a],!1!==J&&(J="#define "+a+" "+J,K.push(J))}K=K.join("\n");m=C.createProgram();E instanceof THREE.RawShaderMaterial?G=E="":(E=["precision "+D.precision+" float;","precision "+D.precision+" int;",K,D.supportsVertexTextures?"#define VERTEX_TEXTURES":"",G.gammaInput?"#define GAMMA_INPUT":"",G.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+D.maxDirLights,"#define MAX_POINT_LIGHTS "+D.maxPointLights,"#define MAX_SPOT_LIGHTS "+D.maxSpotLights,"#define MAX_HEMI_LIGHTS "+D.maxHemiLights,"#define MAX_SHADOWS "+D.maxShadows,"#define MAX_BONES "+D.maxBones,D.map?"#define USE_MAP":"",D.envMap?"#define USE_ENVMAP":"",D.lightMap?"#define USE_LIGHTMAP":"",D.bumpMap?"#define USE_BUMPMAP":"",D.normalMap?"#define USE_NORMALMAP":"",D.specularMap?"#define USE_SPECULARMAP":"",D.vertexColors?"#define USE_COLOR":"",D.skinning?"#define USE_SKINNING":"",D.useVertexTexture?"#define BONE_TEXTURE":"",D.morphTargets?"#define USE_MORPHTARGETS":"",D.morphNormals?"#define USE_MORPHNORMALS":"",D.wrapAround?"#define WRAP_AROUND":"",D.doubleSided?"#define DOUBLE_SIDED":"",D.flipSided?"#define FLIP_SIDED":"",D.shadowMapEnabled?"#define USE_SHADOWMAP":"",D.shadowMapEnabled?"#define "+j:"",D.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",D.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",D.sizeAttenuation?"#define USE_SIZEATTENUATION":"",D.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),G=["precision "+D.precision+" float;","precision "+D.precision+" int;",D.bumpMap||D.normalMap?"#extension GL_OES_standard_derivatives : enable":"",K,"#define MAX_DIR_LIGHTS "+D.maxDirLights,"#define MAX_POINT_LIGHTS "+D.maxPointLights,"#define MAX_SPOT_LIGHTS "+D.maxSpotLights,"#define MAX_HEMI_LIGHTS "+D.maxHemiLights,"#define MAX_SHADOWS "+D.maxShadows,D.alphaTest?"#define ALPHATEST "+D.alphaTest:"",G.gammaInput?"#define GAMMA_INPUT":"",G.gammaOutput?"#define GAMMA_OUTPUT":"",D.useFog&&D.fog?"#define USE_FOG":"",D.useFog&&D.fogExp?"#define FOG_EXP2":"",D.map?"#define USE_MAP":"",D.envMap?"#define USE_ENVMAP":"",D.lightMap?"#define USE_LIGHTMAP":"",D.bumpMap?"#define USE_BUMPMAP":"",D.normalMap?"#define USE_NORMALMAP":"",D.specularMap?"#define USE_SPECULARMAP":"",D.vertexColors?"#define USE_COLOR":"",D.metal?"#define METAL":"",D.wrapAround?"#define WRAP_AROUND":"",D.doubleSided?"#define DOUBLE_SIDED":"",D.flipSided?"#define FLIP_SIDED":"",D.shadowMapEnabled?"#define USE_SHADOWMAP":"",D.shadowMapEnabled?"#define "+j:"",D.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",D.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",D.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));A=new THREE.WebGLShader(C,C.VERTEX_SHADER,E+A);B=new THREE.WebGLShader(C,C.FRAGMENT_SHADER,G+B);C.attachShader(m,A);C.attachShader(m,B);void 0!==i&&C.bindAttribLocation(m,0,i);C.linkProgram(m);!1===C.getProgramParameter(m,C.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",C.getProgramParameter(m,C.VALIDATE_STATUS)),console.error("gl.getError()",C.getError()));""!==C.getProgramInfoLog(m)&&console.error("gl.getProgramInfoLog()",C.getProgramInfoLog(m));C.deleteShader(A);C.deleteShader(B);i="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");D.useVertexTexture?(i.push("boneTexture"),i.push("boneTextureWidth"),i.push("boneTextureHeight")):i.push("boneGlobalMatrices");D.logarithmicDepthBuffer&&i.push("logDepthBufFC");for(var I in u){i.push(I)}u=i;I={};i=0;for(G=u.length;i<G;i++){j=u[i],I[j]=C.getUniformLocation(m,j)}this.uniforms=I;i="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(u=0;u<D.maxMorphTargets;u++){i.push("morphTarget"+u)}for(u=0;u<D.maxMorphNormals;u++){i.push("morphNormal"+u)}for(var H in o){i.push(H)}D=i;o={};H=0;for(u=D.length;H<u;H++){I=D[H],o[I]=C.getAttribLocation(m,I)}this.attributes=o;this.id=b++;this.code=F;this.usedTimes=1;this.program=m;this.vertexShader=A;this.fragmentShader=B;return this}}();THREE.WebGLShader=function(){var b=function(d){d=d.split("\n");for(var e=0;e<d.length;e++){d[e]=e+1+": "+d[e]}return d.join("\n")};return function(a,f,e){f=a.createShader(f);a.shaderSource(f,e);a.compileShader(f);!1===a.getShaderParameter(f,a.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==a.getShaderInfoLog(f)&&(console.error("THREE.WebGLShader:","gl.getShaderInfoLog()",a.getShaderInfoLog(f)),console.error(b(e)));return f}}();THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(b){this.positionWorld.copy(b.positionWorld);this.positionScreen.copy(b.positionScreen)};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(f,e,h){console.warn("DEPRECATED: GeometryUtils's .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var g;e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),g=e.matrix,e=e.geometry);f.merge(e,g,h)},randomPointInTriangle:function(){var b=new THREE.Vector3;return function(a,n,m){var l=new THREE.Vector3,k=THREE.Math.random16(),j=THREE.Math.random16();1<k+j&&(k=1-k,j=1-j);var i=1-k-j;l.copy(a);l.multiplyScalar(k);b.copy(n);b.multiplyScalar(j);l.add(b);b.copy(m);b.multiplyScalar(i);l.add(b);return l}}(),randomPointInFace:function(e,d,f){return THREE.GeometryUtils.randomPointInTriangle(d.vertices[e.a],d.vertices[e.b],d.vertices[e.c])},randomPointsInGeometry:function(D,C){function B(d){function c(f,b){if(b<f){return f}var a=f+Math.floor((b-f)/2);return o[a]>d?c(f,a-1):o[a]<d?c(a+1,b):a}return c(0,o.length-1)}var A,v,u=D.faces,t=D.vertices,s=u.length,r=0,o=[],m,i,j;for(v=0;v<s;v++){A=u[v],m=t[A.a],i=t[A.b],j=t[A.c],A._area=THREE.GeometryUtils.triangleArea(m,i,j),r+=A._area,o[v]=r}A=[];for(v=0;v<C;v++){t=THREE.Math.random16()*r,t=B(t),A[v]=THREE.GeometryUtils.randomPointInFace(u[t],D,!0)}return A},triangleArea:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b,a){d.subVectors(b,f);c.subVectors(a,f);d.cross(c);return 0.5*d.length()}}(),center:function(e){e.computeBoundingBox();var d=e.boundingBox,f=new THREE.Vector3;f.addVectors(d.min,d.max);f.multiplyScalar(-0.5);e.applyMatrix((new THREE.Matrix4).makeTranslation(f.x,f.y,f.z));e.computeBoundingBox();return f}};THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(h,g,l,k){var j=new THREE.ImageLoader;j.crossOrigin=this.crossOrigin;var i=new THREE.Texture(void 0,g);g=j.load(h,function(){i.needsUpdate=!0;l&&l(i)},void 0,function(b){k&&k(b)});i.image=g;i.sourceFile=h;return i},loadCompressedTexture:function(h,g,l,k){var j=new THREE.CompressedTexture;j.mapping=g;var i=new XMLHttpRequest;i.onload=function(){var b=THREE.ImageUtils.parseDDS(i.response,!0);j.format=b.format;j.mipmaps=b.mipmaps;j.image.width=b.width;j.image.height=b.height;j.generateMipmaps=!1;j.needsUpdate=!0;l&&l(j)};i.onerror=k;i.open("GET",h,!0);i.responseType="arraybuffer";i.send(null);return j},loadTextureCube:function(j,i,p,o){var n=[];n.loadCount=0;o=new THREE.ImageLoader;o.crossOrigin=this.crossOrigin;var m=new THREE.Texture;m.image=n;void 0!==i&&(m.mapping=i);m.flipY=!1;i=0;for(var l=j.length;i<l;++i){var k=o.load(j[i],function(){n.loadCount+=1;6===n.loadCount&&(m.needsUpdate=!0,p&&p(m))});n[i]=k}return m},loadCompressedTextureCube:function(t,s,r,q){var p=[];p.loadCount=0;var o=new THREE.CompressedTexture;o.image=p;void 0!==s&&(o.mapping=s);o.flipY=!1;o.generateMipmaps=!1;s=function(d,c){return function(){var a=THREE.ImageUtils.parseDDS(d.response,!0);c.format=a.format;c.mipmaps=a.mipmaps;c.width=a.width;c.height=a.height;p.loadCount+=1;6===p.loadCount&&(o.format=a.format,o.needsUpdate=!0,r&&r(o))}};if(t instanceof Array){for(var n=0,m=t.length;n<m;++n){var j={};p[n]=j;var i=new XMLHttpRequest;i.onload=s(i,j);i.onerror=q;j=t[n];i.open("GET",j,!0);i.responseType="arraybuffer";i.send(null)}}else{i=new XMLHttpRequest,i.onload=function(){var e=THREE.ImageUtils.parseDDS(i.response,!0);if(e.isCubemap){for(var c=e.mipmaps.length/e.mipmapCount,h=0;h<c;h++){p[h]={mipmaps:[]};for(var f=0;f<e.mipmapCount;f++){p[h].mipmaps.push(e.mipmaps[h*e.mipmapCount+f]),p[h].format=e.format,p[h].width=e.width,p[h].height=e.height}}o.format=e.format;o.needsUpdate=!0;r&&r(o)}},i.onerror=q,i.open("GET",t,!0),i.responseType="arraybuffer",i.send(null)}return o},loadDDSTexture:function(i,h,n,m){var l=[];l.loadCount=0;var k=new THREE.CompressedTexture;k.image=l;void 0!==h&&(k.mapping=h);k.flipY=!1;k.generateMipmaps=!1;var j=new XMLHttpRequest;j.onload=function(){var e=THREE.ImageUtils.parseDDS(j.response,!0);if(e.isCubemap){for(var c=e.mipmaps.length/e.mipmapCount,f=0;f<c;f++){l[f]={mipmaps:[]};for(var g=0;g<e.mipmapCount;g++){l[f].mipmaps.push(e.mipmaps[f*e.mipmapCount+g]),l[f].format=e.format,l[f].width=e.width,l[f].height=e.height}}}else{k.image.width=e.width,k.image.height=e.height,k.mipmaps=e.mipmaps}k.format=e.format;k.needsUpdate=!0;n&&n(k)};j.onerror=m;j.open("GET",i,!0);j.responseType="arraybuffer";j.send(null);return k},parseDDS:function(F,E){function D(b){return b.charCodeAt(0)+(b.charCodeAt(1)<<8)+(b.charCodeAt(2)<<16)+(b.charCodeAt(3)<<24)}function C(Q,P,O,N){var M=O*N*4;Q=new Uint8Array(Q,P,M);for(var M=new Uint8Array(M),L=P=0,K=0;K<N;K++){for(var J=0;J<O;J++){var I=Q[L];L++;var t=Q[L];L++;var q=Q[L];L++;var s=Q[L];L++;M[P]=q;P++;M[P]=t;P++;M[P]=I;P++;M[P]=s;P++}}return M}var B={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},A=D("DXT1"),v=D("DXT3"),u=D("DXT5"),r=new Int32Array(F,0,31);if(542327876!==r[0]){return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),B}if(!r[20]&4){return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),B}var o=r[21],m=!1;switch(o){case A:A=8;B.format=THREE.RGB_S3TC_DXT1_Format;break;case v:A=16;B.format=THREE.RGBA_S3TC_DXT3_Format;break;case u:A=16;B.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(32==r[22]&&r[23]&16711680&&r[24]&65280&&r[25]&255&&r[26]&4278190080){m=!0,A=64,B.format=THREE.RGBAFormat}else{return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(o&255,o>>8&255,o>>16&255,o>>24&255)),B}}B.mipmapCount=1;r[2]&131072&&!1!==E&&(B.mipmapCount=Math.max(1,r[7]));B.isCubemap=r[28]&512?!0:!1;B.width=r[4];B.height=r[3];for(var r=r[1]+4,v=B.width,u=B.height,o=B.isCubemap?6:1,i=0;i<o;i++){for(var j=0;j<B.mipmapCount;j++){if(m){var H=C(F,r,v,u),G=H.length}else{G=Math.max(4,v)/4*Math.max(4,u)/4*A,H=new Uint8Array(F,r,G)}B.mipmaps.push({data:H,width:v,height:u});r+=G;v=Math.max(0.5*v,1);u=Math.max(0.5*u,1)}v=B.width;u=B.height}return B},getNormalMap:function(O,N){var M=function(d){var c=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);return[d[0]/c,d[1]/c,d[2]/c]};N|=1;var L=O.width,K=O.height,J=document.createElement("canvas");J.width=L;J.height=K;var I=J.getContext("2d");I.drawImage(O,0,0);for(var H=I.getImageData(0,0,L,K).data,G=I.createImageData(L,K),F=G.data,E=0;E<L;E++){for(var C=0;C<K;C++){var D=0>C-1?0:C-1,A=C+1>K-1?K-1:C+1,o=0>E-1?0:E-1,B=E+1>L-1?L-1:E+1,j=[],i=[0,0,H[4*(C*L+E)]/255*N];j.push([-1,0,H[4*(C*L+o)]/255*N]);j.push([-1,-1,H[4*(D*L+o)]/255*N]);j.push([0,-1,H[4*(D*L+E)]/255*N]);j.push([1,-1,H[4*(D*L+B)]/255*N]);j.push([1,0,H[4*(C*L+B)]/255*N]);j.push([1,1,H[4*(A*L+B)]/255*N]);j.push([0,1,H[4*(A*L+E)]/255*N]);j.push([-1,1,H[4*(A*L+o)]/255*N]);D=[];o=j.length;for(A=0;A<o;A++){var B=j[A],m=j[(A+1)%o],B=[B[0]-i[0],B[1]-i[1],B[2]-i[2]],m=[m[0]-i[0],m[1]-i[1],m[2]-i[2]];D.push(M([B[1]*m[2]-B[2]*m[1],B[2]*m[0]-B[0]*m[2],B[0]*m[1]-B[1]*m[0]]))}j=[0,0,0];for(A=0;A<D.length;A++){j[0]+=D[A][0],j[1]+=D[A][1],j[2]+=D[A][2]}j[0]/=D.length;j[1]/=D.length;j[2]/=D.length;i=4*(C*L+E);F[i]=(j[0]+1)/2*255|0;F[i+1]=(j[1]+1)/2*255|0;F[i+2]=255*j[2]|0;F[i+3]=255}}I.putImageData(G,0,0);return J},generateDataTexture:function(j,i,p){var o=j*i,n=new Uint8Array(3*o),m=Math.floor(255*p.r),l=Math.floor(255*p.g);p=Math.floor(255*p.b);for(var k=0;k<o;k++){n[3*k]=m,n[3*k+1]=l,n[3*k+2]=p}j=new THREE.DataTexture(n,j,i,THREE.RGBFormat);j.needsUpdate=!0;return j}};THREE.SceneUtils={createMultiMaterialObject:function(g,f){for(var j=new THREE.Object3D,i=0,h=f.length;i<h;i++){j.add(new THREE.Mesh(g,f[i]))}return j},detach:function(e,d,f){e.applyMatrix(d.matrixWorld);d.remove(e);f.add(e)},attach:function(f,e,h){var g=new THREE.Matrix4;g.getInverse(h.matrixWorld);f.applyMatrix(g);e.remove(f);h.add(f)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var c=d.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][d.cssFontWeight]=this.faces[c][d.cssFontWeight]||{};this.faces[c][d.cssFontWeight][d.cssFontStyle]=d;return this.faces[c][d.cssFontWeight][d.cssFontStyle]=d},drawText:function(j){var i=this.getFace(),p=this.size/i.resolution,o=0,n=String(j).split(""),m=n.length,l=[];for(j=0;j<m;j++){var k=new THREE.Path,k=this.extractGlyphPoints(n[j],i,p,o,k),o=o+k.offset;l.push(k.path)}return{paths:l,offset:o/2}},extractGlyphPoints:function(O,N,M,L,K){var J=[],I,H,G,F,E,C,D,A,o,B,j,i=N.glyphs[O]||N.glyphs["?"];if(i){if(i.o){for(N=i._cachedOutline||(i._cachedOutline=i.o.split(" ")),F=N.length,O=0;O<F;){switch(G=N[O++],G){case"m":G=N[O++]*M+L;E=N[O++]*M;K.moveTo(G,E);break;case"l":G=N[O++]*M+L;E=N[O++]*M;K.lineTo(G,E);break;case"q":G=N[O++]*M+L;E=N[O++]*M;A=N[O++]*M+L;o=N[O++]*M;K.quadraticCurveTo(A,o,G,E);if(I=J[J.length-1]){for(C=I.x,D=I.y,I=1,H=this.divisions;I<=H;I++){var m=I/H;THREE.Shape.Utils.b2(m,C,A,G);THREE.Shape.Utils.b2(m,D,o,E)}}break;case"b":if(G=N[O++]*M+L,E=N[O++]*M,A=N[O++]*M+L,o=N[O++]*-M,B=N[O++]*M+L,j=N[O++]*-M,K.bezierCurveTo(G,E,A,o,B,j),I=J[J.length-1]){for(C=I.x,D=I.y,I=1,H=this.divisions;I<=H;I++){m=I/H,THREE.Shape.Utils.b3(m,C,A,B,G),THREE.Shape.Utils.b3(m,D,o,j,E)}}}}}return{offset:i.ha*M,path:K}}}};THREE.FontUtils.generateShapes=function(h,g){g=g||{};var l=void 0!==g.curveSegments?g.curveSegments:4,k=void 0!==g.font?g.font:"helvetiker",j=void 0!==g.weight?g.weight:"normal",i=void 0!==g.style?g.style:"normal";THREE.FontUtils.size=void 0!==g.size?g.size:100;THREE.FontUtils.divisions=l;THREE.FontUtils.face=k;THREE.FontUtils.weight=j;THREE.FontUtils.style=i;l=THREE.FontUtils.drawText(h).paths;k=[];j=0;for(i=l.length;j<i;j++){Array.prototype.push.apply(k,l[j].toShapes())}return k};(function(d){var c=function(i){for(var h=i.length,l=0,k=h-1,j=0;j<h;k=j++){l+=i[k].x*i[j].y-i[j].x*i[k].y}return 0.5*l};d.Triangulate=function(ah,ag){var af=ah.length;if(3>af){return null}var ae=[],ad=[],ac=[],ab,aa,Z;if(0<c(ah)){for(aa=0;aa<af;aa++){ad[aa]=aa}}else{for(aa=0;aa<af;aa++){ad[aa]=af-1-aa}}var W=2*af;for(aa=af-1;2<af;){if(0>=W--){console.log("Warning, unable to triangulate polygon!");break}ab=aa;af<=ab&&(ab=0);aa=ab+1;af<=aa&&(aa=0);Z=aa+1;af<=Z&&(Z=0);var Y;ah:{var S=Y=void 0,Q=void 0,U=void 0,M=void 0,H=void 0,P=void 0,o=void 0,i=void 0,S=ah[ad[ab]].x,Q=ah[ad[ab]].y,U=ah[ad[aa]].x,M=ah[ad[aa]].y,H=ah[ad[Z]].x,P=ah[ad[Z]].y;if(1e-10>(U-S)*(P-Q)-(M-Q)*(H-S)){Y=!1}else{var E=void 0,b=void 0,m=void 0,V=void 0,j=void 0,X=void 0,I=void 0,R=void 0,T=void 0,O=void 0,T=R=I=i=o=void 0,E=H-U,b=P-M,m=S-H,V=Q-P,j=U-S,X=M-Q;for(Y=0;Y<af;Y++){if(o=ah[ad[Y]].x,i=ah[ad[Y]].y,!(o===S&&i===Q||o===U&&i===M||o===H&&i===P)&&(I=o-S,R=i-Q,T=o-U,O=i-M,o-=H,i-=P,T=E*O-b*T,I=j*R-X*I,R=m*i-V*o,-1e-10<=T&&-1e-10<=R&&-1e-10<=I)){Y=!1;break ah}}Y=!0}}if(Y){ae.push([ah[ad[ab]],ah[ad[aa]],ah[ad[Z]]]);ac.push([ad[ab],ad[aa],ad[Z]]);ab=aa;for(Z=aa+1;Z<af;ab++,Z++){ad[ab]=ad[Z]}af--;W=2*af}}return ag?ac:ae};d.Triangulate.area=c;return d})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(b){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(b){b=this.getUtoTmapping(b);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPoint(d/e))}return f};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPointAt(d/e))}return f};THREE.Curve.prototype.getLength=function(){var b=this.getLengths();return b[b.length-1]};THREE.Curve.prototype.getLengths=function(h){h||(h=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==h+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=!1;var g=[],l,k=this.getPoint(0),j,i=0;g.push(0);for(j=1;j<=h;j++){l=this.getPoint(j/h),i+=l.distanceTo(k),g.push(i),k=l}return this.cacheArcLengths=g};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(r,q){var p=this.getLengths(),o=0,n=p.length,m;m=q?q:r*p[n-1];for(var l=0,j=n-1,i;l<=j;){if(o=Math.floor(l+(j-l)/2),i=p[o]-m,0>i){l=o+1}else{if(0<i){j=o-1}else{j=o;break}}}o=j;if(p[o]==m){return o/(n-1)}l=p[o];return p=(o+(m-l)/(p[o+1]-l))/(n-1)};THREE.Curve.prototype.getTangent=function(d){var c=d-0.0001;d+=0.0001;0>c&&(c=0);1<d&&(d=1);c=this.getPoint(c);return this.getPoint(d).clone().sub(c).normalize()};THREE.Curve.prototype.getTangentAt=function(b){b=this.getUtoTmapping(b);return this.getTangent(b)};THREE.Curve.Utils={tangentQuadraticBezier:function(f,e,h,g){return 2*(1-f)*(h-e)+2*f*(g-h)},tangentCubicBezier:function(g,f,j,i,h){return -3*f*(1-g)*(1-g)+3*j*(1-g)*(1-g)-6*g*j*(1-g)+6*g*i*(1-g)-3*g*g*i+3*g*g*h},tangentSpline:function(g,f,j,i,h){return 6*g*g-6*g+(3*g*g-4*g+1)+(-6*g*g+6*g)+(3*g*g-2*g)},interpolate:function(h,g,l,k,j){h=0.5*(l-h);k=0.5*(k-g);var i=j*j;return(2*g-2*l+h+k)*j*i+(-3*g+3*l-2*h-k)*i+h*j+g}};THREE.Curve.create=function(d,c){d.prototype=Object.create(THREE.Curve.prototype);d.prototype.getPoint=c;return d};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(b){this.curves.push(b)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var d=this.curves[0].getPoint(0),c=this.curves[this.curves.length-1].getPoint(1);d.equals(c)||this.curves.push(new THREE.LineCurve(c,d))};THREE.CurvePath.prototype.getPoint=function(e){var d=e*this.getLength(),f=this.getCurveLengths();for(e=0;e<f.length;){if(f[e]>=d){return d=f[e]-d,e=this.curves[e],d=1-d/e.getLength(),e.getPointAt(d)}e++}return null};THREE.CurvePath.prototype.getLength=function(){var b=this.getCurveLengths();return b[b.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var f=[],e=0,h,g=this.curves.length;for(h=0;h<g;h++){e+=this.curves[h].getLength(),f.push(e)}return this.cacheLengths=f};THREE.CurvePath.prototype.getBoundingBox=function(){var B=this.getPoints(),A,v,u,t,s,r;A=v=Number.NEGATIVE_INFINITY;t=s=Number.POSITIVE_INFINITY;var p,o,m,j,i=B[0] instanceof THREE.Vector3;j=i?new THREE.Vector3:new THREE.Vector2;o=0;for(m=B.length;o<m;o++){p=B[o],p.x>A?A=p.x:p.x<t&&(t=p.x),p.y>v?v=p.y:p.y<s&&(s=p.y),i&&(p.z>u?u=p.z:p.z<r&&(r=p.z)),j.add(p)}B={minX:t,minY:s,maxX:A,maxY:v};i&&(B.maxZ=u,B.minZ=r);return B};THREE.CurvePath.prototype.createPointsGeometry=function(b){b=this.getPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(b){b=this.getSpacedPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(e){for(var d=new THREE.Geometry,f=0;f<e.length;f++){d.vertices.push(new THREE.Vector3(e[f].x,e[f].y,e[f].z||0))}return d};THREE.CurvePath.prototype.addWrapPath=function(b){this.bends.push(b)};THREE.CurvePath.prototype.getTransformedPoints=function(g,f){var j=this.getPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(g,f){var j=this.getSpacedPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getWrapPoints=function(r,q){var p=this.getBoundingBox(),o,n,m,l,j,i;o=0;for(n=r.length;o<n;o++){m=r[o],l=m.x,j=m.y,i=l/p.maxX,i=q.getUtoTmapping(i,l),l=q.getPoint(i),i=q.getTangent(i),i.set(-i.y,i.x).multiplyScalar(j),m.x=l.x+i.x,m.y=l.y+i.y}return r};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(b){THREE.CurvePath.call(this);this.actions=[];b&&this.fromPoints(b)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var d=1,f=e.length;d<f;d++){this.lineTo(e[d].x,e[d].y)}};THREE.Path.prototype.moveTo=function(e,d){var f=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:f})};THREE.Path.prototype.lineTo=function(f,e){var h=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.LineCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(f,e));this.curves.push(g);this.actions.push({action:THREE.PathActions.LINE_TO,args:h})};THREE.Path.prototype.quadraticCurveTo=function(h,g,l,k){var j=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.QuadraticBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(h,g),new THREE.Vector2(l,k));this.curves.push(i);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:j})};THREE.Path.prototype.bezierCurveTo=function(j,i,p,o,n,m){var l=Array.prototype.slice.call(arguments),k=this.actions[this.actions.length-1].args,k=new THREE.CubicBezierCurve(new THREE.Vector2(k[k.length-2],k[k.length-1]),new THREE.Vector2(j,i),new THREE.Vector2(p,o),new THREE.Vector2(n,m));this.curves.push(k);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:l})};THREE.Path.prototype.splineThru=function(e){var d=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=[new THREE.Vector2(f[f.length-2],f[f.length-1])];Array.prototype.push.apply(f,e);f=new THREE.SplineCurve(f);this.curves.push(f);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:d})};THREE.Path.prototype.arc=function(i,h,n,m,l,k){var j=this.actions[this.actions.length-1].args;this.absarc(i+j[j.length-2],h+j[j.length-1],n,m,l,k)};THREE.Path.prototype.absarc=function(h,g,l,k,j,i){this.absellipse(h,g,l,l,k,j,i)};THREE.Path.prototype.ellipse=function(j,i,p,o,n,m,l){var k=this.actions[this.actions.length-1].args;this.absellipse(j+k[k.length-2],i+k[k.length-1],p,o,n,m,l)};THREE.Path.prototype.absellipse=function(r,q,p,o,n,m,l){var j=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(r,q,p,o,n,m,l);this.curves.push(i);i=i.getPoint(1);j.push(i.x);j.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:j})};THREE.Path.prototype.getSpacedPoints=function(f,e){f||(f=40);for(var h=[],g=0;g<f;g++){h.push(this.getPoint(g/f))}return h};THREE.Path.prototype.getPoints=function(H,G){if(this.useSpacedPoints){return console.log("tata"),this.getSpacedPoints(H,G)}H=H||12;var F=[],E,D,C,B,A,v,u,o,j,m,J,I,i;E=0;for(D=this.actions.length;E<D;E++){switch(C=this.actions[E],B=C.action,C=C.args,B){case THREE.PathActions.MOVE_TO:F.push(new THREE.Vector2(C[0],C[1]));break;case THREE.PathActions.LINE_TO:F.push(new THREE.Vector2(C[0],C[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:A=C[2];v=C[3];j=C[0];m=C[1];0<F.length?(B=F[F.length-1],J=B.x,I=B.y):(B=this.actions[E-1].args,J=B[B.length-2],I=B[B.length-1]);for(C=1;C<=H;C++){i=C/H,B=THREE.Shape.Utils.b2(i,J,j,A),i=THREE.Shape.Utils.b2(i,I,m,v),F.push(new THREE.Vector2(B,i))}break;case THREE.PathActions.BEZIER_CURVE_TO:A=C[4];v=C[5];j=C[0];m=C[1];u=C[2];o=C[3];0<F.length?(B=F[F.length-1],J=B.x,I=B.y):(B=this.actions[E-1].args,J=B[B.length-2],I=B[B.length-1]);for(C=1;C<=H;C++){i=C/H,B=THREE.Shape.Utils.b3(i,J,j,u,A),i=THREE.Shape.Utils.b3(i,I,m,o,v),F.push(new THREE.Vector2(B,i))}break;case THREE.PathActions.CSPLINE_THRU:B=this.actions[E-1].args;i=[new THREE.Vector2(B[B.length-2],B[B.length-1])];B=H*C[0].length;i=i.concat(C[0]);i=new THREE.SplineCurve(i);for(C=1;C<=B;C++){F.push(i.getPointAt(C/B))}break;case THREE.PathActions.ARC:A=C[0];v=C[1];m=C[2];u=C[3];B=C[4];j=!!C[5];J=B-u;I=2*H;for(C=1;C<=I;C++){i=C/I,j||(i=1-i),i=u+i*J,B=A+m*Math.cos(i),i=v+m*Math.sin(i),F.push(new THREE.Vector2(B,i))}break;case THREE.PathActions.ELLIPSE:for(A=C[0],v=C[1],m=C[2],o=C[3],u=C[4],B=C[5],j=!!C[6],J=B-u,I=2*H,C=1;C<=I;C++){i=C/I,j||(i=1-i),i=u+i*J,B=A+m*Math.cos(i),i=v+o*Math.sin(i),F.push(new THREE.Vector2(B,i))}}}E=F[F.length-1];1e-10>Math.abs(E.x-F[0].x)&&1e-10>Math.abs(E.y-F[0].y)&&F.splice(F.length-1,1);G&&F.push(F[0]);return F};THREE.Path.prototype.toShapes=function(I,H){function G(h){for(var g=[],p=0,n=h.length;p<n;p++){var l=h[p],k=new THREE.Shape;k.actions=l.actions;k.curves=l.curves;g.push(k)}return g}function F(O,N){for(var M=N.length,v=!1,t=M-1,s=0;s<M;t=s++){var r=N[t],q=N[s],p=q.x-r.x,n=q.y-r.y;if(1e-10<Math.abs(n)){if(0>n&&(r=N[s],p=-p,q=N[t],n=-n),!(O.y<r.y||O.y>q.y)){if(O.y==r.y){if(O.x==r.x){return !0}}else{t=n*(O.x-r.x)-p*(O.y-r.y);if(0==t){return !0}0>t||(v=!v)}}}else{if(O.y==r.y&&(q.x<=O.x&&O.x<=r.x||r.x<=O.x&&O.x<=q.x)){return !0}}}return v}var E=function(k){var h,r,q,p,n=[],l=new THREE.Path;h=0;for(r=k.length;h<r;h++){q=k[h],p=q.args,q=q.action,q==THREE.PathActions.MOVE_TO&&0!=l.actions.length&&(n.push(l),l=new THREE.Path),l[q].apply(l,p)}0!=l.actions.length&&n.push(l);return n}(this.actions);if(0==E.length){return[]}if(!0===H){return G(E)}var D,C,B,A=[];if(1==E.length){return C=E[0],B=new THREE.Shape,B.actions=C.actions,B.curves=C.curves,A.push(B),A}var u=!THREE.Shape.Utils.isClockWise(E[0].getPoints()),u=I?!u:u;B=[];var o=[],j=[],m=0,L;o[m]=void 0;j[m]=[];var K,i;K=0;for(i=E.length;K<i;K++){C=E[K],L=C.getPoints(),D=THREE.Shape.Utils.isClockWise(L),(D=I?!D:D)?(!u&&o[m]&&m++,o[m]={s:new THREE.Shape,p:L},o[m].s.actions=C.actions,o[m].s.curves=C.curves,u&&m++,j[m]=[]):j[m].push({h:C,p:L[0]})}if(!o[0]){return G(E)}if(1<o.length){K=!1;i=[];C=0;for(E=o.length;C<E;C++){B[C]=[]}C=0;for(E=o.length;C<E;C++){for(D=j[C],u=0;u<D.length;u++){m=D[u];L=!0;for(var J=0;J<o.length;J++){F(m.p,o[J].p)&&(C!=J&&i.push({froms:C,tos:J,hole:u}),L?(L=!1,B[J].push(m)):K=!0)}L&&B[C].push(m)}}0<i.length&&(K||(j=B))}K=0;for(i=o.length;K<i;K++){for(B=o[K].s,A.push(B),C=j[K],E=0,D=C.length;E<D;E++){B.holes.push(C[E].h)}}return A};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(b){return new THREE.ExtrudeGeometry(this,b)};THREE.Shape.prototype.makeGeometry=function(b){return new THREE.ShapeGeometry(this,b)};THREE.Shape.prototype.getPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedPoints(f,this.bends)}return g};THREE.Shape.prototype.getSpacedPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedSpacedPoints(f,this.bends)}return g};THREE.Shape.prototype.extractAllPoints=function(b){return{shape:this.getTransformedPoints(b),holes:this.getPointsHoles(b)}};THREE.Shape.prototype.extractPoints=function(b){return this.useSpacedPoints?this.extractAllSpacedPoints(b):this.extractAllPoints(b)};THREE.Shape.prototype.extractAllSpacedPoints=function(b){return{shape:this.getTransformedSpacedPoints(b),holes:this.getSpacedPointsHoles(b)}};THREE.Shape.Utils={triangulateShape:function(B,A){function v(e,d,f){return e.x!=d.x?e.x<d.x?e.x<=f.x&&f.x<=d.x:d.x<=f.x&&f.x<=e.x:e.y<d.y?e.y<=f.y&&f.y<=d.y:d.y<=f.y&&f.y<=e.y}function u(O,M,L,K,I){var H=M.x-O.x,G=M.y-O.y,F=K.x-L.x,E=K.y-L.y,D=O.x-L.x,c=O.y-L.y,N=G*F-H*E,C=G*D-H*c;if(1e-10<Math.abs(N)){if(0<N){if(0>C||C>N){return[]}F=E*D-F*c;if(0>F||F>N){return[]}}else{if(0<C||C<N){return[]}F=E*D-F*c;if(0<F||F<N){return[]}}if(0==F){return !I||0!=C&&C!=N?[O]:[]}if(F==N){return !I||0!=C&&C!=N?[M]:[]}if(0==C){return[L]}if(C==N){return[K]}I=F/N;return[{x:O.x+I*H,y:O.y+I*G}]}if(0!=C||E*D!=F*c){return[]}G=0==H&&0==G;F=0==F&&0==E;if(G&&F){return O.x!=L.x||O.y!=L.y?[]:[O]}if(G){return v(L,K,O)?[O]:[]}if(F){return v(O,M,L)?[L]:[]}0!=H?(O.x<M.x?(H=O,F=O.x,G=M,O=M.x):(H=M,F=M.x,G=O,O=O.x),L.x<K.x?(M=L,N=L.x,E=K,L=K.x):(M=K,N=K.x,E=L,L=L.x)):(O.y<M.y?(H=O,F=O.y,G=M,O=M.y):(H=M,F=M.y,G=O,O=O.y),L.y<K.y?(M=L,N=L.y,E=K,L=K.y):(M=K,N=K.y,E=L,L=L.y));return F<=N?O<N?[]:O==N?I?[]:[M]:O<=L?[M,G]:[M,E]:F>L?[]:F==L?I?[]:[H]:O<=L?[H,G]:[H,E]}function t(k,h,D,C){var q=h.x-k.x,n=h.y-k.y;h=D.x-k.x;D=D.y-k.y;var l=C.x-k.x;C=C.y-k.y;k=q*D-n*h;q=q*C-n*l;return 1e-10<Math.abs(k)?(h=l*D-C*h,0<k?0<=q&&0<=h:0<=q||0<=h):0<q}var s,r,p,o,m,j={};p=B.concat();s=0;for(r=A.length;s<r;s++){Array.prototype.push.apply(p,A[s])}s=0;for(r=p.length;s<r;s++){m=p[s].x+":"+p[s].y,void 0!==j[m]&&console.log("Duplicate point",m),j[m]=s}s=function(Z,Y){function X(h,c){var n=U.length-1,l=h-1;0>l&&(l=n);var k=h+1;k>n&&(k=0);n=t(U[h],U[l],U[k],T[c]);if(!n){return !1}n=T.length-1;l=c-1;0>l&&(l=n);k=c+1;k>n&&(k=0);return(n=t(T[c],T[l],T[k],U[h]))?!0:!1}function W(g,f){var k,h;for(k=0;k<U.length;k++){if(h=k+1,h%=U.length,h=u(g,f,U[k],U[h],!0),0<h.length){return !0}}return !1}function V(b,C){var q,n,l,g;for(q=0;q<S.length;q++){for(n=Y[S[q]],l=0;l<n.length;l++){if(g=l+1,g%=n.length,g=u(b,C,n[l],n[g],!0),0<g.length){return !0}}}return !1}var U=Z.concat(),T,S=[],R,P,d,E,O,e=[],Q,H,L,M=0;for(R=Y.length;M<R;M++){S.push(M)}Q=0;for(var I=2*S.length;0<S.length;){I--;if(0>I){console.log("Infinite Loop! Holes left:"+S.length+", Probably Hole outside Shape!");break}for(P=Q;P<U.length;P++){d=U[P];R=-1;for(M=0;M<S.length;M++){if(E=S[M],O=d.x+":"+d.y+":"+E,void 0===e[O]){T=Y[E];for(H=0;H<T.length;H++){if(E=T[H],X(P,H)&&!W(d,E)&&!V(d,E)){R=H;S.splice(M,1);Q=U.slice(0,P+1);E=U.slice(P);H=T.slice(R);L=T.slice(0,R+1);U=Q.concat(H).concat(L).concat(E);Q=P;break}}if(0<=R){break}e[O]=!0}}if(0<=R){break}}}return U}(B,A);var i=THREE.FontUtils.Triangulate(s,!1);s=0;for(r=i.length;s<r;s++){for(o=i[s],p=0;3>p;p++){m=o[p].x+":"+o[p].y,m=j[m],void 0!==m&&(o[p]=m)}}return i.concat()},isClockWise:function(b){return 0>THREE.FontUtils.Triangulate.area(b)},b2p0:function(e,d){var f=1-e;return f*f*d},b2p1:function(d,c){return 2*(1-d)*d*c},b2p2:function(d,c){return d*d*c},b2:function(f,e,h,g){return this.b2p0(f,e)+this.b2p1(f,h)+this.b2p2(f,g)},b3p0:function(e,d){var f=1-e;return f*f*f*d},b3p1:function(e,d){var f=1-e;return 3*f*f*e*d},b3p2:function(d,c){return 3*(1-d)*d*d*c},b3p3:function(d,c){return d*d*d*c},b3:function(g,f,j,i,h){return this.b3p0(g,f)+this.b3p1(g,j)+this.b3p2(g,i)+this.b3p3(g,h)}};THREE.LineCurve=function(d,c){this.v1=d;this.v2=c};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(d){var c=this.v2.clone().sub(this.v1);c.multiplyScalar(d).add(this.v1);return c};THREE.LineCurve.prototype.getPointAt=function(b){return this.getPoint(b)};THREE.LineCurve.prototype.getTangent=function(b){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,d,f){this.v0=e;this.v1=d;this.v2=f};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(c,d)};THREE.QuadraticBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.y,this.v1.y,this.v2.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.CubicBezierCurve=function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(c,d)};THREE.CubicBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.SplineCurve=function(b){this.points=void 0==b?[]:b};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(g){var f=new THREE.Vector2,j=[],i=this.points,h;h=(i.length-1)*g;g=Math.floor(h);h-=g;j[0]=0==g?g:g-1;j[1]=g;j[2]=g>i.length-2?i.length-1:g+1;j[3]=g>i.length-3?i.length-1:g+2;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);return f};THREE.EllipseCurve=function(i,h,n,m,l,k,j){this.aX=i;this.aY=h;this.xRadius=n;this.yRadius=m;this.aStartAngle=l;this.aEndAngle=k;this.aClockwise=j};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(d){var c;c=this.aEndAngle-this.aStartAngle;0>c&&(c+=2*Math.PI);c>2*Math.PI&&(c-=2*Math.PI);c=!0===this.aClockwise?this.aEndAngle+(1-d)*(2*Math.PI-c):this.aStartAngle+d*c;d=this.aX+this.xRadius*Math.cos(c);c=this.aY+this.yRadius*Math.sin(c);return new THREE.Vector2(d,c)};THREE.ArcCurve=function(h,g,l,k,j,i){THREE.EllipseCurve.call(this,h,g,l,l,k,j,i)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(d,c){this.v1=d;this.v2=c},function(d){var c=new THREE.Vector3;c.subVectors(this.v2,this.v1);c.multiplyScalar(d);c.add(this.v1);return c});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,d,f){this.v0=e;this.v1=d;this.v2=f},function(e){var d,f;d=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);f=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(d,f,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g},function(e){var d,f;d=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);f=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(d,f,e)});THREE.SplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(i){var h=new THREE.Vector3,n=[],m=this.points,l;i*=m.length-1;l=Math.floor(i);i-=l;n[0]=0==l?l:l-1;n[1]=l;n[2]=l>m.length-2?m.length-1:l+1;n[3]=l>m.length-3?m.length-1:l+2;l=m[n[0]];var k=m[n[1]],j=m[n[2]],n=m[n[3]];h.x=THREE.Curve.Utils.interpolate(l.x,k.x,j.x,n.x,i);h.y=THREE.Curve.Utils.interpolate(l.y,k.y,j.y,n.y,i);h.z=THREE.Curve.Utils.interpolate(l.z,k.z,j.z,n.z,i);return h});THREE.ClosedSplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(g){var f=new THREE.Vector3,j=[],i=this.points,h;h=(i.length-0)*g;g=Math.floor(h);h-=g;g+=0<g?0:(Math.floor(Math.abs(g)/i.length)+1)*i.length;j[0]=(g-1)%i.length;j[1]=g%i.length;j[2]=(g+1)%i.length;j[3]=(g+2)%i.length;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);f.z=THREE.Curve.Utils.interpolate(i[j[0]].z,i[j[1]].z,i[j[2]].z,i[j[3]].z,h);return f});THREE.AnimationHandler=function(){var f=[],e={},h={update:function(a){for(var d=0;d<f.length;d++){f[d].update(a)}},addToUpdate:function(a){-1===f.indexOf(a)&&f.push(a)},removeFromUpdate:function(a){a=f.indexOf(a);-1!==a&&f.splice(a,1)},add:function(i){void 0!==e[i.name]&&console.log("THREE.AnimationHandler.add: Warning! "+i.name+" already exists in library. Overwriting.");e[i.name]=i;if(!0!==i.initialized){for(var q=0;q<i.hierarchy.length;q++){for(var o=0;o<i.hierarchy[q].keys.length;o++){if(0>i.hierarchy[q].keys[o].time&&(i.hierarchy[q].keys[o].time=0),void 0!==i.hierarchy[q].keys[o].rot&&!(i.hierarchy[q].keys[o].rot instanceof THREE.Quaternion)){var m=i.hierarchy[q].keys[o].rot;i.hierarchy[q].keys[o].rot=(new THREE.Quaternion).fromArray(m)}}if(i.hierarchy[q].keys.length&&void 0!==i.hierarchy[q].keys[0].morphTargets){m={};for(o=0;o<i.hierarchy[q].keys.length;o++){for(var j=0;j<i.hierarchy[q].keys[o].morphTargets.length;j++){var b=i.hierarchy[q].keys[o].morphTargets[j];m[b]=-1}}i.hierarchy[q].usedMorphTargets=m;for(o=0;o<i.hierarchy[q].keys.length;o++){var p={};for(b in m){for(j=0;j<i.hierarchy[q].keys[o].morphTargets.length;j++){if(i.hierarchy[q].keys[o].morphTargets[j]===b){p[b]=i.hierarchy[q].keys[o].morphTargetsInfluences[j];break}}j===i.hierarchy[q].keys[o].morphTargets.length&&(p[b]=0)}i.hierarchy[q].keys[o].morphTargetsInfluences=p}}for(o=1;o<i.hierarchy[q].keys.length;o++){i.hierarchy[q].keys[o].time===i.hierarchy[q].keys[o-1].time&&(i.hierarchy[q].keys.splice(o,1),o--)}for(o=0;o<i.hierarchy[q].keys.length;o++){i.hierarchy[q].keys[o].index=o}}i.initialized=!0}},remove:function(b){void 0===e[b]&&console.log("THREE.AnimationHandler.add: Warning! "+b+" doesn't exists in library. Doing nothing.");e[b]=void 0},get:function(b){if("string"===typeof b){return e[b]?e[b]:null}},parse:function(i){var d=[];if(i instanceof THREE.SkinnedMesh){for(var j=0;j<i.skeleton.bones.length;j++){d.push(i.skeleton.bones[j])}}else{g(i,d)}return d}},g=function(i,d){d.push(i);for(var j=0;j<i.children.length;j++){g(i.children[j],d)}};h.LINEAR=0;h.CATMULLROM=1;h.CATMULLROM_FORWARD=2;return h}();THREE.Animation=function(d,c){this.root=d;this.data=THREE.AnimationHandler.get(c);this.hierarchy=THREE.AnimationHandler.parse(d);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];THREE.Animation.prototype.play=function(d,c){this.currentTime=void 0!==d?d:0;this.weight=void 0!==c?c:1;this.isPlaying=!0;this.isPaused=!1;this.reset();THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.reset=function(){for(var i=0,h=this.hierarchy.length;i<h;i++){var n=this.hierarchy[i];n.matrixAutoUpdate=!0;void 0===n.animationCache&&(n.animationCache={});void 0===n.animationCache[this.data.name]&&(n.animationCache[this.data.name]={},n.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},n.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},n.animationCache[this.data.name].originalMatrix=n instanceof THREE.Bone?n.skinMatrix:n.matrix);for(var n=n.animationCache[this.data.name],m=0;3>m;m++){for(var l=this.keyTypes[m],k=this.data.hierarchy[i].keys[0],j=this.getNextKeyWith(l,i,1);j.time<this.currentTime&&j.index>k.index;){k=j,j=this.getNextKeyWith(l,i,j.index+1)}n.prevKey[l]=k;n.nextKey[l]=j}}};THREE.Animation.prototype.update=function(){var h=[],g=new THREE.Vector3,l=new THREE.Vector3,k=new THREE.Quaternion,j=function(B,A){var v=[],u=[],o,m,n,D,C,f;o=(B.length-1)*A;m=Math.floor(o);o-=m;v[0]=0===m?m:m-1;v[1]=m;v[2]=m>B.length-2?m:m+1;v[3]=m>B.length-3?m:m+2;m=B[v[0]];D=B[v[1]];C=B[v[2]];f=B[v[3]];v=o*o;n=o*v;u[0]=i(m[0],D[0],C[0],f[0],o,v,n);u[1]=i(m[1],D[1],C[1],f[1],o,v,n);u[2]=i(m[2],D[2],C[2],f[2],o,v,n);return u},i=function(n,m,t,s,r,o,q){n=0.5*(t-n);s=0.5*(s-m);return(2*(m-t)+n+s)*q+(-3*(m-t)-2*n-s)*o+n*r+m};return function(u){if(!1!==this.isPlaying&&(this.currentTime+=u*this.timeScale,0!==this.weight)){var o;u=this.data.length;if(!0===this.loop&&this.currentTime>u){this.currentTime%=u,this.reset()}else{if(!1===this.loop&&this.currentTime>u){this.stop();return}}u=0;for(var m=this.hierarchy.length;u<m;u++){for(var e=this.hierarchy[u],d=e.animationCache[this.data.name],b=0;3>b;b++){o=this.keyTypes[b];var c=d.prevKey[o],C=d.nextKey[o];if(C.time<=this.currentTime){c=this.data.hierarchy[u].keys[0];for(C=this.getNextKeyWith(o,u,1);C.time<this.currentTime&&C.index>c.index;){c=C,C=this.getNextKeyWith(o,u,C.index+1)}d.prevKey[o]=c;d.nextKey[o]=C}e.matrixAutoUpdate=!0;e.matrixWorldNeedsUpdate=!0;var B=(this.currentTime-c.time)/(C.time-c.time),a=c[o],A=C[o];0>B&&(B=0);1<B&&(B=1);if("pos"===o){if(o=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR){l.x=a[0]+(A[0]-a[0])*B,l.y=a[1]+(A[1]-a[1])*B,l.z=a[2]+(A[2]-a[2])*B,e instanceof THREE.Bone&&(c=this.weight/(this.weight+e.accumulatedPosWeight),o.lerp(l,c),e.accumulatedPosWeight+=this.weight)}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){h[0]=this.getPrevKeyWith("pos",u,c.index-1).pos,h[1]=a,h[2]=A,h[3]=this.getNextKeyWith("pos",u,C.index+1).pos,B=0.33*B+0.33,C=j(h,B),e instanceof THREE.Bone?(c=this.weight/(this.weight+e.accumulatedPosWeight),e.accumulatedPosWeight+=this.weight):c=1,o.x+=(C[0]-o.x)*c,o.y+=(C[1]-o.y)*c,o.z+=(C[2]-o.z)*c,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(B=j(h,1.01*B),g.set(B[0],B[1],B[2]),g.sub(o),g.y=0,g.normalize(),o=Math.atan2(g.x,g.z),e.rotation.set(0,o,0))}}}else{"rot"===o?(THREE.Quaternion.slerp(a,A,k,B),e instanceof THREE.Bone?0===e.accumulatedRotWeight?(e.quaternion.copy(k),e.accumulatedRotWeight=this.weight):(c=this.weight/(this.weight+e.accumulatedRotWeight),THREE.Quaternion.slerp(e.quaternion,k,e.quaternion,c),e.accumulatedRotWeight+=this.weight):e.quaternion.copy(k)):"scl"===o&&(o=e.scale,l.x=a[0]+(A[0]-a[0])*B,l.y=a[1]+(A[1]-a[1])*B,l.z=a[2]+(A[2]-a[2])*B,e instanceof THREE.Bone&&(c=this.weight/(this.weight+e.accumulatedSclWeight),o.lerp(l,c),e.accumulatedSclWeight+=this.weight))}}}return !0}}}();THREE.Animation.prototype.getNextKeyWith=function(f,e,h){var g=this.data.hierarchy[e].keys;for(h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?h<g.length-1?h:g.length-1:h%g.length;h<g.length;h++){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(f,e,h){var g=this.data.hierarchy[e].keys;for(h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<h?h:0:0<=h?h:h+g.length;0<=h;h--){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[g.length-1]};THREE.KeyFrameAnimation=function(r,q){this.root=r;this.data=THREE.AnimationHandler.get(q);this.hierarchy=THREE.AnimationHandler.parse(r);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;for(var p=0,o=this.hierarchy.length;p<o;p++){var n=this.data.hierarchy[p].sids,m=this.hierarchy[p];if(this.data.hierarchy[p].keys.length&&n){for(var l=0;l<n.length;l++){var j=n[l],i=this.getNextKeyWith(j,p,0);i&&i.apply(j)}m.matrixAutoUpdate=!1;this.data.hierarchy[p].node.updateMatrix();m.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(f){this.currentTime=void 0!==f?f:0;if(!1===this.isPlaying){this.isPlaying=!0;var e=this.hierarchy.length,h,g;for(f=0;f<e;f++){h=this.hierarchy[f],g=this.data.hierarchy[f],void 0===g.animationCache&&(g.animationCache={},g.animationCache.prevKey=null,g.animationCache.nextKey=null,g.animationCache.originalMatrix=h instanceof THREE.Bone?h.skinMatrix:h.matrix),h=this.data.hierarchy[f].keys,h.length&&(g.animationCache.prevKey=h[0],g.animationCache.nextKey=h[1],this.startTime=Math.min(h[0].time,this.startTime),this.endTime=Math.max(h[h.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var f=0;f<this.data.hierarchy.length;f++){var e=this.hierarchy[f],h=this.data.hierarchy[f];if(void 0!==h.animationCache){var g=h.animationCache.originalMatrix;e instanceof THREE.Bone?(g.copy(e.skinMatrix),e.skinMatrix=g):(g.copy(e.matrix),e.matrix=g);delete h.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(i){if(!1!==this.isPlaying){this.currentTime+=i*this.timeScale;i=this.data.length;!0===this.loop&&this.currentTime>i&&(this.currentTime%=i);this.currentTime=Math.min(this.currentTime,i);i=0;for(var h=this.hierarchy.length;i<h;i++){var n=this.hierarchy[i],m=this.data.hierarchy[i],l=m.keys,m=m.animationCache;if(l.length){var k=m.prevKey,j=m.nextKey;if(j.time<=this.currentTime){for(;j.time<this.currentTime&&j.index>k.index;){k=j,j=l[k.index+1]}m.prevKey=k;m.nextKey=j}j.time>=this.currentTime?k.interpolate(j,this.currentTime):k.interpolate(j,j.time);this.data.hierarchy[i].node.updateMatrix();n.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f%=d.length;f<d.length;f++){if(d[f].hasTarget(e)){return d[f]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f=0<=f?f:f+d.length;0<=f;f--){if(d[f].hasTarget(e)){return d[f]}}return d[d.length-1]};THREE.MorphAnimation=function(b){this.mesh=b;this.frames=b.morphTargetInfluences.length;this.currentTime=0;this.duration=1000;this.loop=!0;this.isPlaying=!1};THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var d=0,c=0;return function(b){if(!1!==this.isPlaying){this.currentTime+=b;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);b=this.duration/this.frames;var a=Math.floor(this.currentTime/b);a!=c&&(this.mesh.morphTargetInfluences[d]=0,this.mesh.morphTargetInfluences[c]=1,this.mesh.morphTargetInfluences[a]=0,d=c,c=a);this.mesh.morphTargetInfluences[a]=this.currentTime%b/b;this.mesh.morphTargetInfluences[d]=1-this.mesh.morphTargetInfluences[a]}}}()};THREE.CubeCamera=function(r,q,p){THREE.Object3D.call(this);var o=new THREE.PerspectiveCamera(90,1,r,q);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(1,0,0));this.add(o);var n=new THREE.PerspectiveCamera(90,1,r,q);n.up.set(0,-1,0);n.lookAt(new THREE.Vector3(-1,0,0));this.add(n);var m=new THREE.PerspectiveCamera(90,1,r,q);m.up.set(0,0,1);m.lookAt(new THREE.Vector3(0,1,0));this.add(m);var l=new THREE.PerspectiveCamera(90,1,r,q);l.up.set(0,0,-1);l.lookAt(new THREE.Vector3(0,-1,0));this.add(l);var j=new THREE.PerspectiveCamera(90,1,r,q);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,1));this.add(j);var i=new THREE.PerspectiveCamera(90,1,r,q);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(p,p,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(e,d){var g=this.renderTarget,f=g.generateMipmaps;g.generateMipmaps=!1;g.activeCubeFace=0;e.render(d,o,g);g.activeCubeFace=1;e.render(d,n,g);g.activeCubeFace=2;e.render(d,m,g);g.activeCubeFace=3;e.render(d,l,g);g.activeCubeFace=4;e.render(d,j,g);g.generateMipmaps=f;g.activeCubeFace=5;e.render(d,i,g)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(i,h,n,m,l,k,j){THREE.Camera.call(this);this.fov=n;this.left=-i/2;this.right=i/2;this.top=h/2;this.bottom=-h/2;this.cameraO=new THREE.OrthographicCamera(i/-2,i/2,h/2,h/-2,k,j);this.cameraP=new THREE.PerspectiveCamera(n,i/h,m,l);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.cameraP.aspect,c=(this.cameraP.near+this.cameraP.far)/2,c=Math.tan(this.fov/2)*c,d=2*c*d/2,c=c/this.zoom,d=d/this.zoom;this.cameraO.left=-d;this.cameraO.right=d;this.cameraO.top=c;this.cameraO.bottom=-c;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(d,c){this.cameraP.aspect=d/c;this.left=-d/2;this.right=d/2;this.top=c/2;this.bottom=-c/2};THREE.CombinedCamera.prototype.setFov=function(b){this.fov=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(e,d){void 0===d&&(d=24);var f=2*THREE.Math.radToDeg(Math.atan(d/(2*e)));this.setFov(f);return f};THREE.CombinedCamera.prototype.setZoom=function(b){this.zoom=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.BoxGeometry=function(j,i,p,o,n,m){function l(W,V,U,T,S,R,Q,M){var H,E=k.widthSegments,I=k.heightSegments,C=S/2,q=R/2,D=k.vertices.length;if("x"===W&&"y"===V||"y"===W&&"x"===V){H="z"}else{if("x"===W&&"z"===V||"z"===W&&"x"===V){H="y",I=k.depthSegments}else{if("z"===W&&"y"===V||"y"===W&&"z"===V){H="x",E=k.depthSegments}}}var h=E+1,t=I+1,O=S/E,s=R/I,P=new THREE.Vector3;P[H]=0<Q?1:-1;for(S=0;S<t;S++){for(R=0;R<h;R++){var F=new THREE.Vector3;F[W]=(R*O-C)*U;F[V]=(S*s-q)*T;F[H]=Q;k.vertices.push(F)}}for(S=0;S<I;S++){for(R=0;R<E;R++){q=R+h*S,W=R+h*(S+1),V=R+1+h*(S+1),U=R+1+h*S,T=new THREE.Vector2(R/E,1-S/I),Q=new THREE.Vector2(R/E,1-(S+1)/I),H=new THREE.Vector2((R+1)/E,1-(S+1)/I),C=new THREE.Vector2((R+1)/E,1-S/I),q=new THREE.Face3(q+D,W+D,U+D),q.normal.copy(P),q.vertexNormals.push(P.clone(),P.clone(),P.clone()),q.materialIndex=M,k.faces.push(q),k.faceVertexUvs[0].push([T,Q,C]),q=new THREE.Face3(W+D,V+D,U+D),q.normal.copy(P),q.vertexNormals.push(P.clone(),P.clone(),P.clone()),q.materialIndex=M,k.faces.push(q),k.faceVertexUvs[0].push([Q.clone(),H,C.clone()])}}}THREE.Geometry.call(this);this.parameters={width:j,height:i,depth:p,widthSegments:o,heightSegments:n,depthSegments:m};this.widthSegments=o||1;this.heightSegments=n||1;this.depthSegments=m||1;var k=this;o=j/2;n=i/2;m=p/2;l("z","y",-1,-1,p,i,o,0);l("z","y",1,-1,p,i,-o,1);l("x","z",1,1,j,p,n,2);l("x","z",1,-1,j,p,-n,3);l("x","y",1,-1,j,i,m,4);l("x","y",-1,-1,j,i,-m,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(r,q,p,o){THREE.Geometry.call(this);this.parameters={radius:r,segments:q,thetaStart:p,thetaLength:o};r=r||50;q=void 0!==q?Math.max(3,q):8;p=void 0!==p?p:0;o=void 0!==o?o:2*Math.PI;var n,m=[];n=new THREE.Vector3;var l=new THREE.Vector2(0.5,0.5);this.vertices.push(n);m.push(l);for(n=0;n<=q;n++){var j=new THREE.Vector3,i=p+n/q*o;j.x=r*Math.cos(i);j.y=r*Math.sin(i);this.vertices.push(j);m.push(new THREE.Vector2((j.x/r+1)/2,(j.y/r+1)/2))}p=new THREE.Vector3(0,0,1);for(n=1;n<=q;n++){this.faces.push(new THREE.Face3(n,n+1,0,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([m[n].clone(),m[n+1].clone(),l.clone()])}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(h,g,l,k,j,i){console.warn("DEPRECATED: THREE.CubeGeometry is deprecated. Use THREE.BoxGeometry instead.");return new THREE.BoxGeometry(h,g,l,k,j,i)};THREE.CylinderGeometry=function(Y,X,W,V,U,T){THREE.Geometry.call(this);this.parameters={radiusTop:Y,radiusBottom:X,height:W,radialSegments:V,heightSegments:U,openEnded:T};Y=void 0!==Y?Y:20;X=void 0!==X?X:20;W=void 0!==W?W:100;V=V||8;U=U||1;T=void 0!==T?T:!1;var S=W/2,R,Q,P=[],O=[];for(Q=0;Q<=U;Q++){var K=[],M=[],G=Q/U,F=G*(X-Y)+Y;for(R=0;R<=V;R++){var H=R/V,D=new THREE.Vector3;D.x=F*Math.sin(H*Math.PI*2);D.y=-G*W+S;D.z=F*Math.cos(H*Math.PI*2);this.vertices.push(D);K.push(this.vertices.length-1);M.push(new THREE.Vector2(H,1-G))}P.push(K);O.push(M)}W=(X-Y)/W;for(R=0;R<V;R++){for(0!==Y?(K=this.vertices[P[0][R]].clone(),M=this.vertices[P[0][R+1]].clone()):(K=this.vertices[P[1][R]].clone(),M=this.vertices[P[1][R+1]].clone()),K.setY(Math.sqrt(K.x*K.x+K.z*K.z)*W).normalize(),M.setY(Math.sqrt(M.x*M.x+M.z*M.z)*W).normalize(),Q=0;Q<U;Q++){var G=P[Q][R],F=P[Q+1][R],H=P[Q+1][R+1],D=P[Q][R+1],C=K.clone(),E=K.clone(),o=M.clone(),j=M.clone(),A=O[Q][R].clone(),i=O[Q+1][R].clone(),m=O[Q+1][R+1].clone(),I=O[Q][R+1].clone();this.faces.push(new THREE.Face3(G,F,D,[C,E,j]));this.faceVertexUvs[0].push([A,i,I]);this.faces.push(new THREE.Face3(F,H,D,[E.clone(),o,j.clone()]));this.faceVertexUvs[0].push([i.clone(),m,I.clone()])}}if(!1===T&&0<Y){for(this.vertices.push(new THREE.Vector3(0,S,0)),R=0;R<V;R++){G=P[0][R],F=P[0][R+1],H=this.vertices.length-1,C=new THREE.Vector3(0,1,0),E=new THREE.Vector3(0,1,0),o=new THREE.Vector3(0,1,0),A=O[0][R].clone(),i=O[0][R+1].clone(),m=new THREE.Vector2(i.x,0),this.faces.push(new THREE.Face3(G,F,H,[C,E,o])),this.faceVertexUvs[0].push([A,i,m])}}if(!1===T&&0<X){for(this.vertices.push(new THREE.Vector3(0,-S,0)),R=0;R<V;R++){G=P[Q][R+1],F=P[Q][R],H=this.vertices.length-1,C=new THREE.Vector3(0,-1,0),E=new THREE.Vector3(0,-1,0),o=new THREE.Vector3(0,-1,0),A=O[Q][R+1].clone(),i=O[Q][R].clone(),m=new THREE.Vector2(i.x,1),this.faces.push(new THREE.Face3(G,F,H,[C,E,o])),this.faceVertexUvs[0].push([A,i,m])}}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(d,c){"undefined"!==typeof d&&(THREE.Geometry.call(this),d=d instanceof Array?d:[d],this.shapebb=d[d.length-1].getBoundingBox(),this.addShapeList(d,c),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(f,e){for(var h=f.length,g=0;g<h;g++){this.addShape(f[g],e)}};THREE.ExtrudeGeometry.prototype.addShape=function(aI,aH){function aG(e,d,f){d||console.log("die");return d.clone().multiplyScalar(f).add(e)}function aF(B,A,v){var u=THREE.Math.sign,t=1,t=B.x-A.x,s=B.y-A.y,r=v.x-B.x,q=v.y-B.y,p=t*t+s*s;if(1e-10<Math.abs(t*q-s*r)){var n=Math.sqrt(p),u=Math.sqrt(r*r+q*q),p=A.x-s/n;A=A.y+t/n;r=((v.x-q/u-p)*q-(v.y+r/u-A)*r)/(t*q-s*r);v=p+t*r-B.x;B=A+s*r-B.y;t=v*v+B*B;if(2>=t){return new THREE.Vector2(v,B)}t=Math.sqrt(t/2)}else{B=!1,1e-10<t?1e-10<r&&(B=!0):-1e-10>t?-1e-10>r&&(B=!0):u(s)==u(q)&&(B=!0),B?(v=-s,B=t,t=Math.sqrt(p)):(v=t,B=s,t=Math.sqrt(p/2))}return new THREE.Vector2(v/t,B/t)}function aE(H,G){var F,E;for(ab=H.length;0<=--ab;){F=ab;E=ab-1;0>E&&(E=H.length-1);for(var D=0,C=au+2*ay,D=0;D<C;D++){var B=an*D,u=an*(D+1),n=G+F+B,B=G+E+B,b=G+E+u,u=G+F+u,a=H,K=D,I=C,J=F,s=E,n=n+ag,B=B+ag,b=b+ag,u=u+ag;ad.faces.push(new THREE.Face3(n,B,u,null,null,ar));ad.faces.push(new THREE.Face3(B,b,u,null,null,ar));n=am.generateSideWallUV(ad,aI,a,aH,n,B,b,u,K,I,J,s);ad.faceVertexUvs[0].push([n[0],n[1],n[3]]);ad.faceVertexUvs[0].push([n[1],n[2],n[3]])}}}function aD(e,d,f){ad.vertices.push(new THREE.Vector3(e,d,f))}function aC(h,g,b,a){h+=ag;g+=ag;b+=ag;ad.faces.push(new THREE.Face3(h,g,b,null,null,ap));h=a?am.generateBottomUV(ad,aI,aH,h,g,b):am.generateTopUV(ad,aI,aH,h,g,b);ad.faceVertexUvs[0].push(h)}var aB=void 0!==aH.amount?aH.amount:100,aA=void 0!==aH.bevelThickness?aH.bevelThickness:6,az=void 0!==aH.bevelSize?aH.bevelSize:aA-2,ay=void 0!==aH.bevelSegments?aH.bevelSegments:3,aw=void 0!==aH.bevelEnabled?aH.bevelEnabled:!0,ax=void 0!==aH.curveSegments?aH.curveSegments:12,au=void 0!==aH.steps?aH.steps:1,at=aH.extrudePath,av,aq=!1,ap=aH.material,ar=aH.extrudeMaterial,am=void 0!==aH.UVGenerator?aH.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,T,ao,S,aa;at&&(av=at.getSpacedPoints(au),aq=!0,aw=!1,T=void 0!==aH.frames?aH.frames:new THREE.TubeGeometry.FrenetFrames(at,au,!1),ao=new THREE.Vector3,S=new THREE.Vector3,aa=new THREE.Vector3);aw||(az=aA=ay=0);var ai,Z,aj,ad=this,ag=this.vertices.length,at=aI.extractPoints(ax),ax=at.shape,ah=at.holes;if(at=!THREE.Shape.Utils.isClockWise(ax)){ax=ax.reverse();Z=0;for(aj=ah.length;Z<aj;Z++){ai=ah[Z],THREE.Shape.Utils.isClockWise(ai)&&(ah[Z]=ai.reverse())}at=!1}var ae=THREE.Shape.Utils.triangulateShape(ax,ah),al=ax;Z=0;for(aj=ah.length;Z<aj;Z++){ai=ah[Z],ax=ax.concat(ai)}var ac,af,P,i,M,an=ax.length,m,O=ae.length,at=[],ab=0;P=al.length;ac=P-1;for(af=ab+1;ab<P;ab++,ac++,af++){ac===P&&(ac=0),af===P&&(af=0),at[ab]=aF(al[ab],al[ac],al[af])}var ak=[],o,j=at.concat();Z=0;for(aj=ah.length;Z<aj;Z++){ai=ah[Z];o=[];ab=0;P=ai.length;ac=P-1;for(af=ab+1;ab<P;ab++,ac++,af++){ac===P&&(ac=0),af===P&&(af=0),o[ab]=aF(ai[ab],ai[ac],ai[af])}ak.push(o);j=j.concat(o)}for(ac=0;ac<ay;ac++){P=ac/ay;i=aA*(1-P);af=az*Math.sin(P*Math.PI/2);ab=0;for(P=al.length;ab<P;ab++){M=aG(al[ab],at[ab],af),aD(M.x,M.y,-i)}Z=0;for(aj=ah.length;Z<aj;Z++){for(ai=ah[Z],o=ak[Z],ab=0,P=ai.length;ab<P;ab++){M=aG(ai[ab],o[ab],af),aD(M.x,M.y,-i)}}}af=az;for(ab=0;ab<an;ab++){M=aw?aG(ax[ab],j[ab],af):ax[ab],aq?(S.copy(T.normals[0]).multiplyScalar(M.x),ao.copy(T.binormals[0]).multiplyScalar(M.y),aa.copy(av[0]).add(S).add(ao),aD(aa.x,aa.y,aa.z)):aD(M.x,M.y,0)}for(P=1;P<=au;P++){for(ab=0;ab<an;ab++){M=aw?aG(ax[ab],j[ab],af):ax[ab],aq?(S.copy(T.normals[P]).multiplyScalar(M.x),ao.copy(T.binormals[P]).multiplyScalar(M.y),aa.copy(av[P]).add(S).add(ao),aD(aa.x,aa.y,aa.z)):aD(M.x,M.y,aB/au*P)}}for(ac=ay-1;0<=ac;ac--){P=ac/ay;i=aA*(1-P);af=az*Math.sin(P*Math.PI/2);ab=0;for(P=al.length;ab<P;ab++){M=aG(al[ab],at[ab],af),aD(M.x,M.y,aB+i)}Z=0;for(aj=ah.length;Z<aj;Z++){for(ai=ah[Z],o=ak[Z],ab=0,P=ai.length;ab<P;ab++){M=aG(ai[ab],o[ab],af),aq?aD(M.x,M.y+av[au-1].y,av[au-1].x+i):aD(M.x,M.y,aB+i)}}}(function(){if(aw){var b;b=0*an;for(ab=0;ab<O;ab++){m=ae[ab],aC(m[2]+b,m[1]+b,m[0]+b,!0)}b=au+2*ay;b*=an;for(ab=0;ab<O;ab++){m=ae[ab],aC(m[0]+b,m[1]+b,m[2]+b,!1)}}else{for(ab=0;ab<O;ab++){m=ae[ab],aC(m[2],m[1],m[0],!0)}for(ab=0;ab<O;ab++){m=ae[ab],aC(m[0]+an*au,m[1]+an*au,m[2]+an*au,!1)}}})();(function(){var b=0;aE(al,b);b+=al.length;Z=0;for(aj=ah.length;Z<aj;Z++){ai=ah[Z],aE(ai,b),b+=ai.length}})()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(h,g,l,k,j,i){g=h.vertices[j].x;j=h.vertices[j].y;l=h.vertices[i].x;i=h.vertices[i].y;return[new THREE.Vector2(h.vertices[k].x,h.vertices[k].y),new THREE.Vector2(g,j),new THREE.Vector2(l,i)]},generateBottomUV:function(h,g,l,k,j,i){return this.generateTopUV(h,g,l,k,j,i)},generateSideWallUV:function(D,C,B,A,v,u,t,s,r,o,m,i){C=D.vertices[v].x;B=D.vertices[v].y;v=D.vertices[v].z;A=D.vertices[u].x;r=D.vertices[u].y;u=D.vertices[u].z;o=D.vertices[t].x;m=D.vertices[t].y;t=D.vertices[t].z;i=D.vertices[s].x;var j=D.vertices[s].y;D=D.vertices[s].z;return 0.01>Math.abs(B-r)?[new THREE.Vector2(C,1-v),new THREE.Vector2(A,1-u),new THREE.Vector2(o,1-t),new THREE.Vector2(i,1-D)]:[new THREE.Vector2(B,1-v),new THREE.Vector2(r,1-u),new THREE.Vector2(m,1-t),new THREE.Vector2(j,1-D)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(d,c){THREE.Geometry.call(this);!1===d instanceof Array&&(d=[d]);this.shapebb=d[d.length-1].getBoundingBox();this.addShapeList(d,c);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(f,e){for(var h=0,g=f.length;h<g;h++){this.addShape(f[h],e)}return this};THREE.ShapeGeometry.prototype.addShape=function(v,u){void 0===u&&(u={});var t=u.material,s=void 0===u.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:u.UVGenerator,r,q,p,o=this.vertices.length;r=v.extractPoints(void 0!==u.curveSegments?u.curveSegments:12);var m=r.shape,j=r.holes;if(!THREE.Shape.Utils.isClockWise(m)){for(m=m.reverse(),r=0,q=j.length;r<q;r++){p=j[r],THREE.Shape.Utils.isClockWise(p)&&(j[r]=p.reverse())}}var i=THREE.Shape.Utils.triangulateShape(m,j);r=0;for(q=j.length;r<q;r++){p=j[r],m=m.concat(p)}j=m.length;q=i.length;for(r=0;r<j;r++){p=m[r],this.vertices.push(new THREE.Vector3(p.x,p.y,0))}for(r=0;r<q;r++){j=i[r],m=j[0]+o,p=j[1]+o,j=j[2]+o,this.faces.push(new THREE.Face3(m,p,j,null,null,t)),this.faceVertexUvs[0].push(s.generateBottomUV(this,v,u,m,p,j))}};THREE.LatheGeometry=function(H,G,F,E){THREE.Geometry.call(this);G=G||12;F=F||0;E=E||2*Math.PI;for(var D=1/(H.length-1),C=1/G,B=0,A=G;B<=A;B++){for(var v=F+B*C*E,u=Math.cos(v),o=Math.sin(v),v=0,j=H.length;v<j;v++){var m=H[v],J=new THREE.Vector3;J.x=u*m.x-o*m.y;J.y=o*m.x+u*m.y;J.z=m.z;this.vertices.push(J)}}F=H.length;B=0;for(A=G;B<A;B++){for(v=0,j=H.length-1;v<j;v++){G=o=v+F*B;E=o+F;var u=o+1+F,o=o+1,m=B*C,J=v*D,I=m+C,i=J+D;this.faces.push(new THREE.Face3(G,E,o));this.faceVertexUvs[0].push([new THREE.Vector2(m,J),new THREE.Vector2(I,J),new THREE.Vector2(m,i)]);this.faces.push(new THREE.Face3(E,u,o));this.faceVertexUvs[0].push([new THREE.Vector2(I,J),new THREE.Vector2(I,i),new THREE.Vector2(m,i)])}}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(E,D,C,B){THREE.Geometry.call(this);this.parameters={width:E,height:D,widthSegments:C,heightSegments:B};var A=E/2,v=D/2;C=C||1;B=B||1;var u=C+1,t=B+1,r=E/C,o=D/B,m=new THREE.Vector3(0,0,1);for(E=0;E<t;E++){var i=E*o-v;for(D=0;D<u;D++){this.vertices.push(new THREE.Vector3(D*r-A,-i,0))}}for(E=0;E<B;E++){for(D=0;D<C;D++){var j=D+u*E,A=D+u*(E+1),v=D+1+u*(E+1),t=D+1+u*E,r=new THREE.Vector2(D/C,1-E/B),o=new THREE.Vector2(D/C,1-(E+1)/B),i=new THREE.Vector2((D+1)/C,1-(E+1)/B),F=new THREE.Vector2((D+1)/C,1-E/B),j=new THREE.Face3(j,A,t);j.normal.copy(m);j.vertexNormals.push(m.clone(),m.clone(),m.clone());this.faces.push(j);this.faceVertexUvs[0].push([r,o,F]);j=new THREE.Face3(A,v,t);j.normal.copy(m);j.vertexNormals.push(m.clone(),m.clone(),m.clone());this.faces.push(j);this.faceVertexUvs[0].push([o.clone(),i,F.clone()])}}};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(B,A,v,u,t,s){THREE.Geometry.call(this);B=B||0;A=A||50;t=void 0!==t?t:0;s=void 0!==s?s:2*Math.PI;v=void 0!==v?Math.max(3,v):8;u=void 0!==u?Math.max(3,u):8;var r,p=[],o=B,m=(A-B)/u;for(B=0;B<=u;B++){for(r=0;r<=v;r++){var j=new THREE.Vector3,i=t+r/v*s;j.x=o*Math.cos(i);j.y=o*Math.sin(i);this.vertices.push(j);p.push(new THREE.Vector2((j.x/A+1)/2,(j.y/A+1)/2))}o+=m}A=new THREE.Vector3(0,0,1);for(B=0;B<u;B++){for(t=B*v,r=0;r<=v;r++){i=r+t,s=i+B,m=i+v+B,j=i+v+1+B,this.faces.push(new THREE.Face3(s,m,j,[A.clone(),A.clone(),A.clone()])),this.faceVertexUvs[0].push([p[s].clone(),p[m].clone(),p[j].clone()]),s=i+B,m=i+v+1+B,j=i+1+B,this.faces.push(new THREE.Face3(s,m,j,[A.clone(),A.clone(),A.clone()])),this.faceVertexUvs[0].push([p[s].clone(),p[m].clone(),p[j].clone()])}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,o)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(O,N,M,L,K,J,I){THREE.Geometry.call(this);this.parameters={radius:O,widthSegments:N,heightSegments:M,phiStart:L,phiLength:K,thetaStart:J,thetaLength:I};O=O||50;N=Math.max(3,Math.floor(N)||8);M=Math.max(2,Math.floor(M)||6);L=void 0!==L?L:0;K=void 0!==K?K:2*Math.PI;J=void 0!==J?J:0;I=void 0!==I?I:Math.PI;var H,G,F=[],E=[];for(G=0;G<=M;G++){var C=[],D=[];for(H=0;H<=N;H++){var A=H/N,o=G/M,B=new THREE.Vector3;B.x=-O*Math.cos(L+A*K)*Math.sin(J+o*I);B.y=O*Math.cos(J+o*I);B.z=O*Math.sin(L+A*K)*Math.sin(J+o*I);this.vertices.push(B);C.push(this.vertices.length-1);D.push(new THREE.Vector2(A,1-o))}F.push(C);E.push(D)}for(G=0;G<M;G++){for(H=0;H<N;H++){L=F[G][H+1];K=F[G][H];J=F[G+1][H];I=F[G+1][H+1];var C=this.vertices[L].clone().normalize(),D=this.vertices[K].clone().normalize(),A=this.vertices[J].clone().normalize(),o=this.vertices[I].clone().normalize(),B=E[G][H+1].clone(),j=E[G][H].clone(),i=E[G+1][H].clone(),m=E[G+1][H+1].clone();Math.abs(this.vertices[L].y)===O?(B.x=(B.x+j.x)/2,this.faces.push(new THREE.Face3(L,J,I,[C,A,o])),this.faceVertexUvs[0].push([B,i,m])):Math.abs(this.vertices[J].y)===O?(i.x=(i.x+m.x)/2,this.faces.push(new THREE.Face3(L,K,J,[C,D,A])),this.faceVertexUvs[0].push([B,j,i])):(this.faces.push(new THREE.Face3(L,K,I,[C,D,o])),this.faceVertexUvs[0].push([B,j,m]),this.faces.push(new THREE.Face3(K,J,I,[D.clone(),A,o.clone()])),this.faceVertexUvs[0].push([j.clone(),i,m.clone()]))}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,O)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,d){d=d||{};var f=THREE.FontUtils.generateShapes(e,d);d.amount=void 0!==d.height?d.height:50;void 0===d.bevelThickness&&(d.bevelThickness=10);void 0===d.bevelSize&&(d.bevelSize=8);void 0===d.bevelEnabled&&(d.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,f,d)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(D,C,B,A,v){THREE.Geometry.call(this);this.parameters={radius:D,tube:C,radialSegments:B,tubularSegments:A,arc:v};D=D||100;C=C||40;B=B||8;A=A||6;v=v||2*Math.PI;for(var u=new THREE.Vector3,t=[],s=[],r=0;r<=B;r++){for(var o=0;o<=A;o++){var m=o/A*v,i=r/B*Math.PI*2;u.x=D*Math.cos(m);u.y=D*Math.sin(m);var j=new THREE.Vector3;j.x=(D+C*Math.cos(i))*Math.cos(m);j.y=(D+C*Math.cos(i))*Math.sin(m);j.z=C*Math.sin(i);this.vertices.push(j);t.push(new THREE.Vector2(o/A,r/B));s.push(j.clone().sub(u).normalize())}}for(r=1;r<=B;r++){for(o=1;o<=A;o++){D=(A+1)*r+o-1,C=(A+1)*(r-1)+o-1,v=(A+1)*(r-1)+o,u=(A+1)*r+o,m=new THREE.Face3(D,C,u,[s[D].clone(),s[C].clone(),s[u].clone()]),this.faces.push(m),this.faceVertexUvs[0].push([t[D].clone(),t[C].clone(),t[u].clone()]),m=new THREE.Face3(C,v,u,[s[C].clone(),s[v].clone(),s[u].clone()]),this.faces.push(m),this.faceVertexUvs[0].push([t[C].clone(),t[v].clone(),t[u].clone()])}}this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(M,L,K,J,I,H,G){function F(k,h,r,q,p){var n=Math.cos(k),l=Math.sin(k);k*=h/r;h=Math.cos(k);n*=q*(2+h)*0.5;l=q*(2+h)*l*0.5;q=p*q*Math.sin(k)*0.5;return new THREE.Vector3(n,l,q)}THREE.Geometry.call(this);this.parameters={radius:M,tube:L,radialSegments:K,tubularSegments:J,p:I,q:H,heightScale:G};M=M||100;L=L||40;K=K||64;J=J||8;I=I||2;H=H||3;G=G||1;for(var E=Array(K),D=new THREE.Vector3,C=new THREE.Vector3,A=new THREE.Vector3,B=0;B<K;++B){E[B]=Array(J);var o=B/K*2*I*Math.PI,m=F(o,H,I,M,G),o=F(o+0.01,H,I,M,G);D.subVectors(o,m);C.addVectors(o,m);A.crossVectors(D,C);C.crossVectors(A,D);A.normalize();C.normalize();for(o=0;o<J;++o){var u=o/J*2*Math.PI,j=-L*Math.cos(u),u=L*Math.sin(u),i=new THREE.Vector3;i.x=m.x+j*C.x+u*A.x;i.y=m.y+j*C.y+u*A.y;i.z=m.z+j*C.z+u*A.z;E[B][o]=this.vertices.push(i)-1}}for(B=0;B<K;++B){for(o=0;o<J;++o){I=(B+1)%K,H=(o+1)%J,M=E[B][o],L=E[I][o],I=E[I][H],H=E[B][H],G=new THREE.Vector2(B/K,o/J),D=new THREE.Vector2((B+1)/K,o/J),C=new THREE.Vector2((B+1)/K,(o+1)/J),A=new THREE.Vector2(B/K,(o+1)/J),this.faces.push(new THREE.Face3(M,L,H)),this.faceVertexUvs[0].push([G,D,A]),this.faces.push(new THREE.Face3(L,I,H)),this.faceVertexUvs[0].push([D.clone(),C,A.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(I,H,G,F,E){THREE.Geometry.call(this);this.parameters={path:I,segments:H,radius:G,radialSegments:F,closed:E};H=H||64;G=G||1;F=F||8;E=E||!1;var D=[],C,B,A=H+1,u,o,j,m,L=new THREE.Vector3,K,i,J;K=new THREE.TubeGeometry.FrenetFrames(I,H,E);i=K.normals;J=K.binormals;this.tangents=K.tangents;this.normals=i;this.binormals=J;for(K=0;K<A;K++){for(D[K]=[],u=K/(A-1),m=I.getPointAt(u),C=i[K],B=J[K],u=0;u<F;u++){o=u/F*2*Math.PI,j=-G*Math.cos(o),o=G*Math.sin(o),L.copy(m),L.x+=j*C.x+o*B.x,L.y+=j*C.y+o*B.y,L.z+=j*C.z+o*B.z,D[K][u]=this.vertices.push(new THREE.Vector3(L.x,L.y,L.z))-1}}for(K=0;K<H;K++){for(u=0;u<F;u++){A=E?(K+1)%H:K+1,L=(u+1)%F,I=D[K][u],G=D[A][u],A=D[A][L],L=D[K][L],i=new THREE.Vector2(K/H,u/F),J=new THREE.Vector2((K+1)/H,u/F),C=new THREE.Vector2((K+1)/H,(u+1)/F),B=new THREE.Vector2(K/H,(u+1)/F),this.faces.push(new THREE.Face3(I,G,L)),this.faceVertexUvs[0].push([i,J,B]),this.faces.push(new THREE.Face3(G,A,L)),this.faceVertexUvs[0].push([J.clone(),C,B.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(B,A,v){new THREE.Vector3;var u=new THREE.Vector3;new THREE.Vector3;var t=[],s=[],r=[],p=new THREE.Vector3,o=new THREE.Matrix4;A+=1;var m,j,i;this.tangents=t;this.normals=s;this.binormals=r;for(m=0;m<A;m++){j=m/(A-1),t[m]=B.getTangentAt(j),t[m].normalize()}s[0]=new THREE.Vector3;r[0]=new THREE.Vector3;B=Number.MAX_VALUE;m=Math.abs(t[0].x);j=Math.abs(t[0].y);i=Math.abs(t[0].z);m<=B&&(B=m,u.set(1,0,0));j<=B&&(B=j,u.set(0,1,0));i<=B&&u.set(0,0,1);p.crossVectors(t[0],u).normalize();s[0].crossVectors(t[0],p);r[0].crossVectors(t[0],s[0]);for(m=1;m<A;m++){s[m]=s[m-1].clone(),r[m]=r[m-1].clone(),p.crossVectors(t[m-1],t[m]),0.0001<p.length()&&(p.normalize(),u=Math.acos(THREE.Math.clamp(t[m-1].dot(t[m]),-1,1)),s[m].applyMatrix4(o.makeRotationAxis(p,u))),r[m].crossVectors(t[m],s[m])}if(v){for(u=Math.acos(THREE.Math.clamp(s[0].dot(s[A-1]),-1,1)),u/=A-1,0<t[0].dot(p.crossVectors(s[0],s[A-1]))&&(u=-u),m=1;m<A;m++){s[m].applyMatrix4(o.makeRotationAxis(t[m],u*m)),r[m].crossVectors(t[m],s[m])}}};THREE.PolyhedronGeometry=function(I,H,G,F){function E(e){var d=e.normalize().clone();d.index=A.vertices.push(d)-1;var f=Math.atan2(e.z,-e.x)/2/Math.PI+0.5;e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+0.5;d.uv=new THREE.Vector2(f,1-e);return d}function D(f,e,h){var g=new THREE.Face3(f.index,e.index,h.index,[f.clone(),e.clone(),h.clone()]);A.faces.push(g);J.copy(f).add(e).add(h).divideScalar(3);g=Math.atan2(J.z,-J.x);A.faceVertexUvs[0].push([B(f.uv,f,g),B(e.uv,e,g),B(h.uv,h,g)])}function C(R,Q){var P=Math.pow(2,Q);Math.pow(4,Q);for(var O=E(A.vertices[R.a]),N=E(A.vertices[R.b]),M=E(A.vertices[R.c]),v=[],t=0;t<=P;t++){v[t]=[];for(var k=E(O.clone().lerp(M,t/P)),f=E(N.clone().lerp(M,t/P)),e=P-t,S=0;S<=e;S++){v[t][S]=0==S&&t==P?k:E(k.clone().lerp(f,S/e))}}for(t=0;t<P;t++){for(S=0;S<2*(P-t)-1;S++){O=Math.floor(S/2),0==S%2?D(v[t][O+1],v[t+1][O],v[t][O]):D(v[t][O+1],v[t+1][O+1],v[t+1][O])}}}function B(e,d,f){0>f&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===d.x&&0===d.z&&(e=new THREE.Vector2(f/2/Math.PI+0.5,e.y));return e.clone()}THREE.Geometry.call(this);G=G||1;F=F||0;for(var A=this,u=0,o=I.length;u<o;u+=3){E(new THREE.Vector3(I[u],I[u+1],I[u+2]))}I=this.vertices;for(var j=[],m=u=0,o=H.length;u<o;u+=3,m++){var L=I[H[u]],K=I[H[u+1]],i=I[H[u+2]];j[m]=new THREE.Face3(L.index,K.index,i.index,[L.clone(),K.clone(),i.clone()])}for(var J=new THREE.Vector3,u=0,o=j.length;u<o;u++){C(j[u],F)}u=0;for(o=this.faceVertexUvs[0].length;u<o;u++){H=this.faceVertexUvs[0][u],F=H[0].x,I=H[1].x,j=H[2].x,m=Math.max(F,Math.max(I,j)),L=Math.min(F,Math.min(I,j)),0.9<m&&0.1>L&&(0.2>F&&(H[0].x+=1),0.2>I&&(H[1].x+=1),0.2>j&&(H[2].x+=1))}u=0;for(o=this.vertices.length;u<o;u++){this.vertices[u].multiplyScalar(G)}this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,G)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,d){this.parameters={radius:e,detail:d};var f=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,f,0,1,f,0,-1,-f,0,1,-f,0,0,-1,f,0,1,f,0,-1,-f,0,1,-f,f,0,-1,f,0,1,-f,0,-1,-f,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,d)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(d,c){this.parameters={radius:d,detail:c};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],d,c)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],d,c)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(F,E,D){THREE.Geometry.call(this);var C=this.vertices,B=this.faces,A=this.faceVertexUvs[0],v,u,r,o,m=E+1;for(v=0;v<=D;v++){for(o=v/D,u=0;u<=E;u++){r=u/E,r=F(r,o),C.push(r)}}var i,j,H,G;for(v=0;v<D;v++){for(u=0;u<E;u++){F=v*m+u,C=v*m+u+1,o=(v+1)*m+u+1,r=(v+1)*m+u,i=new THREE.Vector2(u/E,v/D),j=new THREE.Vector2((u+1)/E,v/D),H=new THREE.Vector2((u+1)/E,(v+1)/D),G=new THREE.Vector2(u/E,(v+1)/D),B.push(new THREE.Face3(F,C,r)),A.push([i,j,G]),B.push(new THREE.Face3(C,o,r)),A.push([j.clone(),H,G.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(d){d=d||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3(d,0,0),new THREE.Vector3,new THREE.Vector3(0,d,0),new THREE.Vector3,new THREE.Vector3(0,0,d));c.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(h,g,l,k,j,i){THREE.Object3D.call(this);void 0===k&&(k=16776960);void 0===l&&(l=1);void 0===j&&(j=0.2*l);void 0===i&&(i=0.2*j);this.position=g;g=new THREE.Geometry;g.vertices.push(new THREE.Vector3(0,0,0));g.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(g,new THREE.LineBasicMaterial({color:k}));this.line.matrixAutoUpdate=!1;this.add(this.line);g=new THREE.CylinderGeometry(0,0.5,1,5,1);g.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));this.cone=new THREE.Mesh(g,new THREE.MeshBasicMaterial({color:k}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(h);this.setLength(l,j,i)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var d=new THREE.Vector3,c;return function(a){0.99999<a.y?this.quaternion.set(0,0,0,1):-0.99999>a.y?this.quaternion.set(1,0,0,0):(d.set(a.z,0,-a.x).normalize(),c=Math.acos(a.y),this.quaternion.setFromAxisAngle(d,c))}}();THREE.ArrowHelper.prototype.setLength=function(e,d,f){void 0===d&&(d=0.2*e);void 0===f&&(f=0.2*d);this.line.scale.set(1,e,1);this.line.updateMatrix();this.cone.scale.set(f,d,f);this.cone.position.y=e;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(b){this.line.material.color.set(b);this.cone.material.color.set(b)};THREE.BoxHelper=function(e){var d=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=d;var f=new THREE.Geometry;f.vertices.push(d[0],d[1],d[1],d[2],d[2],d[3],d[3],d[0],d[4],d[5],d[5],d[6],d[6],d[7],d[7],d[4],d[0],d[4],d[1],d[5],d[2],d[6],d[3],d[7]);THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==e&&this.update(e)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(f){var e=f.geometry;null===e.boundingBox&&e.computeBoundingBox();var h=e.boundingBox.min,e=e.boundingBox.max,g=this.vertices;g[0].set(e.x,e.y,e.z);g[1].set(h.x,e.y,e.z);g[2].set(h.x,h.y,e.z);g[3].set(e.x,h.y,e.z);g[4].set(e.x,e.y,h.z);g[5].set(h.x,e.y,h.z);g[6].set(h.x,h.y,h.z);g[7].set(e.x,h.y,h.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=f.matrixWorld};THREE.BoundingBoxHelper=function(e,d){var f=void 0!==d?d:8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:f,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(h){function g(e,c,f){l(e,f);l(c,f)}function l(d,c){k.vertices.push(new THREE.Vector3);k.colors.push(new THREE.Color(c));void 0===i[d]&&(i[d]=[]);i[d].push(k.vertices.length-1)}var k=new THREE.Geometry,j=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={};g("n1","n2",16755200);g("n2","n4",16755200);g("n4","n3",16755200);g("n3","n1",16755200);g("f1","f2",16755200);g("f2","f4",16755200);g("f4","f3",16755200);g("f3","f1",16755200);g("n1","f1",16755200);g("n2","f2",16755200);g("n3","f3",16755200);g("n4","f4",16755200);g("p","n1",16711680);g("p","n2",16711680);g("p","n3",16711680);g("p","n4",16711680);g("u1","u2",43775);g("u2","u3",43775);g("u3","u1",43775);g("c","t",16777215);g("p","c",3355443);g("cn1","cn2",3355443);g("cn3","cn4",3355443);g("cf1","cf2",3355443);g("cf3","cf4",3355443);THREE.Line.call(this,k,j,THREE.LinePieces);this.camera=h;this.matrixWorld=h.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=i;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,d=new THREE.Camera,f=new THREE.Projector;return function(){function b(l,j,i,c){e.set(j,i,c);f.unprojectVector(e,d);l=a.pointMap[l];if(void 0!==l){for(j=0,i=l.length;j<i;j++){a.geometry.vertices[l[j]].copy(e)}}}var a=this;d.projectionMatrix.copy(this.camera.projectionMatrix);b("c",0,0,-1);b("t",0,0,1);b("n1",-1,-1,-1);b("n2",1,-1,-1);b("n3",-1,1,-1);b("n4",1,1,-1);b("f1",-1,-1,1);b("f2",1,-1,1);b("f3",-1,1,1);b("f4",1,1,1);b("u1",0.7,1.1,-1);b("u2",-0.7,1.1,-1);b("u3",0,2,-1);b("cf1",-1,0,1);b("cf2",1,0,1);b("cf3",0,-1,1);b("cf4",0,1,1);b("cn1",-1,0,-1);b("cn2",1,0,-1);b("cn3",0,-1,-1);b("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(f,e){THREE.Object3D.call(this);this.light=f;this.light.updateMatrixWorld();this.matrixWorld=f.matrixWorld;this.matrixAutoUpdate=!1;e=e||1;var h=new THREE.Geometry;h.vertices.push(new THREE.Vector3(-e,e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,-e,0),new THREE.Vector3(-e,-e,0),new THREE.Vector3(-e,e,0));var g=new THREE.LineBasicMaterial({fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(h,g);this.add(this.lightPlane);h=new THREE.Geometry;h.vertices.push(new THREE.Vector3,new THREE.Vector3);g=new THREE.LineBasicMaterial({fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(h,g);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld);d.setFromMatrixPosition(this.light.target.matrixWorld);f.subVectors(d,e);this.lightPlane.lookAt(f);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(f);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(H,G){var F=void 0!==G?G:16777215,E=[0,0],D={},C=function(d,c){return d-c},B=["a","b","c"],A=new THREE.BufferGeometry,v=H.geometry.clone();v.mergeVertices();v.computeFaceNormals();for(var u=v.vertices,v=v.faces,o=0,j=0,m=v.length;j<m;j++){for(var J=v[j],I=0;3>I;I++){E[0]=J[B[I]];E[1]=J[B[(I+1)%3]];E.sort(C);var i=E.toString();void 0===D[i]?(D[i]={vert1:E[0],vert2:E[1],face1:j,face2:void 0},o++):D[i].face2=j}}A.addAttribute("position",new THREE.Float32Attribute(2*o,3));E=A.attributes.position.array;C=0;for(i in D){if(B=D[i],void 0===B.face2||0.9999>v[B.face1].normal.dot(v[B.face2].normal)){o=u[B.vert1],E[C++]=o.x,E[C++]=o.y,E[C++]=o.z,o=u[B.vert2],E[C++]=o.x,E[C++]=o.y,E[C++]=o.z}}THREE.Line.call(this,A,new THREE.LineBasicMaterial({color:F}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=H.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper=function(g,f,j,i){this.object=g;this.size=void 0!==f?f:1;g=void 0!==j?j:16776960;i=void 0!==i?i:1;f=new THREE.Geometry;j=0;for(var h=this.object.geometry.faces.length;j<h;j++){f.vertices.push(new THREE.Vector3,new THREE.Vector3)}THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:g,linewidth:i}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(){var j=this.geometry.vertices,i=this.object,p=i.geometry.vertices,o=i.geometry.faces,n=i.matrixWorld;i.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(n);for(var m=i=0,l=o.length;i<l;i++,m+=2){var k=o[i];j[m].copy(p[k.a]).add(p[k.b]).add(p[k.c]).divideScalar(3).applyMatrix4(n);j[m+1].copy(k.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(j[m])}this.geometry.verticesNeedUpdate=!0;return this};THREE.GridHelper=function(h,g){var l=new THREE.Geometry,k=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var j=-h;j<=h;j+=g){l.vertices.push(new THREE.Vector3(-h,0,j),new THREE.Vector3(h,0,j),new THREE.Vector3(j,0,-h),new THREE.Vector3(j,0,h));var i=0===j?this.color1:this.color2;l.colors.push(i,i,i,i)}THREE.Line.call(this,l,k,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(d,c){this.color1.set(d);this.color2.set(c);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(f,e,h,g){THREE.Object3D.call(this);this.light=f;this.light.updateMatrixWorld();this.matrixWorld=f.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];f=new THREE.SphereGeometry(e,4,2);f.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(e=0;8>e;e++){f.faces[e].color=this.colors[4>e?0:1]}e=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(f,e);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var b=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(b.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(f,e){this.light=f;this.light.updateMatrixWorld();var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,h,g);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(f){for(var e=f.skeleton,h=new THREE.Geometry,g=0;g<e.bones.length;g++){e.bones[g].parent instanceof THREE.Bone&&(h.vertices.push(new THREE.Vector3),h.vertices.push(new THREE.Vector3),h.colors.push(new THREE.Color(0,0,1)),h.colors.push(new THREE.Color(0,1,0)))}g=new THREE.LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,h,g,THREE.LinePieces);this.skeleton=e;this.matrixWorld=f.matrixWorld;this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.update=function(){for(var f=this.geometry,e=0,h=0;h<this.skeleton.bones.length;h++){var g=this.skeleton.bones[h];g.parent instanceof THREE.Bone&&(f.vertices[e].setFromMatrixPosition(g.skinMatrix),f.vertices[e+1].setFromMatrixPosition(g.parent.skinMatrix),e+=2)}f.verticesNeedUpdate=!0;f.computeBoundingSphere()};THREE.SpotLightHelper=function(d){THREE.Object3D.call(this);this.light=d;this.light.updateMatrixWorld();this.matrixWorld=d.matrixWorld;this.matrixAutoUpdate=!1;d=new THREE.CylinderGeometry(0,1,1,8,1,!0);d.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));d.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var c=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(d,c);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){var b=this.light.distance?this.light.distance:10000,a=b*Math.tan(this.light.angle);this.cone.scale.set(a,a,b);d.setFromMatrixPosition(this.light.matrixWorld);c.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(c.sub(d));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(j,i,p,o){this.object=j;this.size=void 0!==i?i:1;i=void 0!==p?p:16711680;o=void 0!==o?o:1;p=new THREE.Geometry;j=j.geometry.faces;for(var n=0,m=j.length;n<m;n++){for(var l=0,k=j[n].vertexNormals.length;l<k;l++){p.vertices.push(new THREE.Vector3),p.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,p,new THREE.LineBasicMaterial({color:i,linewidth:o}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(d){var c=new THREE.Vector3;return function(B){B=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var A=this.geometry.vertices,v=this.object.geometry.vertices,u=this.object.geometry.faces,t=this.object.matrixWorld,r=0,o=0,m=u.length;o<m;o++){for(var j=u[o],b=0,i=j.vertexNormals.length;b<i;b++){var C=j.vertexNormals[b];A[r].copy(v[j[B[b]]]).applyMatrix4(t);c.copy(C).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);c.add(A[r]);r+=1;A[r].copy(c);r+=1}}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(j,i,p,o){this.object=j;this.size=void 0!==i?i:1;i=void 0!==p?p:255;o=void 0!==o?o:1;p=new THREE.Geometry;j=j.geometry.faces;for(var n=0,m=j.length;n<m;n++){for(var l=0,k=j[n].vertexTangents.length;l<k;l++){p.vertices.push(new THREE.Vector3),p.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,p,new THREE.LineBasicMaterial({color:i,linewidth:o}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(d){var c=new THREE.Vector3;return function(B){B=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var A=this.geometry.vertices,v=this.object.geometry.vertices,u=this.object.geometry.faces,t=this.object.matrixWorld,r=0,o=0,m=u.length;o<m;o++){for(var j=u[o],b=0,i=j.vertexTangents.length;b<i;b++){var C=j.vertexTangents[b];A[r].copy(v[j[B[b]]]).applyMatrix4(t);c.copy(C).transformDirection(t).multiplyScalar(this.size);c.add(A[r]);r+=1;A[r].copy(c);r+=1}}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.WireframeHelper=function(O,N){var M=void 0!==N?N:16777215,L=[0,0],K={},J=function(d,c){return d-c},I=["a","b","c"],H=new THREE.BufferGeometry;if(O.geometry instanceof THREE.Geometry){for(var G=O.geometry.vertices,F=O.geometry.faces,E=0,C=new Uint32Array(6*F.length),D=0,A=F.length;D<A;D++){for(var o=F[D],B=0;3>B;B++){L[0]=o[I[B]];L[1]=o[I[(B+1)%3]];L.sort(J);var j=L.toString();void 0===K[j]&&(C[2*E]=L[0],C[2*E+1]=L[1],K[j]=!0,E++)}}H.addAttribute("position",new THREE.Float32Attribute(2*E,3));L=H.attributes.position.array;D=0;for(A=E;D<A;D++){for(B=0;2>B;B++){E=G[C[2*D+B]],I=6*D+3*B,L[I+0]=E.x,L[I+1]=E.y,L[I+2]=E.z}}}else{if(O.geometry instanceof THREE.BufferGeometry&&void 0!==O.geometry.attributes.index){for(var G=O.geometry.attributes.position.array,A=O.geometry.attributes.index.array,F=O.geometry.offsets,E=0,C=new Uint32Array(2*A.length),o=0,i=F.length;o<i;++o){for(var B=F[o].start,j=F[o].count,I=F[o].index,D=B,m=B+j;D<m;D+=3){for(B=0;3>B;B++){L[0]=I+A[D+B],L[1]=I+A[D+(B+1)%3],L.sort(J),j=L.toString(),void 0===K[j]&&(C[2*E]=L[0],C[2*E+1]=L[1],K[j]=!0,E++)}}}H.addAttribute("position",new THREE.Float32Attribute(2*E,3));L=H.attributes.position.array;D=0;for(A=E;D<A;D++){for(B=0;2>B;B++){I=6*D+3*B,E=3*C[2*D+B],L[I+0]=G[E],L[I+1]=G[E+1],L[I+2]=G[E+2]}}}else{if(O.geometry instanceof THREE.BufferGeometry){for(G=O.geometry.attributes.position.array,E=G.length/3,C=E/3,H.addAttribute("position",new THREE.Float32Attribute(2*E,3)),L=H.attributes.position.array,D=0,A=C;D<A;D++){for(B=0;3>B;B++){I=18*D+6*B,C=9*D+3*B,L[I+0]=G[C],L[I+1]=G[C+1],L[I+2]=G[C+2],E=9*D+(B+1)%3*3,L[I+3]=G[E],L[I+4]=G[E+1],L[I+5]=G[E+2]}}}}}THREE.Line.call(this,H,new THREE.LineBasicMaterial({color:M}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=O.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(b){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(g,f,j,i,h){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==g&&this.add(g,f,j,i,h)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(h,g,l,k,j,i){void 0===g&&(g=-1);void 0===l&&(l=0);void 0===i&&(i=1);void 0===j&&(j=new THREE.Color(16777215));void 0===k&&(k=THREE.NormalBlending);l=Math.min(l,Math.max(0,l));this.lensFlares.push({texture:h,size:g,distance:l,x:0,y:0,z:0,scale:1,rotation:1,opacity:i,color:j,blending:k})};THREE.LensFlare.prototype.updateLensFlares=function(){var g,f=this.lensFlares.length,j,i=2*-this.positionScreen.x,h=2*-this.positionScreen.y;for(g=0;g<f;g++){j=this.lensFlares[g],j.x=this.positionScreen.x+i*j.distance,j.y=this.positionScreen.y+h*j.distance,j.wantedRotation=j.x*Math.PI*0.25,j.rotation+=0.25*(j.wantedRotation-j.rotation)}};THREE.MorphBlendMesh=function(e,d){THREE.Mesh.call(this,e,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;this.createAnimation("__default",0,f-1,f/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(f,e,h,g){e={startFrame:e,endFrame:h,length:h-e+1,fps:g,duration:(h-e)/g,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[f]=e;this.animationsList.push(e)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(r){for(var q=/([a-z]+)(\d+)/,p,o={},n=this.geometry,m=0,l=n.morphTargets.length;m<l;m++){var j=n.morphTargets[m].name.match(q);if(j&&1<j.length){var i=j[1];o[i]||(o[i]={start:Infinity,end:-Infinity});j=o[i];m<j.start&&(j.start=m);m>j.end&&(j.end=m);p||(p=i)}}for(i in o){j=o[i],this.createAnimation(i,j.start,j.end,r)}this.firstAnimation=p};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(b){if(b=this.animationsMap[b]){b.direction=1,b.directionBackwards=!1}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(b){if(b=this.animationsMap[b]){b.direction=-1,b.directionBackwards=!0}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,d){var f=this.animationsMap[e];f&&(f.fps=d,f.duration=(f.end-f.start)/f.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,d){var f=this.animationsMap[e];f&&(f.duration=d,f.fps=(f.end-f.start)/f.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,d){var f=this.animationsMap[e];f&&(f.weight=d)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,d){var f=this.animationsMap[e];f&&(f.time=d)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(d){var c=0;if(d=this.animationsMap[d]){c=d.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(d){var c=-1;if(d=this.animationsMap[d]){c=d.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(d){var c=this.animationsMap[d];c?(c.time=0,c.active=!0):console.warn("animation["+d+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(b){if(b=this.animationsMap[b]){b.active=!1}};THREE.MorphBlendMesh.prototype.update=function(i){for(var h=0,n=this.animationsList.length;h<n;h++){var m=this.animationsList[h];if(m.active){var l=m.duration/m.length;m.time+=m.direction*i;if(m.mirroredLoop){if(m.time>m.duration||0>m.time){m.direction*=-1,m.time>m.duration&&(m.time=m.duration,m.directionBackwards=!0),0>m.time&&(m.time=0,m.directionBackwards=!1)}}else{m.time%=m.duration,0>m.time&&(m.time+=m.duration)}var k=m.startFrame+THREE.Math.clamp(Math.floor(m.time/l),0,m.length-1),j=m.weight;k!==m.currentFrame&&(this.morphTargetInfluences[m.lastFrame]=0,this.morphTargetInfluences[m.currentFrame]=1*j,this.morphTargetInfluences[k]=0,m.lastFrame=m.currentFrame,m.currentFrame=k);l=m.time%l/l;m.directionBackwards&&(l=1-l);this.morphTargetInfluences[m.currentFrame]=l*j;this.morphTargetInfluences[m.lastFrame]=(1-l)*j}}};THREE.LensFlarePlugin=function(){function E(b,p){var n=D.createProgram(),l=D.createShader(D.FRAGMENT_SHADER),k=D.createShader(D.VERTEX_SHADER),h="precision "+p+" float;\n";D.shaderSource(l,h+b.fragmentShader);D.shaderSource(k,h+b.vertexShader);D.compileShader(l);D.compileShader(k);D.attachShader(n,l);D.attachShader(n,k);D.linkProgram(n);return n}var D,C,B,A,v,u,t,r,o,m,i,j,F;this.init=function(a){D=a.context;C=a;B=a.getPrecision();A=new Float32Array(16);v=new Uint16Array(6);a=0;A[a++]=-1;A[a++]=-1;A[a++]=0;A[a++]=0;A[a++]=1;A[a++]=-1;A[a++]=1;A[a++]=0;A[a++]=1;A[a++]=1;A[a++]=1;A[a++]=1;A[a++]=-1;A[a++]=1;A[a++]=0;A[a++]=1;a=0;v[a++]=0;v[a++]=1;v[a++]=2;v[a++]=0;v[a++]=2;v[a++]=3;u=D.createBuffer();t=D.createBuffer();D.bindBuffer(D.ARRAY_BUFFER,u);D.bufferData(D.ARRAY_BUFFER,A,D.STATIC_DRAW);D.bindBuffer(D.ELEMENT_ARRAY_BUFFER,t);D.bufferData(D.ELEMENT_ARRAY_BUFFER,v,D.STATIC_DRAW);r=D.createTexture();o=D.createTexture();D.bindTexture(D.TEXTURE_2D,r);D.texImage2D(D.TEXTURE_2D,0,D.RGB,16,16,0,D.RGB,D.UNSIGNED_BYTE,null);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_S,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_T,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MAG_FILTER,D.NEAREST);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MIN_FILTER,D.NEAREST);D.bindTexture(D.TEXTURE_2D,o);D.texImage2D(D.TEXTURE_2D,0,D.RGBA,16,16,0,D.RGBA,D.UNSIGNED_BYTE,null);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_S,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_T,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MAG_FILTER,D.NEAREST);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MIN_FILTER,D.NEAREST);0>=D.getParameter(D.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(m=!1,i=E(THREE.ShaderFlares.lensFlare,B)):(m=!0,i=E(THREE.ShaderFlares.lensFlareVertexTexture,B));j={};F={};j.vertex=D.getAttribLocation(i,"position");j.uv=D.getAttribLocation(i,"uv");F.renderType=D.getUniformLocation(i,"renderType");F.map=D.getUniformLocation(i,"map");F.occlusionMap=D.getUniformLocation(i,"occlusionMap");F.opacity=D.getUniformLocation(i,"opacity");F.color=D.getUniformLocation(i,"color");F.scale=D.getUniformLocation(i,"scale");F.rotation=D.getUniformLocation(i,"rotation");F.screenPosition=D.getUniformLocation(i,"screenPosition")};this.render=function(U,T,S,R){U=U.__webglFlares;var I=U.length;if(I){var l=new THREE.Vector3,c=R/S,n=0.5*S,b=0.5*R,k=16/R,P=new THREE.Vector2(k*c,k),h=new THREE.Vector3(1,1,0),Q=new THREE.Vector2(1,1),q=F,k=j;D.useProgram(i);D.enableVertexAttribArray(j.vertex);D.enableVertexAttribArray(j.uv);D.uniform1i(q.occlusionMap,0);D.uniform1i(q.map,1);D.bindBuffer(D.ARRAY_BUFFER,u);D.vertexAttribPointer(k.vertex,2,D.FLOAT,!1,16,0);D.vertexAttribPointer(k.uv,2,D.FLOAT,!1,16,8);D.bindBuffer(D.ELEMENT_ARRAY_BUFFER,t);D.disable(D.CULL_FACE);D.depthMask(!1);var M,O,s,g,p;for(M=0;M<I;M++){if(k=16/R,P.set(k*c,k),g=U[M],l.set(g.matrixWorld.elements[12],g.matrixWorld.elements[13],g.matrixWorld.elements[14]),l.applyMatrix4(T.matrixWorldInverse),l.applyProjection(T.projectionMatrix),h.copy(l),Q.x=h.x*n+n,Q.y=h.y*b+b,m||0<Q.x&&Q.x<S&&0<Q.y&&Q.y<R){for(D.activeTexture(D.TEXTURE1),D.bindTexture(D.TEXTURE_2D,r),D.copyTexImage2D(D.TEXTURE_2D,0,D.RGB,Q.x-8,Q.y-8,16,16,0),D.uniform1i(q.renderType,0),D.uniform2f(q.scale,P.x,P.y),D.uniform3f(q.screenPosition,h.x,h.y,h.z),D.disable(D.BLEND),D.enable(D.DEPTH_TEST),D.drawElements(D.TRIANGLES,6,D.UNSIGNED_SHORT,0),D.activeTexture(D.TEXTURE0),D.bindTexture(D.TEXTURE_2D,o),D.copyTexImage2D(D.TEXTURE_2D,0,D.RGBA,Q.x-8,Q.y-8,16,16,0),D.uniform1i(q.renderType,1),D.disable(D.DEPTH_TEST),D.activeTexture(D.TEXTURE1),D.bindTexture(D.TEXTURE_2D,r),D.drawElements(D.TRIANGLES,6,D.UNSIGNED_SHORT,0),g.positionScreen.copy(h),g.customUpdateCallback?g.customUpdateCallback(g):g.updateLensFlares(),D.uniform1i(q.renderType,2),D.enable(D.BLEND),O=0,s=g.lensFlares.length;O<s;O++){p=g.lensFlares[O],0.001<p.opacity&&0.001<p.scale&&(h.x=p.x,h.y=p.y,h.z=p.z,k=p.size*p.scale/R,P.x=k*c,P.y=k,D.uniform3f(q.screenPosition,h.x,h.y,h.z),D.uniform2f(q.scale,P.x,P.y),D.uniform1f(q.rotation,p.rotation),D.uniform1f(q.opacity,p.opacity),D.uniform3f(q.color,p.color.r,p.color.g,p.color.b),C.setBlending(p.blending,p.blendEquation,p.blendSrc,p.blendDst),C.setTexture(p.texture,1),D.drawElements(D.TRIANGLES,6,D.UNSIGNED_SHORT,0))}}}D.enable(D.CULL_FACE);D.enable(D.DEPTH_TEST);D.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var v,u,t,s,r,q,p=new THREE.Frustum,o=new THREE.Matrix4,m=new THREE.Vector3,j=new THREE.Vector3,i=new THREE.Vector3;this.init=function(b){v=b.context;u=b;b=THREE.ShaderLib.depthRGBA;var a=THREE.UniformsUtils.clone(b.uniforms);t=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});s=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});r=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});q=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});t._shadowPass=!0;s._shadowPass=!0;r._shadowPass=!0;q._shadowPass=!0};this.render=function(b,d){u.shadowMapEnabled&&u.shadowMapAutoUpdate&&this.update(b,d)};this.update=function(b,d){var E,D,a,A,n,C,h,f,l,e=[];A=0;v.clearColor(1,1,1,1);v.disable(v.BLEND);v.enable(v.CULL_FACE);v.frontFace(v.CCW);u.shadowMapCullFace===THREE.CullFaceFront?v.cullFace(v.FRONT):v.cullFace(v.BACK);u.setDepthTest(!0);E=0;for(D=b.__lights.length;E<D;E++){if(a=b.__lights[E],a.castShadow){if(a instanceof THREE.DirectionalLight&&a.shadowCascade){for(n=0;n<a.shadowCascadeCount;n++){var k;if(a.shadowCascadeArray[n]){k=a.shadowCascadeArray[n]}else{l=a;h=n;k=new THREE.DirectionalLight;k.isVirtual=!0;k.onlyShadow=!0;k.castShadow=!0;k.shadowCameraNear=l.shadowCameraNear;k.shadowCameraFar=l.shadowCameraFar;k.shadowCameraLeft=l.shadowCameraLeft;k.shadowCameraRight=l.shadowCameraRight;k.shadowCameraBottom=l.shadowCameraBottom;k.shadowCameraTop=l.shadowCameraTop;k.shadowCameraVisible=l.shadowCameraVisible;k.shadowDarkness=l.shadowDarkness;k.shadowBias=l.shadowCascadeBias[h];k.shadowMapWidth=l.shadowCascadeWidth[h];k.shadowMapHeight=l.shadowCascadeHeight[h];k.pointsWorld=[];k.pointsFrustum=[];var c=k.pointsWorld;C=k.pointsFrustum;for(f=0;8>f;f++){c[f]=new THREE.Vector3,C[f]=new THREE.Vector3}c=l.shadowCascadeNearZ[h];l=l.shadowCascadeFarZ[h];C[0].set(-1,-1,c);C[1].set(1,-1,c);C[2].set(-1,1,c);C[3].set(1,1,c);C[4].set(-1,-1,l);C[5].set(1,-1,l);C[6].set(-1,1,l);C[7].set(1,1,l);k.originalCamera=d;C=new THREE.Gyroscope;C.position.copy(a.shadowCascadeOffset);C.add(k);C.add(k.target);d.add(C);a.shadowCascadeArray[n]=k;console.log("Created virtualLight",k)}h=a;c=n;l=h.shadowCascadeArray[c];l.position.copy(h.position);l.target.position.copy(h.target.position);l.lookAt(l.target);l.shadowCameraVisible=h.shadowCameraVisible;l.shadowDarkness=h.shadowDarkness;l.shadowBias=h.shadowCascadeBias[c];C=h.shadowCascadeNearZ[c];h=h.shadowCascadeFarZ[c];l=l.pointsFrustum;l[0].z=C;l[1].z=C;l[2].z=C;l[3].z=C;l[4].z=h;l[5].z=h;l[6].z=h;l[7].z=h;e[A]=k;A++}}else{e[A]=a,A++}}}E=0;for(D=e.length;E<D;E++){a=e[E];a.shadowMap||(n=THREE.LinearFilter,u.shadowMapType===THREE.PCFSoftShadowMap&&(n=THREE.NearestFilter),a.shadowMap=new THREE.WebGLRenderTarget(a.shadowMapWidth,a.shadowMapHeight,{minFilter:n,magFilter:n,format:THREE.RGBAFormat}),a.shadowMapSize=new THREE.Vector2(a.shadowMapWidth,a.shadowMapHeight),a.shadowMatrix=new THREE.Matrix4);if(!a.shadowCamera){if(a instanceof THREE.SpotLight){a.shadowCamera=new THREE.PerspectiveCamera(a.shadowCameraFov,a.shadowMapWidth/a.shadowMapHeight,a.shadowCameraNear,a.shadowCameraFar)}else{if(a instanceof THREE.DirectionalLight){a.shadowCamera=new THREE.OrthographicCamera(a.shadowCameraLeft,a.shadowCameraRight,a.shadowCameraTop,a.shadowCameraBottom,a.shadowCameraNear,a.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}b.add(a.shadowCamera);!0===b.autoUpdate&&b.updateMatrixWorld()}a.shadowCameraVisible&&!a.cameraHelper&&(a.cameraHelper=new THREE.CameraHelper(a.shadowCamera),a.shadowCamera.add(a.cameraHelper));if(a.isVirtual&&k.originalCamera==d){n=d;A=a.shadowCamera;C=a.pointsFrustum;l=a.pointsWorld;m.set(Infinity,Infinity,Infinity);j.set(-Infinity,-Infinity,-Infinity);for(h=0;8>h;h++){c=l[h],c.copy(C[h]),THREE.ShadowMapPlugin.__projector.unprojectVector(c,n),c.applyMatrix4(A.matrixWorldInverse),c.x<m.x&&(m.x=c.x),c.x>j.x&&(j.x=c.x),c.y<m.y&&(m.y=c.y),c.y>j.y&&(j.y=c.y),c.z<m.z&&(m.z=c.z),c.z>j.z&&(j.z=c.z)}A.left=m.x;A.right=j.x;A.top=j.y;A.bottom=m.y;A.updateProjectionMatrix()}A=a.shadowMap;C=a.shadowMatrix;n=a.shadowCamera;n.position.setFromMatrixPosition(a.matrixWorld);i.setFromMatrixPosition(a.target.matrixWorld);n.lookAt(i);n.updateMatrixWorld();n.matrixWorldInverse.getInverse(n.matrixWorld);a.cameraHelper&&(a.cameraHelper.visible=a.shadowCameraVisible);a.shadowCameraVisible&&a.cameraHelper.update();C.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);C.multiply(n.projectionMatrix);C.multiply(n.matrixWorldInverse);o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse);p.setFromMatrix(o);u.setRenderTarget(A);u.clear();l=b.__webglObjects;a=0;for(A=l.length;a<A;a++){h=l[a],C=h.object,h.render=!1,!C.visible||!C.castShadow||(C instanceof THREE.Mesh||C instanceof THREE.ParticleSystem)&&C.frustumCulled&&!p.intersectsObject(C)||(C._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,C.matrixWorld),h.render=!0)}var g;a=0;for(A=l.length;a<A;a++){h=l[a],h.render&&(C=h.object,h=h.buffer,c=C.material instanceof THREE.MeshFaceMaterial?C.material.materials[0]:C.material,f=void 0!==C.geometry.morphTargets&&0<C.geometry.morphTargets.length&&c.morphTargets,g=C instanceof THREE.SkinnedMesh&&c.skinning,f=C.customDepthMaterial?C.customDepthMaterial:g?f?q:r:f?s:t,u.setMaterialFaces(c),h instanceof THREE.BufferGeometry?u.renderBufferDirect(n,b.__lights,null,f,h,C):u.renderBuffer(n,b.__lights,null,f,h,C))}l=b.__webglObjectsImmediate;a=0;for(A=l.length;a<A;a++){h=l[a],C=h.object,C.visible&&C.castShadow&&(C._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,C.matrixWorld),u.renderImmediateObject(n,b.__lights,null,t,C))}}E=u.getClearColor();D=u.getClearAlpha();v.clearColor(E.r,E.g,E.b,D);v.enable(v.BLEND);u.shadowMapCullFace===THREE.CullFaceFront&&v.cullFace(v.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){var aa,Z,Y,X,W,V,U,T,S,R,Q,O,P,H,G,I,E;function D(d,c){return d.z!==c.z?c.z-d.z:c.id-d.id}var F,A,j,C,i,o,M,m;this.init=function(a){F=a.context;A=a;C=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);i=new Uint16Array([0,1,2,0,2,3]);o=F.createBuffer();M=F.createBuffer();F.bindBuffer(F.ARRAY_BUFFER,o);F.bufferData(F.ARRAY_BUFFER,C,F.STATIC_DRAW);F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,M);F.bufferData(F.ELEMENT_ARRAY_BUFFER,i,F.STATIC_DRAW);a=F.createProgram();var b=F.createShader(F.VERTEX_SHADER),c=F.createShader(F.FRAGMENT_SHADER);F.shaderSource(b,["precision "+A.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));F.shaderSource(c,["precision "+A.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));F.compileShader(b);F.compileShader(c);F.attachShader(a,b);F.attachShader(a,c);F.linkProgram(a);m=a;I=F.getAttribLocation(m,"position");E=F.getAttribLocation(m,"uv");aa=F.getUniformLocation(m,"uvOffset");Z=F.getUniformLocation(m,"uvScale");Y=F.getUniformLocation(m,"rotation");X=F.getUniformLocation(m,"scale");W=F.getUniformLocation(m,"color");V=F.getUniformLocation(m,"map");U=F.getUniformLocation(m,"opacity");T=F.getUniformLocation(m,"modelViewMatrix");S=F.getUniformLocation(m,"projectionMatrix");R=F.getUniformLocation(m,"fogType");Q=F.getUniformLocation(m,"fogDensity");O=F.getUniformLocation(m,"fogNear");P=F.getUniformLocation(m,"fogFar");H=F.getUniformLocation(m,"fogColor");G=F.getUniformLocation(m,"alphaTest");a=document.createElement("canvas");a.width=8;a.height=8;b=a.getContext("2d");b.fillStyle="#ffffff";b.fillRect(0,0,a.width,a.height);j=new THREE.Texture(a);j.needsUpdate=!0};this.render=function(c,f,a,b){a=c.__webglSprites;if(b=a.length){F.useProgram(m);F.enableVertexAttribArray(I);F.enableVertexAttribArray(E);F.disable(F.CULL_FACE);F.enable(F.BLEND);F.bindBuffer(F.ARRAY_BUFFER,o);F.vertexAttribPointer(I,2,F.FLOAT,!1,16,0);F.vertexAttribPointer(E,2,F.FLOAT,!1,16,8);F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,M);F.uniformMatrix4fv(S,!1,f.projectionMatrix.elements);F.activeTexture(F.TEXTURE0);F.uniform1i(V,0);var h=0,e=0,g=c.fog;g?(F.uniform3f(H,g.color.r,g.color.g,g.color.b),g instanceof THREE.Fog?(F.uniform1f(O,g.near),F.uniform1f(P,g.far),F.uniform1i(R,1),e=h=1):g instanceof THREE.FogExp2&&(F.uniform1f(Q,g.density),F.uniform1i(R,2),e=h=2)):(F.uniform1i(R,0),e=h=0);for(var k,d=[],g=0;g<b;g++){k=a[g],!1!==k.visible&&(k._modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,k.matrixWorld),k.z=-k._modelViewMatrix.elements[14])}a.sort(D);for(g=0;g<b;g++){k=a[g],!1!==k.visible&&(f=k.material,F.uniform1f(G,f.alphaTest),F.uniformMatrix4fv(T,!1,k._modelViewMatrix.elements),d[0]=k.scale.x,d[1]=k.scale.y,k=c.fog&&f.fog?e:0,h!==k&&(F.uniform1i(R,k),h=k),null!==f.map?(F.uniform2f(aa,f.map.offset.x,f.map.offset.y),F.uniform2f(Z,f.map.repeat.x,f.map.repeat.y)):(F.uniform2f(aa,0,0),F.uniform2f(Z,1,1)),F.uniform1f(U,f.opacity),F.uniform3f(W,f.color.r,f.color.g,f.color.b),F.uniform1f(Y,f.rotation),F.uniform2fv(X,d),A.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),A.setDepthTest(f.depthTest),A.setDepthWrite(f.depthWrite),f.map&&f.map.image&&f.map.image.width?A.setTexture(f.map,0):A.setTexture(j,0),F.drawElements(F.TRIANGLES,6,F.UNSIGNED_SHORT,0))}F.enable(F.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var j,i,p,o,n,m,l=new THREE.Frustum,k=new THREE.Matrix4;this.init=function(b){j=b.context;i=b;b=THREE.ShaderLib.depthRGBA;var a=THREE.UniformsUtils.clone(b.uniforms);p=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});o=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});n=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});m=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});p._shadowPass=!0;o._shadowPass=!0;n._shadowPass=!0;m._shadowPass=!0};this.render=function(d,c){this.enabled&&this.update(d,c)};this.update=function(f,e){var d,b,c,u,h,a;j.clearColor(1,1,1,1);j.disable(j.BLEND);i.setDepthTest(!0);!0===f.autoUpdate&&f.updateMatrixWorld();e.matrixWorldInverse.getInverse(e.matrixWorld);k.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse);l.setFromMatrix(k);i.setRenderTarget(this.renderTarget);i.clear();a=f.__webglObjects;d=0;for(b=a.length;d<b;d++){c=a[d],h=c.object,c.render=!1,!h.visible||(h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem)&&h.frustumCulled&&!l.intersectsObject(h)||(h._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,h.matrixWorld),c.render=!0)}var g;d=0;for(b=a.length;d<b;d++){c=a[d],c.render&&(h=c.object,c=c.buffer,h instanceof THREE.ParticleSystem&&!h.customDepthMaterial||((g=h.material instanceof THREE.MeshFaceMaterial?h.material.materials[0]:h.material)&&i.setMaterialFaces(h.material),u=void 0!==h.geometry.morphTargets&&0<h.geometry.morphTargets.length&&g.morphTargets,g=h instanceof THREE.SkinnedMesh&&g.skinning,u=h.customDepthMaterial?h.customDepthMaterial:g?u?m:n:u?o:p,c instanceof THREE.BufferGeometry?i.renderBufferDirect(e,f.__lights,null,u,c,h):i.renderBuffer(e,f.__lights,null,u,c,h)))}a=f.__webglObjectsImmediate;d=0;for(b=a.length;d<b;d++){c=a[d],h=c.object,h.visible&&(h._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,h.matrixWorld),i.renderImmediateObject(e,f.__lights,null,p,h))}d=i.getClearColor();b=i.getClearAlpha();j.clearColor(d.r,d.g,d.b,b);j.enable(j.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:(function(){try{var a=document.createElement("canvas");return !!window.WebGLRenderingContext&&(a.getContext("webgl")||a.getContext("experimental-webgl"))}catch(b){return false}})(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";a.style.textAlign="center";a.style.background="#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";if(!this.webgl){a.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")}return a},addGetWebGLMessage:function(c){var b,d,a;c=c||{};b=c.parent!==undefined?c.parent:document.body;d=c.id!==undefined?c.id:"oldie";a=Detector.getWebGLErrorMessage();a.id=d;b.appendChild(a)}};if(_typeface_js&&_typeface_js.loadFace){_typeface_js.loadFace({glyphs:{S:{x_min:40.015625,x_max:568.34375,ha:608,o:"m 568 139 l 359 0 l 40 0 l 40 347 l 234 347 l 234 139 l 373 139 l 373 486 l 40 486 l 40 972 l 248 1110 l 568 1110 l 568 763 l 373 763 l 373 972 l 234 972 l 234 625 l 568 625 l 568 139 "},"/":{x_min:19.671875,x_max:677.546875,ha:697,o:"m 677 1175 l 202 -130 l 19 -63 l 494 1241 l 677 1175 "},K:{x_min:44.765625,x_max:572.421875,ha:614,o:"m 572 0 l 377 0 l 377 388 l 308 458 l 238 388 l 238 0 l 44 0 l 44 1110 l 238 1110 l 238 583 l 377 722 l 377 1110 l 572 1110 l 572 722 l 405 555 l 572 388 l 572 0 "},"7":{x_min:21.03125,x_max:548.6875,ha:676,o:"m 548 0 l 354 0 l 354 972 l 215 972 l 215 861 l 21 729 l 21 972 l 229 1110 l 548 1110 l 548 0 "},d:{x_min:21.03125,x_max:548.6875,ha:589,o:"m 548 139 l 340 0 l 21 0 l 21 694 l 229 833 l 354 833 l 354 1110 l 548 1110 l 548 139 m 354 139 l 354 694 l 215 694 l 215 139 l 354 139 "},",":{x_min:87.484375,x_max:226.53125,ha:319,o:"m 226 139 l 198 -139 l 115 -139 l 87 139 l 226 139 "},Y:{x_min:26.453125,x_max:554.109375,ha:581,o:"m 554 583 l 387 416 l 387 0 l 193 0 l 193 416 l 26 583 l 26 1110 l 221 1110 l 221 583 l 290 514 l 359 583 l 359 1110 l 554 1110 l 554 583 "},E:{x_min:42.734375,x_max:571.0625,ha:603,o:"m 571 0 l 42 0 l 42 972 l 251 1110 l 571 1110 l 571 763 l 376 763 l 376 972 l 237 972 l 237 625 l 473 625 l 376 486 l 237 486 l 237 139 l 376 139 l 376 347 l 571 347 l 571 0 "},y:{x_min:38.65625,x_max:567,ha:607,o:"m 567 -139 l 358 -278 l 38 -278 l 38 -139 l 372 -139 l 372 0 l 38 0 l 38 833 l 233 833 l 233 139 l 372 139 l 372 833 l 567 833 l 567 -139 "},'"':{x_min:111.234375,x_max:499.84375,ha:612,o:"m 499 1110 l 472 833 l 388 833 l 360 1110 l 499 1110 m 250 1110 l 222 833 l 139 833 l 111 1110 l 250 1110 "},g:{x_min:37.296875,x_max:565.640625,ha:606,o:"m 565 -139 l 356 -278 l 37 -278 l 37 -139 l 370 -139 l 370 0 l 37 0 l 37 694 l 245 833 l 565 833 l 565 -139 m 370 139 l 370 694 l 231 694 l 231 139 l 370 139 "},e:{x_min:38.65625,x_max:567,ha:600,o:"m 567 139 l 358 0 l 38 0 l 38 694 l 247 833 l 567 833 l 567 486 l 358 347 l 233 347 l 233 139 l 372 139 l 372 208 l 567 208 l 567 139 m 372 486 l 372 694 l 233 694 l 233 486 l 372 486 "},J:{x_min:6.78125,x_max:534.4375,ha:578,o:"m 534 139 l 326 0 l 215 0 l 6 139 l 6 381 l 201 250 l 201 139 l 340 139 l 340 1110 l 534 1110 l 534 139 "},"|":{x_min:124.796875,x_max:319.4375,ha:452,o:"m 319 -139 l 124 -139 l 124 1249 l 319 1249 l 319 -139 "},"^":{x_min:62.390625,x_max:617.859375,ha:682,o:"m 617 555 l 479 555 l 340 962 l 201 555 l 62 555 l 257 1110 l 423 1110 l 617 555 "},q:{x_min:21.03125,x_max:548.6875,ha:591,o:"m 548 -278 l 354 -278 l 354 0 l 21 0 l 21 694 l 229 833 l 548 833 l 548 -278 m 354 139 l 354 694 l 215 694 l 215 139 l 354 139 "},b:{x_min:41.375,x_max:569.703125,ha:591,o:"m 569 139 l 360 0 l 41 0 l 41 1110 l 236 1110 l 236 833 l 569 833 l 569 139 m 375 139 l 375 694 l 236 694 l 236 139 l 375 139 "},D:{x_min:46.125,x_max:573.78125,ha:615,o:"m 573 139 l 365 0 l 46 0 l 46 1110 l 365 1110 l 573 972 l 573 139 m 379 139 l 379 972 l 240 972 l 240 139 l 379 139 "},z:{x_min:30.515625,x_max:558.171875,ha:590,o:"m 558 0 l 238 0 l 30 139 l 364 694 l 30 694 l 30 833 l 349 833 l 558 694 l 225 139 l 558 139 l 558 0 "},"î€€":{x_min:0,x_max:834.21875,ha:834,o:"m 0 834 l 834 834 l 834 0 l 0 0 l 0 834 "},w:{x_min:37.296875,x_max:898.640625,ha:936,o:"m 898 139 l 690 0 l 245 0 l 37 139 l 37 701 l 231 833 l 231 139 l 370 139 l 370 694 l 565 562 l 565 139 l 704 139 l 704 833 l 898 701 l 898 139 "},"$":{x_min:82.0625,x_max:609.71875,ha:695,o:"m 609 208 l 442 96 l 442 -69 l 248 -69 l 248 69 l 82 69 l 82 347 l 276 347 l 276 208 l 415 208 l 415 486 l 82 486 l 82 902 l 248 1013 l 248 1180 l 442 1180 l 442 1041 l 609 1041 l 609 763 l 415 763 l 415 902 l 276 902 l 276 625 l 609 625 l 609 208 "},"â„˘":{x_min:84.78125,x_max:1179.421875,ha:1302,o:"m 1179 486 l 1033 486 l 1033 1007 l 929 1007 l 929 486 l 783 584 l 783 1007 l 678 1007 l 678 486 l 533 486 l 533 1007 l 417 1007 l 417 486 l 271 486 l 271 1007 l 84 1007 l 158 1110 l 637 1110 l 591 1047 l 689 1110 l 1022 1110 l 1179 1007 l 1179 486 "},"\\":{x_min:18.3125,x_max:676.1875,ha:696,o:"m 676 -63 l 493 -130 l 18 1175 l 201 1241 l 676 -63 "},"~":{x_min:84.78125,x_max:612.4375,ha:701,o:"m 612 653 q 444 569 514 569 q 348 632 397 569 q 252 694 299 694 q 84 611 183 694 l 84 777 q 252 861 183 861 q 348 798 299 861 q 444 735 397 735 q 612 819 514 735 l 612 653 "},"-":{x_min:124.796875,x_max:680.9375,ha:808,o:"m 680 486 l 124 486 l 124 625 l 680 625 l 680 486 "},Q:{x_min:38.65625,x_max:608.359375,ha:640,o:"m 608 0 l 247 0 l 38 139 l 38 972 l 247 1110 l 358 1110 l 567 972 l 567 208 l 497 139 l 608 139 l 608 0 m 372 139 l 372 972 l 233 972 l 233 139 l 372 139 "},M:{x_min:42.734375,x_max:904.078125,ha:947,o:"m 904 0 l 710 0 l 710 972 l 571 972 l 571 0 l 376 132 l 376 972 l 237 972 l 237 0 l 42 0 l 42 972 l 251 1110 l 695 1110 l 904 972 l 904 0 "},C:{x_min:42.734375,x_max:571.0625,ha:611,o:"m 571 139 l 362 0 l 42 0 l 42 972 l 251 1110 l 571 1110 l 571 763 l 376 763 l 376 972 l 237 972 l 237 139 l 376 139 l 376 347 l 571 347 l 571 139 "},"[":{x_min:124.796875,x_max:458.484375,ha:534,o:"m 458 -139 l 124 -139 l 124 1249 l 458 1249 l 458 1110 l 319 1110 l 319 0 l 458 0 l 458 -139 "},L:{x_min:41.375,x_max:569.703125,ha:581,o:"m 569 0 l 250 0 l 41 139 l 41 1110 l 236 1110 l 236 139 l 375 139 l 375 250 l 569 381 l 569 0 "},"!":{x_min:105.796875,x_max:299.78125,ha:411,o:"m 299 1110 l 271 333 l 133 333 l 105 1110 l 299 1110 m 299 96 q 271 28 299 56 q 202 0 242 0 q 134 28 162 0 q 105 96 105 56 q 134 166 105 137 q 202 194 162 194 q 271 166 242 194 q 299 96 299 137 "}," ":{x_min:0,x_max:0,ha:695},"{":{x_min:55.609375,x_max:458.484375,ha:543,o:"m 458 -139 l 333 -139 l 124 0 l 124 451 l 55 520 l 55 590 l 124 659 l 124 1110 l 333 1249 l 458 1249 l 458 1110 l 319 1110 l 319 625 l 250 555 l 319 486 l 319 0 l 458 0 l 458 -139 "},X:{x_min:41.375,x_max:569.703125,ha:608,o:"m 569 0 l 375 0 l 375 388 l 305 458 l 236 388 l 236 0 l 41 0 l 41 388 l 208 555 l 41 722 l 41 1110 l 236 1110 l 236 722 l 305 653 l 375 722 l 375 1110 l 569 1110 l 569 722 l 402 555 l 569 388 l 569 0 "},P:{x_min:40.015625,x_max:568.34375,ha:582,o:"m 568 625 l 359 486 l 234 486 l 234 0 l 40 0 l 40 972 l 248 1110 l 568 1110 l 568 625 m 373 625 l 373 972 l 234 972 l 234 625 l 373 625 "},"%":{x_min:51.546875,x_max:1237.75,ha:1289,o:"m 1237 139 l 1029 0 l 918 0 l 710 139 l 710 416 l 918 555 l 1029 555 l 1237 416 l 1237 139 m 973 1175 l 498 -130 l 315 -63 l 790 1241 l 973 1175 m 579 694 l 370 555 l 259 555 l 51 694 l 51 972 l 259 1110 l 370 1110 l 579 972 l 579 694 m 1043 139 l 1043 416 l 904 416 l 904 139 l 1043 139 m 384 694 l 384 972 l 245 972 l 245 694 l 384 694 "},"#":{x_min:75.28125,x_max:811.15625,ha:886,o:"m 811 527 l 638 527 l 626 375 l 487 375 l 499 527 l 347 527 l 335 375 l 196 375 l 208 527 l 75 527 l 75 666 l 221 666 l 234 819 l 75 819 l 75 958 l 247 958 l 259 1110 l 398 1110 l 385 958 l 539 958 l 551 1110 l 690 1110 l 677 958 l 811 958 l 811 819 l 665 819 l 651 666 l 811 666 l 811 527 m 526 819 l 373 819 l 359 666 l 512 666 l 526 819 "},_:{x_min:0,x_max:694.5,ha:695,o:"m 694 0 l 0 0 l 0 111 l 694 111 l 694 0 "},"+":{x_min:30.515625,x_max:585.984375,ha:618,o:"m 585 486 l 377 486 l 377 278 l 238 278 l 238 486 l 30 486 l 30 625 l 238 625 l 238 833 l 377 833 l 377 625 l 585 625 l 585 486 "},")":{x_min:73.921875,x_max:406.9375,ha:522,o:"m 406 0 l 198 -139 l 73 -139 l 73 0 l 212 0 l 212 1110 l 73 1110 l 73 1249 l 198 1249 l 406 1110 l 406 0 "},"'":{x_min:87.484375,x_max:226.53125,ha:319,o:"m 226 1110 l 198 833 l 115 833 l 87 1110 l 226 1110 "},"}":{x_min:82.0625,x_max:484.921875,ha:543,o:"m 484 520 l 415 451 l 415 0 l 206 -139 l 82 -139 l 82 0 l 221 0 l 221 486 l 290 555 l 221 625 l 221 1110 l 82 1110 l 82 1249 l 206 1249 l 415 1110 l 415 659 l 484 590 l 484 520 "},a:{x_min:33.234375,x_max:560.890625,ha:600,o:"m 560 139 l 352 0 l 33 0 l 33 347 l 241 486 l 366 486 l 366 694 l 227 694 l 227 625 l 33 625 l 33 694 l 241 833 l 560 833 l 560 139 m 366 139 l 366 347 l 227 347 l 227 139 l 366 139 "},T:{x_min:13.5625,x_max:708.0625,ha:722,o:"m 708 1110 l 611 972 l 458 972 l 458 0 l 263 0 l 263 972 l 13 972 l 111 1110 l 708 1110 "},"=":{x_min:124.796875,x_max:680.9375,ha:742,o:"m 680 625 l 124 625 l 124 763 l 680 763 l 680 625 m 680 347 l 124 347 l 124 486 l 680 486 l 680 347 "},N:{x_min:44.765625,x_max:572.421875,ha:615,o:"m 572 0 l 377 0 l 377 972 l 238 972 l 238 0 l 44 0 l 44 1110 l 364 1110 l 572 972 l 572 0 "},"2":{x_min:109.875,x_max:637.53125,ha:724,o:"m 637 0 l 109 0 l 109 486 l 318 625 l 442 625 l 442 972 l 304 972 l 304 763 l 109 763 l 109 972 l 318 1110 l 637 1110 l 637 625 l 429 486 l 304 486 l 304 139 l 442 139 l 442 347 l 637 347 l 637 0 "},j:{x_min:37.296875,x_max:231.953125,ha:272,o:"m 231 1013 q 203 945 231 973 q 134 916 174 916 q 65 945 94 916 q 37 1013 37 973 q 65 1082 37 1053 q 134 1110 94 1110 q 203 1082 174 1110 q 231 1013 231 1053 m 231 -278 l 37 -278 l 37 833 l 231 833 l 231 -278 "},Z:{x_min:26.453125,x_max:554.109375,ha:582,o:"m 554 0 l 234 0 l 26 139 l 359 972 l 26 972 l 26 1110 l 345 1110 l 554 972 l 221 139 l 554 139 l 554 0 "},u:{x_min:41.375,x_max:569.703125,ha:608,o:"m 569 139 l 360 0 l 41 0 l 41 833 l 236 833 l 236 139 l 375 139 l 375 833 l 569 833 l 569 139 "},"1":{x_min:124.796875,x_max:319.4375,ha:452,o:"m 319 0 l 124 0 l 124 1110 l 319 1110 l 319 0 "},k:{x_min:41.375,x_max:569.703125,ha:589,o:"m 569 0 l 375 0 l 375 250 l 305 319 l 236 250 l 236 0 l 41 0 l 41 1110 l 236 1110 l 236 444 l 375 583 l 375 833 l 569 833 l 569 583 l 402 416 l 569 250 l 569 0 "},"â‚¬":{x_min:115.296875,x_max:781.984375,ha:900,o:"m 781 139 l 573 0 l 254 0 l 254 388 l 115 388 l 115 499 l 254 499 l 254 611 l 115 611 l 115 722 l 254 722 l 254 972 l 462 1110 l 781 1110 l 781 833 l 587 833 l 587 972 l 448 972 l 448 722 l 670 722 l 670 611 l 448 611 l 448 499 l 601 499 l 601 388 l 448 388 l 448 139 l 587 139 l 587 278 l 781 278 l 781 139 "},"<":{x_min:10.859375,x_max:494.421875,ha:590,o:"m 494 269 l 396 170 l 10 555 l 396 940 l 494 841 l 206 555 l 494 269 "},t:{x_min:8.140625,x_max:563.609375,ha:574,o:"m 563 833 l 466 694 l 383 694 l 383 0 l 189 0 l 189 694 l 8 694 l 105 833 l 189 833 l 189 1110 l 383 1110 l 383 833 l 563 833 "},W:{x_min:38.65625,x_max:900,ha:940,o:"m 900 139 l 691 0 l 247 0 l 38 139 l 38 979 l 233 1110 l 233 139 l 372 139 l 372 972 l 567 840 l 567 139 l 705 139 l 705 1110 l 900 979 l 900 139 "},v:{x_min:31.875,x_max:559.53125,ha:591,o:"m 559 263 l 295 0 l 31 263 l 31 833 l 226 833 l 226 263 l 295 194 l 365 263 l 365 833 l 559 833 l 559 263 "},">":{x_min:92.921875,x_max:576.484375,ha:587,o:"m 576 555 l 191 170 l 92 269 l 380 555 l 92 841 l 191 940 l 576 555 "},s:{x_min:35.953125,x_max:563.609375,ha:602,o:"m 563 139 l 355 0 l 35 0 l 35 208 l 230 208 l 230 139 l 369 139 l 369 347 l 35 347 l 35 694 l 244 833 l 563 833 l 563 625 l 369 625 l 369 694 l 230 694 l 230 486 l 563 486 l 563 139 "},B:{x_min:42.734375,x_max:571.0625,ha:614,o:"m 571 139 l 362 0 l 42 0 l 42 972 l 251 1110 l 571 1110 l 571 653 l 438 555 l 571 458 l 571 139 m 376 625 l 376 972 l 237 972 l 237 625 l 376 625 m 376 139 l 376 486 l 237 486 l 237 139 l 376 139 "},"?":{x_min:104.453125,x_max:632.109375,ha:669,o:"m 632 625 l 423 486 l 298 486 l 298 333 l 104 333 l 104 486 l 312 625 l 437 625 l 437 972 l 298 972 l 298 763 l 104 763 l 104 972 l 312 1110 l 632 1110 l 632 625 m 298 96 q 269 28 298 56 q 201 0 241 0 q 132 28 161 0 q 104 96 104 56 q 132 166 104 137 q 201 194 161 194 q 269 166 241 194 q 298 96 298 137 "},H:{x_min:44.765625,x_max:572.421875,ha:618,o:"m 572 0 l 377 0 l 377 486 l 238 486 l 238 0 l 44 0 l 44 1110 l 238 1110 l 238 625 l 377 625 l 377 1110 l 572 1110 l 572 0 "},c:{x_min:38.65625,x_max:567,ha:599,o:"m 567 139 l 358 0 l 38 0 l 38 694 l 247 833 l 567 833 l 567 625 l 372 625 l 372 694 l 233 694 l 233 139 l 372 139 l 372 208 l 567 208 l 567 139 "},"&":{x_min:115.296875,x_max:712.8125,ha:790,o:"m 712 486 l 642 486 l 642 139 l 434 0 l 115 0 l 115 458 l 247 555 l 115 653 l 115 972 l 323 1110 l 642 1110 l 642 763 l 448 763 l 448 972 l 309 972 l 309 625 l 712 625 l 712 486 m 448 139 l 448 486 l 309 486 l 309 139 l 448 139 "},I:{x_min:44.765625,x_max:238.734375,ha:286,o:"m 238 0 l 44 0 l 44 1110 l 238 1110 l 238 0 "},G:{x_min:41.375,x_max:569.703125,ha:611,o:"m 569 139 l 360 0 l 41 0 l 41 972 l 250 1110 l 569 1110 l 569 763 l 375 763 l 375 972 l 236 972 l 236 139 l 375 139 l 375 486 l 319 486 l 319 555 l 569 555 l 569 139 "},"(":{x_min:111.234375,x_max:444.234375,ha:521,o:"m 444 -139 l 319 -139 l 111 0 l 111 1110 l 319 1249 l 444 1249 l 444 1110 l 305 1110 l 305 0 l 444 0 l 444 -139 "},"`":{x_min:29.15625,x_max:196,ha:272,o:"m 196 1180 l 126 1180 l 29 1319 l 140 1319 l 196 1180 "},U:{x_min:42.734375,x_max:571.0625,ha:612,o:"m 571 139 l 362 0 l 42 0 l 42 1110 l 237 1110 l 237 139 l 376 139 l 376 1110 l 571 1110 l 571 139 "},F:{x_min:41.375,x_max:569.703125,ha:581,o:"m 569 763 l 375 763 l 375 972 l 236 972 l 236 625 l 472 625 l 375 486 l 236 486 l 236 0 l 41 0 l 41 972 l 250 1110 l 569 1110 l 569 763 "},r:{x_min:41.375,x_max:569.703125,ha:578,o:"m 569 625 l 375 625 l 375 694 l 236 694 l 236 0 l 41 0 l 41 833 l 236 833 l 236 777 q 444 833 442 833 l 569 833 l 569 625 "},":":{x_min:95.625,x_max:290.28125,ha:393,o:"m 290 555 q 261 486 290 515 q 193 458 233 458 q 124 486 152 458 q 95 555 95 515 q 124 624 95 596 q 193 653 152 653 q 261 624 233 653 q 290 555 290 596 m 290 96 q 261 28 290 56 q 193 0 233 0 q 124 28 152 0 q 95 96 95 56 q 124 166 95 137 q 193 194 152 194 q 261 166 233 194 q 290 96 290 137 "},x:{x_min:41.375,x_max:569.703125,ha:607,o:"m 569 0 l 375 0 l 375 250 l 305 319 l 236 250 l 236 0 l 41 0 l 41 250 l 208 416 l 41 583 l 41 833 l 236 833 l 236 583 l 305 514 l 375 583 l 375 833 l 569 833 l 569 583 l 402 416 l 569 250 l 569 0 "},"*":{x_min:52.90625,x_max:723.65625,ha:778,o:"m 723 649 l 654 530 l 458 642 l 458 416 l 319 416 l 319 642 l 122 530 l 52 649 l 250 763 l 52 877 l 122 996 l 319 885 l 319 1110 l 458 1110 l 458 885 l 654 996 l 723 877 l 527 763 l 723 649 "},V:{x_min:34.59375,x_max:562.25,ha:598,o:"m 562 263 l 298 0 l 34 263 l 34 1110 l 229 1110 l 229 263 l 298 194 l 368 263 l 368 1110 l 562 1110 l 562 263 "},h:{x_min:41.375,x_max:569.703125,ha:593,o:"m 569 0 l 375 0 l 375 694 l 236 694 l 236 0 l 41 0 l 41 1110 l 236 1110 l 236 833 l 569 833 l 569 0 "},"0":{x_min:112.578125,x_max:640.25,ha:754,o:"m 640 139 l 432 0 l 320 0 l 112 139 l 112 972 l 320 1110 l 432 1110 l 640 972 l 640 139 m 445 139 l 445 972 l 307 972 l 307 139 l 445 139 "},".":{x_min:86.140625,x_max:280.78125,ha:374,o:"m 280 96 q 252 28 280 56 q 183 0 223 0 q 114 28 143 0 q 86 96 86 56 q 114 166 86 137 q 183 194 143 194 q 252 166 223 194 q 280 96 280 137 "},"@":{x_min:122.078125,x_max:914.25,ha:1026,o:"m 914 0 l 122 0 l 122 729 l 279 833 l 914 833 l 914 312 l 758 208 l 320 208 l 320 365 l 476 469 l 571 469 l 571 520 l 466 520 l 466 499 l 320 499 l 320 520 l 476 625 l 716 625 l 716 312 l 768 312 l 768 729 l 267 729 l 267 104 l 914 104 l 914 0 m 571 312 l 571 365 l 466 365 l 466 312 l 571 312 "},f:{x_min:38.65625,x_max:441.515625,ha:449,o:"m 441 1110 l 344 972 l 233 972 l 233 625 l 372 625 l 275 486 l 233 486 l 233 0 l 38 0 l 38 972 l 247 1110 l 441 1110 "},";":{x_min:67.828125,x_max:262.46875,ha:335,o:"m 262 555 q 233 486 262 515 q 165 458 205 458 q 96 486 124 458 q 67 555 67 515 q 96 624 67 596 q 165 653 124 653 q 233 624 205 653 q 262 555 262 596 m 234 139 l 206 -139 l 123 -139 l 95 139 l 234 139 "},i:{x_min:40.015625,x_max:234.671875,ha:277,o:"m 234 1013 q 206 945 234 973 q 137 916 177 916 q 68 945 96 916 q 40 1013 40 973 q 68 1082 40 1053 q 137 1110 96 1110 q 206 1082 177 1110 q 234 1013 234 1053 m 234 0 l 40 0 l 40 833 l 234 833 l 234 0 "},"6":{x_min:118.015625,x_max:645.671875,ha:764,o:"m 645 139 l 437 0 l 118 0 l 118 972 l 326 1110 l 645 1110 l 645 763 l 451 763 l 451 972 l 312 972 l 312 625 l 645 625 l 645 139 m 451 139 l 451 486 l 312 486 l 312 139 l 451 139 "},A:{x_min:42.734375,x_max:571.0625,ha:615,o:"m 571 0 l 376 0 l 376 305 l 237 305 l 237 0 l 42 0 l 42 972 l 251 1110 l 362 1110 l 571 972 l 571 0 m 376 444 l 376 972 l 237 972 l 237 444 l 376 444 "},n:{x_min:41.375,x_max:569.703125,ha:608,o:"m 569 0 l 375 0 l 375 694 l 236 694 l 236 0 l 41 0 l 41 833 l 360 833 l 569 694 l 569 0 "},O:{x_min:38.65625,x_max:567,ha:606,o:"m 567 139 l 358 0 l 247 0 l 38 139 l 38 972 l 247 1110 l 358 1110 l 567 972 l 567 139 m 372 139 l 372 972 l 233 972 l 233 139 l 372 139 "},"3":{x_min:107.15625,x_max:634.8125,ha:750,o:"m 634 139 l 426 0 l 107 0 l 107 347 l 301 347 l 301 139 l 440 139 l 440 486 l 301 486 l 204 625 l 440 625 l 440 972 l 301 972 l 301 763 l 107 763 l 107 972 l 315 1110 l 634 1110 l 634 653 l 502 555 l 634 458 l 634 139 "},"]":{x_min:73.921875,x_max:406.9375,ha:536,o:"m 406 -139 l 73 -139 l 73 0 l 212 0 l 212 1110 l 73 1110 l 73 1249 l 406 1249 l 406 -139 "},m:{x_min:38.65625,x_max:900,ha:940,o:"m 900 0 l 705 0 l 705 694 l 567 694 l 567 0 l 372 132 l 372 694 l 233 694 l 233 0 l 38 0 l 38 694 l 247 833 l 691 833 l 900 694 l 900 0 "},"9":{x_min:115.296875,x_max:642.953125,ha:764,o:"m 642 139 l 434 0 l 115 0 l 115 347 l 309 347 l 309 139 l 448 139 l 448 486 l 115 486 l 115 972 l 323 1110 l 642 1110 l 642 139 m 448 625 l 448 972 l 309 972 l 309 625 l 448 625 "},l:{x_min:41.375,x_max:236.015625,ha:281,o:"m 236 0 l 41 0 l 41 1110 l 236 1110 l 236 0 "},"8":{x_min:113.9375,x_max:641.59375,ha:757,o:"m 641 139 l 433 0 l 113 0 l 113 458 l 259 555 l 113 653 l 113 972 l 322 1110 l 641 1110 l 641 653 l 495 555 l 641 458 l 641 139 m 446 625 l 446 972 l 308 972 l 308 625 l 446 625 m 446 139 l 446 486 l 308 486 l 308 139 l 446 139 "},p:{x_min:38.65625,x_max:567,ha:587,o:"m 567 139 l 358 0 l 233 0 l 233 -278 l 38 -278 l 38 694 l 247 833 l 567 833 l 567 139 m 372 139 l 372 694 l 233 694 l 233 139 l 372 139 "},"4":{x_min:80.703125,x_max:608.359375,ha:736,o:"m 608 0 l 413 0 l 413 208 l 80 208 l 80 1110 l 275 1110 l 275 347 l 413 347 l 413 1110 l 608 1110 l 608 0 "},R:{x_min:40.015625,x_max:568.34375,ha:610,o:"m 568 0 l 373 0 l 373 486 l 234 486 l 234 0 l 40 0 l 40 972 l 248 1110 l 568 1110 l 568 653 l 436 555 l 568 458 l 568 0 m 373 625 l 373 972 l 234 972 l 234 625 l 373 625 "},"\r":{x_min:0,x_max:0,ha:695},o:{x_min:34.59375,x_max:562.25,ha:598,o:"m 562 139 l 354 0 l 242 0 l 34 139 l 34 694 l 242 833 l 354 833 l 562 694 l 562 139 m 368 139 l 368 694 l 229 694 l 229 139 l 368 139 "},"5":{x_min:124.796875,x_max:653.125,ha:771,o:"m 653 139 l 444 0 l 124 0 l 124 347 l 319 347 l 319 139 l 458 139 l 458 486 l 124 486 l 124 1110 l 653 1110 l 653 763 l 458 763 l 458 972 l 319 972 l 319 625 l 653 625 l 653 139 "}},cssFontWeight:"bold",ascender:1389,underlinePosition:-133,cssFontStyle:"normal",boundingBox:{yMin:-278.078125,xMin:0,yMax:1319.828125,xMax:1237.75},resolution:1000,original_font_information:{postscript_name:"SFArcheryBlack",version_string:"ver 2.0; 2001. Freeware.",vendor_url:"http://www.shyfonts.com/",full_font_name:"SF Archery Black Regular",font_family_name:"SF Archery Black",copyright:"Copyright (c) ShyFonts Type Foundry, 2001. All rights reserved.",description:"SF Archery Black is a trademark of the ShyFonts Type Foundry.",trademark:"SF Archery Black is a trademark of the ShyFonts Type Foundry.",designer:"ShyFonts Type Foundry",designer_url:"http://www.shyfonts.com/",unique_font_identifier:"ShyFontsTypeFoundry: SF Archery Black: 2001",license_url:"",license_description:"",manufacturer_name:"",font_sub_family_name:"Regular"},descender:-306,familyName:"SF Archery Black",lineHeight:1694,underlineThickness:20})}THREE.BufferGeometryUtils={fromGeometry:function geometryToBufferGeometry(f,G){if(f instanceof THREE.BufferGeometry){return f}G=G||{vertexColors:THREE.NoColors};var g=f.vertices;var e=f.faces;var F=f.faceVertexUvs;var t=G.vertexColors;var d=F[0].length>0;var N=e[0].vertexNormals.length==3;var q=new THREE.BufferGeometry();q.attributes={position:{itemSize:3,array:new Float32Array(e.length*3*3)},normal:{itemSize:3,array:new Float32Array(e.length*3*3)}};var k=q.attributes.position.array;var r=q.attributes.normal.array;if(t!==THREE.NoColors){q.attributes.color={itemSize:3,array:new Float32Array(e.length*3*3)};var o=q.attributes.color.array}if(d===true){q.attributes.uv={itemSize:2,array:new Float32Array(e.length*3*2)};var p=q.attributes.uv.array}for(var B=0,A=0,v=0;B<e.length;B++,A+=6,v+=9){var m=e[B];var M=g[m.a];var L=g[m.b];var J=g[m.c];k[v]=M.x;k[v+1]=M.y;k[v+2]=M.z;k[v+3]=L.x;k[v+4]=L.y;k[v+5]=L.z;k[v+6]=J.x;k[v+7]=J.y;k[v+8]=J.z;if(N===true){var l=m.vertexNormals[0];var j=m.vertexNormals[1];var h=m.vertexNormals[2];r[v]=l.x;r[v+1]=l.y;r[v+2]=l.z;r[v+3]=j.x;r[v+4]=j.y;r[v+5]=j.z;r[v+6]=h.x;r[v+7]=h.y;r[v+8]=h.z}else{var u=m.normal;r[v]=u.x;r[v+1]=u.y;r[v+2]=u.z;r[v+3]=u.x;r[v+4]=u.y;r[v+5]=u.z;r[v+6]=u.x;r[v+7]=u.y;r[v+8]=u.z}if(t===THREE.FaceColors){var s=m.color;o[v]=s.r;o[v+1]=s.g;o[v+2]=s.b;o[v+3]=s.r;o[v+4]=s.g;o[v+5]=s.b;o[v+6]=s.r;o[v+7]=s.g;o[v+8]=s.b}else{if(t===THREE.VertexColors){var K=m.vertexColors[0];var I=m.vertexColors[1];var H=m.vertexColors[2];o[v]=K.r;o[v+1]=K.g;o[v+2]=K.b;o[v+3]=I.r;o[v+4]=I.g;o[v+5]=I.b;o[v+6]=H.r;o[v+7]=H.g;o[v+8]=H.b}}if(d===true){var E=F[0][B][0];var D=F[0][B][1];var C=F[0][B][2];p[A]=E.x;p[A+1]=E.y;p[A+2]=D.x;p[A+3]=D.y;p[A+4]=C.x;p[A+5]=C.y}}q.computeBoundingSphere();return q}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")};THREE.DigitalGlitch={uniforms:{tDiffuse:{type:"t",value:null},tDisp:{type:"t",value:null},byp:{type:"i",value:0},amount:{type:"f",value:0.08},angle:{type:"f",value:0.02},seed:{type:"f",value:0.02},seed_x:{type:"f",value:0.02},seed_y:{type:"f",value:0.02},distortion_x:{type:"f",value:0.5},distortion_y:{type:"f",value:0.6},col_s:{type:"f",value:0.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","if(byp<1) {","vec2 p = vUv;","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D (tDisp, p*seed*seed);","if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","if(seed_x>0.){","p.y = 1. - (p.y + distortion_y);","}","else {","p.y = distortion_y;","}","}","if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","if(seed_y>0.){","p.x=distortion_x;","}","else {","p.x = 1. - (p.x + distortion_x);","}","}","p.x+=normal.x*seed_x*(seed/5.);","p.y+=normal.y*seed_y*(seed/5.);","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, p + offset);","vec4 cga = texture2D(tDiffuse, p);","vec4 cb = texture2D(tDiffuse, p - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","gl_FragColor = gl_FragColor+ snow;","}","else {","gl_FragColor=texture2D (tDiffuse, vUv);","}","}"].join("\n")};THREE.GlitchPass=function(a){if(THREE.DigitalGlitch===undefined){console.error("THREE.GlitchPass relies on THREE.DigitalGlitch")}var b=THREE.DigitalGlitch;this.uniforms=THREE.UniformsUtils.clone(b.uniforms);if(a==undefined){a=64}this.uniforms.tDisp.value=this.generateHeightmap(a);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader});console.log(this.material);this.enabled=true;this.renderToScreen=false;this.needsSwap=true;this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene();this.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);this.scene.add(this.quad);this.goWild=false;this.curF=0;this.generateTrigger()};THREE.GlitchPass.prototype={render:function(b,c,a,d){this.uniforms.tDiffuse.value=a;this.uniforms.seed.value=Math.random();this.uniforms.byp.value=0;if(this.curF%this.randX==0||this.goWild==true){this.uniforms.amount.value=Math.random()/30;this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI);this.uniforms.seed_x.value=THREE.Math.randFloat(-1,1);this.uniforms.seed_y.value=THREE.Math.randFloat(-1,1);this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1);this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1);this.curF=0;this.generateTrigger()}else{if(this.curF%this.randX<this.randX/5){this.uniforms.amount.value=Math.random()/90;this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI);this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1);this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1);this.uniforms.seed_x.value=THREE.Math.randFloat(-0.3,0.3);this.uniforms.seed_y.value=THREE.Math.randFloat(-0.3,0.3)}else{if(this.goWild==false){this.uniforms.byp.value=1}}}this.curF++;this.quad.material=this.material;if(this.renderToScreen){b.render(this.scene,this.camera)}else{b.render(this.scene,this.camera,c,false)}},generateTrigger:function(){this.randX=THREE.Math.randInt(120,240)},generateHeightmap:function(c){var a=new Float32Array(c*c*3);console.log(c);var e=c*c;for(var b=0;b<e;b++){var f=THREE.Math.randFloat(0,1);a[b*3+0]=f;a[b*3+1]=f;a[b*3+2]=f}var d=new THREE.DataTexture(a,c,c,THREE.RGBFormat,THREE.FloatType);console.log(d);console.log(c);d.minFilter=THREE.NearestFilter;d.magFilter=THREE.NearestFilter;d.needsUpdate=true;d.flipY=false;return d}};THREE.EffectComposer=function(e,d){this.renderer=e;if(d===undefined){var b=window.innerWidth||1;var a=window.innerHeight||1;var c={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:false};d=new THREE.WebGLRenderTarget(b,a,c)}this.renderTarget1=d;this.renderTarget2=d.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];if(THREE.CopyShader===undefined){console.error("THREE.EffectComposer relies on THREE.CopyShader")}this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},insertPass:function(b,a){this.passes.splice(a,0,b)},render:function(f){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var a=false;var e,d,b=this.passes.length;for(d=0;d<b;d++){e=this.passes[d];if(!e.enabled){continue}e.render(this.renderer,this.writeBuffer,this.readBuffer,f,a);if(e.needsSwap){if(a){var c=this.renderer.context;c.stencilFunc(c.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,f);c.stencilFunc(c.EQUAL,1,4294967295)}this.swapBuffers()}if(e instanceof THREE.MaskPass){a=true}else{if(e instanceof THREE.ClearMaskPass){a=false}}}},reset:function(a){if(a===undefined){a=this.renderTarget1.clone();a.width=window.innerWidth;a.height=window.innerHeight}this.renderTarget1=a;this.renderTarget2=a.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(b,a){var c=this.renderTarget1.clone();c.width=b;c.height=a;this.reset(c)}};THREE.RenderPass=function(e,c,a,d,b){this.scene=e;this.camera=c;this.overrideMaterial=a;this.clearColor=d;this.clearAlpha=(b!==undefined)?b:1;this.oldClearColor=new THREE.Color();this.oldClearAlpha=1;this.enabled=true;this.clear=true;this.needsSwap=false};THREE.RenderPass.prototype={render:function(b,c,a,d){this.scene.overrideMaterial=this.overrideMaterial;if(this.clearColor){this.oldClearColor.copy(b.getClearColor());this.oldClearAlpha=b.getClearAlpha();b.setClearColor(this.clearColor,this.clearAlpha)}b.render(this.scene,this.camera,a,this.clear);if(this.clearColor){b.setClearColor(this.oldClearColor,this.oldClearAlpha)}this.scene.overrideMaterial=null}};THREE.MaskPass=function(b,a){this.scene=b;this.camera=a;this.enabled=true;this.clear=true;this.needsSwap=false;this.inverse=false};THREE.MaskPass.prototype={render:function(e,f,d,g){var c=e.context;c.colorMask(false,false,false,false);c.depthMask(false);var b,a;if(this.inverse){b=0;a=1}else{b=1;a=0}c.enable(c.STENCIL_TEST);c.stencilOp(c.REPLACE,c.REPLACE,c.REPLACE);c.stencilFunc(c.ALWAYS,b,4294967295);c.clearStencil(a);e.render(this.scene,this.camera,d,this.clear);e.render(this.scene,this.camera,f,this.clear);c.colorMask(true,true,true,true);c.depthMask(true);c.stencilFunc(c.EQUAL,1,4294967295);c.stencilOp(c.KEEP,c.KEEP,c.KEEP)}};THREE.ClearMaskPass=function(){this.enabled=true};THREE.ClearMaskPass.prototype={render:function(c,d,b,e){var a=c.context;a.disable(a.STENCIL_TEST)}};THREE.ShaderPass=function(a,b){this.textureID=(b!==undefined)?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=false;this.enabled=true;this.needsSwap=true;this.clear=false;this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene();this.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);this.scene.add(this.quad)};THREE.ShaderPass.prototype={render:function(b,c,a,d){if(this.uniforms[this.textureID]){this.uniforms[this.textureID].value=a}this.quad.material=this.material;if(this.renderToScreen){b.render(this.scene,this.camera)}else{b.render(this.scene,this.camera,c,this.clear)}}};
